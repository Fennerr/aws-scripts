{
    "associate_service_role_to_account": {
        "roleArn": {
            "Description": "The Amazon Resource Name (ARN) of the service role to associate with IoT Greengrass for your Amazon Web Services account in this Amazon Web Services Region.",
            "Type": "string",
            "Required": true
        }
    },
    "batch_associate_client_device_with_core_device": {
        "entries": {
            "Description": "The list of client devices to associate.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        }
    },
    "batch_disassociate_client_device_from_core_device": {
        "entries": {
            "Description": "The list of client devices to disassociate.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        }
    },
    "cancel_deployment": {
        "deploymentId": {
            "Description": "The ID of the deployment.",
            "Type": "string",
            "Required": true
        }
    },
    "create_component_version": {
        "inlineRecipe": {
            "Description": "The recipe to use to create the component. The recipe defines the component's metadata, parameters, dependencies, lifecycle, artifacts, and platform compatibility.\nYou must specify either inlineRecipe or lambdaFunction .",
            "Type": "bytes",
            "Required": false
        },
        "lambdaFunction": {
            "Description": "The parameters to create a component from a Lambda function.\nYou must specify either inlineRecipe or lambdaFunction .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "tags": {
            "Description": "A list of key-value pairs that contain metadata for the resource. For more information, see Tag your resources in the IoT Greengrass V2 Developer Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you can provide to ensure that the request is idempotent. Idempotency means that the request is successfully processed only once, even if you send the request multiple times. When a request succeeds, and you specify the same client token for subsequent successful requests, the IoT Greengrass V2 service returns the successful response that it caches from the previous request. IoT Greengrass V2 caches successful responses for idempotent requests for up to 8 hours.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_deployment": {
        "targetArn": {
            "Description": "The ARN of the target IoT thing or thing group.",
            "Type": "string",
            "Required": true
        },
        "deploymentName": {
            "Description": "The name of the deployment.",
            "Type": "string",
            "Required": false
        },
        "components": {
            "Description": "The components to deploy. This is a dictionary, where each key is the name of a component, and each key's value is the version and configuration to deploy for that component.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "iotJobConfiguration": {
            "Description": "The job configuration for the deployment configuration. The job configuration specifies the rollout, timeout, and stop configurations for the deployment configuration.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "deploymentPolicies": {
            "Description": "The deployment policies for the deployment. These policies define how the deployment updates components and handles failure.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "tags": {
            "Description": "A list of key-value pairs that contain metadata for the resource. For more information, see Tag your resources in the IoT Greengrass V2 Developer Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you can provide to ensure that the request is idempotent. Idempotency means that the request is successfully processed only once, even if you send the request multiple times. When a request succeeds, and you specify the same client token for subsequent successful requests, the IoT Greengrass V2 service returns the successful response that it caches from the previous request. IoT Greengrass V2 caches successful responses for idempotent requests for up to 8 hours.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_component": {
        "arn": {
            "Description": "The ARN of the component version.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_core_device": {
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_deployment": {
        "deploymentId": {
            "Description": "The ID of the deployment.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_component": {
        "arn": {
            "Description": "The ARN of the component version.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_service_role_from_account": "No parameters defined",
    "get_component": {
        "recipeOutputFormat": {
            "Description": "The format of the recipe.",
            "Type": "string",
            "Required": false
        },
        "arn": {
            "Description": "The ARN of the component version.",
            "Type": "string",
            "Required": true
        }
    },
    "get_component_version_artifact": {
        "arn": {
            "Description": "The ARN of the component version. Specify the ARN of a public or a Lambda component version.",
            "Type": "string",
            "Required": true
        },
        "artifactName": {
            "Description": "The name of the artifact.\nYou can use the GetComponent operation to download the component recipe, which includes the URI of the artifact. The artifact name is the section of the URI after the scheme. For example, in the artifact URI greengrass:SomeArtifact.zip, the artifact name is SomeArtifact.zip .",
            "Type": "string",
            "Required": true
        }
    },
    "get_connectivity_info": {
        "thingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        }
    },
    "get_core_device": {
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        }
    },
    "get_deployment": {
        "deploymentId": {
            "Description": "The ID of the deployment.",
            "Type": "string",
            "Required": true
        }
    },
    "get_service_role_for_account": "No parameters defined",
    "list_client_devices_associated_with_core_device": {
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_component_versions": {
        "arn": {
            "Description": "The ARN of the component.",
            "Type": "string",
            "Required": true
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_components": {
        "scope": {
            "Description": "The scope of the components to list.\nDefault: PRIVATE",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_core_devices": {
        "thingGroupArn": {
            "Description": "The ARN of the IoT thing group by which to filter. If you specify this parameter, the list includes only core devices that have successfully deployed a deployment that targets the thing group. When you remove a core device from a thing group, the list continues to include that core device.",
            "Type": "string",
            "Required": false
        },
        "status": {
            "Description": "The core device status by which to filter. If you specify this parameter, the list includes only core devices that have this status. Choose one of the following options:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_deployments": {
        "targetArn": {
            "Description": "The ARN of the target IoT thing or thing group.",
            "Type": "string",
            "Required": false
        },
        "historyFilter": {
            "Description": "The filter for the list of deployments. Choose one of the following options:\nDefault: LATEST_ONLY",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_effective_deployments": {
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_installed_components": {
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        },
        "maxResults": {
            "Description": "The maximum number of results to be returned per paginated request.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to be used for the next set of paginated results.",
            "Type": "string",
            "Required": false
        },
        "topologyFilter": {
            "Description": "The filter for the list of components. Choose from the following options:\nDefault: ROOT",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "list_tags_for_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        }
    },
    "resolve_component_candidates": {
        "platform": {
            "Description": "The platform to use to resolve compatible components.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "componentCandidates": {
            "Description": "The list of components to resolve.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "tag_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource to tag.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "A list of key-value pairs that contain metadata for the resource. For more information, see Tag your resources in the IoT Greengrass V2 Developer Guide .",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "untag_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource to untag.",
            "Type": "string",
            "Required": true
        },
        "tagKeys": {
            "Description": "A list of keys for tags to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_connectivity_info": {
        "thingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        },
        "connectivityInfo": {
            "Description": "The connectivity information for the core device.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "paginate": {
        "coreDeviceThingName": {
            "Description": "The name of the core device. This is also the name of the IoT thing.",
            "Type": "string",
            "Required": true
        },
        "topologyFilter": {
            "Description": "The filter for the list of components. Choose from the following options:\nDefault: ROOT",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}