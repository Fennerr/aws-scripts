{
    "associate_aws_account_with_partner_account": {
        "Sidewalk": {
            "Description": "The Sidewalk account credentials.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "associate_multicast_group_with_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "MulticastGroupId": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_wireless_device_with_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "WirelessDeviceId": {
            "Description": "The ID of the wireless device.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_wireless_device_with_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "WirelessDeviceId": {
            "Description": "The ID of the wireless device.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_wireless_device_with_thing": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        },
        "ThingArn": {
            "Description": "The ARN of the thing to associate with the wireless device.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_wireless_gateway_with_certificate": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        },
        "IotCertificateId": {
            "Description": "The ID of the certificate to associate with the wireless gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_wireless_gateway_with_thing": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        },
        "ThingArn": {
            "Description": "The ARN of the thing to associate with the wireless gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "cancel_multicast_group_session": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        }
    },
    "create_destination": {
        "Name": {
            "Description": "The name of the new resource.",
            "Type": "string",
            "Required": true
        },
        "ExpressionType": {
            "Description": "The type of value in Expression .",
            "Type": "string",
            "Required": true
        },
        "Expression": {
            "Description": "The rule name or topic rule to send messages to.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The ARN of the IAM Role that authorizes the destination.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to attach to the new destination. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_device_profile": {
        "Name": {
            "Description": "The name of the new resource.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The device profile information to use to create the device profile.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to attach to the new device profile. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_fuota_task": {
        "Name": {
            "Description": "The name of a FUOTA task.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The LoRaWAN information used with a FUOTA task.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "FirmwareUpdateImage": {
            "Description": "The S3 URI points to a firmware update image that is to be used with a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "FirmwareUpdateRole": {
            "Description": "The firmware update role that is to be used with a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_multicast_group": {
        "Name": {
            "Description": "The name of the multicast group.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the multicast group.",
            "Type": "string",
            "Required": false
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The LoRaWAN information that is to be used with the multicast group.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_network_analyzer_configuration": {
        "Name": {
            "Description": "Name of the network analyzer configuration.",
            "Type": "string",
            "Required": true
        },
        "TraceContent": {
            "Description": "Trace content for your wireless gateway and wireless device resources.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "WirelessDevices": {
            "Description": "Wireless device resources to add to the network analyzer configuration. Provide the WirelessDeviceId of the resource to add in the input array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WirelessGateways": {
            "Description": "Wireless gateway resources to add to the network analyzer configuration. Provide the WirelessGatewayId of the resource to add in the input array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_service_profile": {
        "Name": {
            "Description": "The name of the new resource.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The service profile information to use to create the service profile.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to attach to the new service profile. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_wireless_device": {
        "Type": {
            "Description": "The wireless device type.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of the new resource.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "DestinationName": {
            "Description": "The name of the destination to assign to the new wireless device.",
            "Type": "string",
            "Required": true
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The device configuration information to use to create the wireless device.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to attach to the new wireless device. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_wireless_gateway": {
        "Name": {
            "Description": "The name of the new resource.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The gateway configuration information to use to create the wireless gateway.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to attach to the new wireless gateway. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_wireless_gateway_task": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        },
        "WirelessGatewayTaskDefinitionId": {
            "Description": "The ID of the WirelessGatewayTaskDefinition.",
            "Type": "string",
            "Required": true
        }
    },
    "create_wireless_gateway_task_definition": {
        "AutoCreateTasks": {
            "Description": "Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask .",
            "Type": "boolean",
            "Required": true
        },
        "Name": {
            "Description": "The name of the new resource.",
            "Type": "string",
            "Required": false
        },
        "Update": {
            "Description": "Information about the gateways to update.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClientRequestToken": {
            "Description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "delete_destination": {
        "Name": {
            "Description": "The name of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_device_profile": {
        "Id": {
            "Description": "The ID of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_analyzer_configuration": {
        "ConfigurationName": {
            "Description": "Name of the network analyzer configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_queued_messages": {
        "Id": {
            "Description": "The ID of a given wireless device for which downlink messages will be deleted.",
            "Type": "string",
            "Required": true
        },
        "MessageId": {
            "Description": "If message ID is \"*\", it cleares the entire downlink queue for a given device, specified by the wireless device ID. Otherwise, the downlink message with the specified message ID will be deleted.",
            "Type": "string",
            "Required": true
        },
        "WirelessDeviceType": {
            "Description": "The wireless device type, which can be either Sidewalk or LoRaWAN.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_service_profile": {
        "Id": {
            "Description": "The ID of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_wireless_device": {
        "Id": {
            "Description": "The ID of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_wireless_gateway": {
        "Id": {
            "Description": "The ID of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_wireless_gateway_task": {
        "Id": {
            "Description": "The ID of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_wireless_gateway_task_definition": {
        "Id": {
            "Description": "The ID of the resource to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_aws_account_from_partner_account": {
        "PartnerAccountId": {
            "Description": "The partner account ID to disassociate from the AWS account.",
            "Type": "string",
            "Required": true
        },
        "PartnerType": {
            "Description": "The partner type.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_multicast_group_from_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "MulticastGroupId": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_wireless_device_from_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "WirelessDeviceId": {
            "Description": "The ID of the wireless device.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_wireless_device_from_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "WirelessDeviceId": {
            "Description": "The ID of the wireless device.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_wireless_device_from_thing": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_wireless_gateway_from_certificate": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_wireless_gateway_from_thing": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        }
    },
    "get_destination": {
        "Name": {
            "Description": "The name of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_device_profile": {
        "Id": {
            "Description": "The ID of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_event_configuration_by_resource_types": "No parameters defined",
    "get_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        }
    },
    "get_log_levels_by_resource_types": "No parameters defined",
    "get_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        }
    },
    "get_multicast_group_session": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        }
    },
    "get_network_analyzer_configuration": {
        "ConfigurationName": {
            "Description": "Name of the network analyzer configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "get_partner_account": {
        "PartnerAccountId": {
            "Description": "The partner account ID to disassociate from the AWS account.",
            "Type": "string",
            "Required": true
        },
        "PartnerType": {
            "Description": "The partner type.",
            "Type": "string",
            "Required": true
        }
    },
    "get_position": {
        "ResourceIdentifier": {
            "Description": "Resource identifier used to retrieve the position information.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "Resource type of the resource for which position information is retrieved.",
            "Type": "string",
            "Required": true
        }
    },
    "get_position_configuration": {
        "ResourceIdentifier": {
            "Description": "Resource identifier used in a position configuration.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "Resource type of the resource for which position configuration is retrieved.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resource_event_configuration": {
        "Identifier": {
            "Description": "Resource identifier to opt in for event messaging.",
            "Type": "string",
            "Required": true
        },
        "IdentifierType": {
            "Description": "Identifier type of the particular resource identifier for event configuration.",
            "Type": "string",
            "Required": true
        },
        "PartnerType": {
            "Description": "Partner type of the resource if the identifier type is PartnerAccountId .",
            "Type": "string",
            "Required": false
        }
    },
    "get_resource_log_level": {
        "ResourceIdentifier": {
            "Description": "The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "The type of the resource, which can be WirelessDevice or WirelessGateway .",
            "Type": "string",
            "Required": true
        }
    },
    "get_service_endpoint": {
        "ServiceType": {
            "Description": "The service type for which to get endpoint information about. Can be CUPS for the Configuration and Update Server endpoint, or LNS for the LoRaWAN Network Server endpoint or CLAIM for the global endpoint.",
            "Type": "string",
            "Required": false
        }
    },
    "get_service_profile": {
        "Id": {
            "Description": "The ID of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_device": {
        "Identifier": {
            "Description": "The identifier of the wireless device to get.",
            "Type": "string",
            "Required": true
        },
        "IdentifierType": {
            "Description": "The type of identifier used in identifier .",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_device_statistics": {
        "WirelessDeviceId": {
            "Description": "The ID of the wireless device for which to get the data.",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_gateway": {
        "Identifier": {
            "Description": "The identifier of the wireless gateway to get.",
            "Type": "string",
            "Required": true
        },
        "IdentifierType": {
            "Description": "The type of identifier used in identifier .",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_gateway_certificate": {
        "Id": {
            "Description": "The ID of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_gateway_firmware_information": {
        "Id": {
            "Description": "The ID of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_gateway_statistics": {
        "WirelessGatewayId": {
            "Description": "The ID of the wireless gateway for which to get the data.",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_gateway_task": {
        "Id": {
            "Description": "The ID of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_wireless_gateway_task_definition": {
        "Id": {
            "Description": "The ID of the resource to get.",
            "Type": "string",
            "Required": true
        }
    },
    "list_destinations": {
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_device_profiles": {
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_event_configurations": {
        "ResourceType": {
            "Description": "Resource type to filter event configurations.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_fuota_tasks": {
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_multicast_groups": {
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_multicast_groups_by_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_network_analyzer_configurations": {
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_partner_accounts": {
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_position_configurations": {
        "ResourceType": {
            "Description": "Resource type for which position configurations are listed.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_queued_messages": {
        "Id": {
            "Description": "The ID of a given wireless device which the downlink message packets are being sent.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "WirelessDeviceType": {
            "Description": "The wireless device type, whic can be either Sidewalk or LoRaWAN.",
            "Type": "string",
            "Required": false
        }
    },
    "list_service_profiles": {
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource for which you want to list tags.",
            "Type": "string",
            "Required": true
        }
    },
    "list_wireless_devices": {
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "DestinationName": {
            "Description": "A filter to list only the wireless devices that use this destination.",
            "Type": "string",
            "Required": false
        },
        "DeviceProfileId": {
            "Description": "A filter to list only the wireless devices that use this device profile.",
            "Type": "string",
            "Required": false
        },
        "ServiceProfileId": {
            "Description": "A filter to list only the wireless devices that use this service profile.",
            "Type": "string",
            "Required": false
        },
        "WirelessDeviceType": {
            "Description": "A filter to list only the wireless devices that use this wireless device type.",
            "Type": "string",
            "Required": false
        },
        "FuotaTaskId": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": false
        },
        "MulticastGroupId": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": false
        }
    },
    "list_wireless_gateway_task_definitions": {
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "TaskDefinitionType": {
            "Description": "A filter to list only the wireless gateway task definitions that use this task definition type.",
            "Type": "string",
            "Required": false
        }
    },
    "list_wireless_gateways": {
        "NextToken": {
            "Description": "To retrieve the next set of results, the nextToken value from a previous response; otherwise null to receive the first set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in this operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "put_position_configuration": {
        "ResourceIdentifier": {
            "Description": "Resource identifier used to update the position configuration.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "Resource type of the resource for which you want to update the position configuration.",
            "Type": "string",
            "Required": true
        },
        "Solvers": {
            "Description": "The positioning solvers used to update the position configuration of the resource.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Destination": {
            "Description": "The position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.",
            "Type": "string",
            "Required": false
        }
    },
    "put_resource_log_level": {
        "ResourceIdentifier": {
            "Description": "The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "The type of the resource, which can be WirelessDevice or WirelessGateway .",
            "Type": "string",
            "Required": true
        },
        "LogLevel": {
            "Description": "The log level for a log message. The log levels can be disabled, or set to ERROR to display less verbose logs containing only error information, or to INFO for more detailed logs.",
            "Type": "string",
            "Required": true
        }
    },
    "reset_all_resource_log_levels": "No parameters defined",
    "reset_resource_log_level": {
        "ResourceIdentifier": {
            "Description": "The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "The type of the resource, which can be WirelessDevice or WirelessGateway .",
            "Type": "string",
            "Required": true
        }
    },
    "send_data_to_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "PayloadData": {
            "Description": "The binary to be sent to the end device, encoded in base64.",
            "Type": "string",
            "Required": true
        },
        "WirelessMetadata": {
            "Description": "Wireless metadata that is to be sent to multicast group.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "send_data_to_wireless_device": {
        "Id": {
            "Description": "The ID of the wireless device to receive the data.",
            "Type": "string",
            "Required": true
        },
        "TransmitMode": {
            "Description": "The transmit mode to use to send data to the wireless device. Can be: 0 for UM (unacknowledge mode) or 1 for AM (acknowledge mode).",
            "Type": "integer",
            "Required": true
        },
        "PayloadData": {
            "Description": "The binary to be sent to the end device, encoded in base64.",
            "Type": "string",
            "Required": true
        },
        "WirelessMetadata": {
            "Description": "Metadata about the message request.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "start_bulk_associate_wireless_device_with_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "QueryString": {
            "Description": "Query string used to search for wireless devices as part of the bulk associate and disassociate process.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "start_bulk_disassociate_wireless_device_from_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "QueryString": {
            "Description": "Query string used to search for wireless devices as part of the bulk associate and disassociate process.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "start_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "LoRaWAN": {
            "Description": "The LoRaWAN information used to start a FUOTA task.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "start_multicast_group_session": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "LoRaWAN": {
            "Description": "The LoRaWAN information used with the multicast session.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource to add tags to.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "Adds to or modifies the tags of the given resource. Tags are metadata that you can use to manage a resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "test_wireless_device": {
        "Id": {
            "Description": "The ID of the wireless device to test.",
            "Type": "string",
            "Required": true
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource to remove tags from.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of the keys of the tags to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_destination": {
        "Name": {
            "Description": "The new name of the resource.",
            "Type": "string",
            "Required": true
        },
        "ExpressionType": {
            "Description": "The type of value in Expression .",
            "Type": "string",
            "Required": false
        },
        "Expression": {
            "Description": "The new rule name or topic rule to send messages to.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A new description of the resource.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The ARN of the IAM Role that authorizes the destination.",
            "Type": "string",
            "Required": false
        }
    },
    "update_event_configuration_by_resource_types": {
        "DeviceRegistrationState": {
            "Description": "Device registration state resource type event configuration object for enabling and disabling wireless gateway topic.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Proximity": {
            "Description": "Proximity resource type event configuration object for enabling and disabling wireless gateway topic.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Join": {
            "Description": "Join resource type event configuration object for enabling and disabling wireless device topic.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ConnectionStatus": {
            "Description": "Connection status resource type event configuration object for enabling and disabling wireless gateway topic.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MessageDeliveryStatus": {
            "Description": "Message delivery status resource type event configuration object for enabling and disabling wireless device topic.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_fuota_task": {
        "Id": {
            "Description": "The ID of a FUOTA task.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of a FUOTA task.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The LoRaWAN information used with a FUOTA task.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "FirmwareUpdateImage": {
            "Description": "The S3 URI points to a firmware update image that is to be used with a FUOTA task.",
            "Type": "string",
            "Required": false
        },
        "FirmwareUpdateRole": {
            "Description": "The firmware update role that is to be used with a FUOTA task.",
            "Type": "string",
            "Required": false
        }
    },
    "update_log_levels_by_resource_types": {
        "DefaultLogLevel": {
            "Description": "The log level for a log message. The log levels can be disabled, or set to ERROR to display less verbose logs containing only error information, or to INFO for more detailed logs.",
            "Type": "string",
            "Required": false
        },
        "WirelessDeviceLogOptions": {
            "Description": "The list of wireless device log options.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WirelessGatewayLogOptions": {
            "Description": "The list of wireless gateway log options.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_multicast_group": {
        "Id": {
            "Description": "The ID of the multicast group.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of the multicast group.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The LoRaWAN information that is to be used with the multicast group.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_network_analyzer_configuration": {
        "ConfigurationName": {
            "Description": "Name of the network analyzer configuration.",
            "Type": "string",
            "Required": true
        },
        "TraceContent": {
            "Description": "Trace content for your wireless gateway and wireless device resources.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "WirelessDevicesToAdd": {
            "Description": "Wireless device resources to add to the network analyzer configuration. Provide the WirelessDeviceId of the resource to add in the input array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WirelessDevicesToRemove": {
            "Description": "Wireless device resources to remove from the network analyzer configuration. Provide the WirelessDeviceId of the resources to remove in the input array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WirelessGatewaysToAdd": {
            "Description": "Wireless gateway resources to add to the network analyzer configuration. Provide the WirelessGatewayId of the resource to add in the input array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WirelessGatewaysToRemove": {
            "Description": "Wireless gateway resources to remove from the network analyzer configuration. Provide the WirelessGatewayId of the resources to remove in the input array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Description": {
            "Description": "The description of the new resource.",
            "Type": "string",
            "Required": false
        }
    },
    "update_partner_account": {
        "Sidewalk": {
            "Description": "The Sidewalk account credentials.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "PartnerAccountId": {
            "Description": "The ID of the partner account to update.",
            "Type": "string",
            "Required": true
        },
        "PartnerType": {
            "Description": "The partner type.",
            "Type": "string",
            "Required": true
        }
    },
    "update_position": {
        "ResourceIdentifier": {
            "Description": "Resource identifier of the resource for which position is updated.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "Resource type of the resource for which position is updated.",
            "Type": "string",
            "Required": true
        },
        "Position": {
            "Description": "The position information of the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_resource_event_configuration": {
        "Identifier": {
            "Description": "Resource identifier to opt in for event messaging.",
            "Type": "string",
            "Required": true
        },
        "IdentifierType": {
            "Description": "Identifier type of the particular resource identifier for event configuration.",
            "Type": "string",
            "Required": true
        },
        "PartnerType": {
            "Description": "Partner type of the resource if the identifier type is PartnerAccountId",
            "Type": "string",
            "Required": false
        },
        "DeviceRegistrationState": {
            "Description": "Event configuration for the device registration state event.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Proximity": {
            "Description": "Event configuration for the proximity event.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Join": {
            "Description": "Event configuration for the join event.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ConnectionStatus": {
            "Description": "Event configuration for the connection status event.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MessageDeliveryStatus": {
            "Description": "Event configuration for the message delivery status event.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_wireless_device": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        },
        "DestinationName": {
            "Description": "The name of the new destination for the device.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "The new name of the resource.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A new description of the resource.",
            "Type": "string",
            "Required": false
        },
        "LoRaWAN": {
            "Description": "The updated wireless device's configuration.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_wireless_gateway": {
        "Id": {
            "Description": "The ID of the resource to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The new name of the resource.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A new description of the resource.",
            "Type": "string",
            "Required": false
        },
        "JoinEuiFilters": {
            "Description": "A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NetIdFilters": {
            "Description": "A list of NetId values that are used by LoRa gateways to filter the uplink frames.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    }
}