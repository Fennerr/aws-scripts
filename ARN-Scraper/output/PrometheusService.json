{
    "create_alert_manager_definition": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "data": {
            "Description": "The alert manager definition data.",
            "Type": "bytes",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace in which to create the alert manager definition.",
            "Type": "string",
            "Required": true
        }
    },
    "create_logging_configuration": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "logGroupArn": {
            "Description": "The ARN of the CW log group to which the vended log data will be published.",
            "Type": "string",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace to vend logs to.",
            "Type": "string",
            "Required": true
        }
    },
    "create_rule_groups_namespace": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "data": {
            "Description": "The namespace data that define the rule groups.",
            "Type": "bytes",
            "Required": true
        },
        "name": {
            "Description": "The rule groups namespace name.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "Optional, user-provided tags for this rule groups namespace.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "workspaceId": {
            "Description": "The ID of the workspace in which to create the rule group namespace.",
            "Type": "string",
            "Required": true
        }
    },
    "create_workspace": {
        "alias": {
            "Description": "An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique.",
            "Type": "string",
            "Required": false
        },
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "tags": {
            "Description": "Optional, user-provided tags for this workspace.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "delete_alert_manager_definition": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "workspaceId": {
            "Description": "The ID of the workspace in which to delete the alert manager definition.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_logging_configuration": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "workspaceId": {
            "Description": "The ID of the workspace to vend logs to.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_rule_groups_namespace": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The rule groups namespace name.",
            "Type": "string",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace to delete rule group definition.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_workspace": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "workspaceId": {
            "Description": "The ID of the workspace to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_alert_manager_definition": {
        "workspaceId": {
            "Description": "The ID of the workspace to describe.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_logging_configuration": {
        "workspaceId": {
            "Description": "The ID of the workspace to vend logs to.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_rule_groups_namespace": {
        "name": {
            "Description": "The rule groups namespace.",
            "Type": "string",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace to describe.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_workspace": {
        "workspaceId": {
            "Description": "The ID of the workspace to describe.",
            "Type": "string",
            "Required": true
        }
    },
    "list_rule_groups_namespaces": {
        "maxResults": {
            "Description": "Maximum results to return in response (default=100, maximum=1000).",
            "Type": "integer",
            "Required": false
        },
        "name": {
            "Description": "Optional filter for rule groups namespace name. Only the rule groups namespace that begin with this value will be returned.",
            "Type": "string",
            "Required": false
        },
        "nextToken": {
            "Description": "Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListRuleGroupsNamespaces request.",
            "Type": "string",
            "Required": false
        },
        "workspaceId": {
            "Description": "The ID of the workspace.",
            "Type": "string",
            "Required": true
        }
    },
    "list_tags_for_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        }
    },
    "list_workspaces": {
        "alias": {
            "Description": "Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "Maximum results to return in response (default=100, maximum=1000).",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.",
            "Type": "string",
            "Required": false
        }
    },
    "put_alert_manager_definition": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "data": {
            "Description": "The alert manager definition data.",
            "Type": "bytes",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace in which to update the alert manager definition.",
            "Type": "string",
            "Required": true
        }
    },
    "put_rule_groups_namespace": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "data": {
            "Description": "The namespace data that define the rule groups.",
            "Type": "bytes",
            "Required": true
        },
        "name": {
            "Description": "The rule groups namespace name.",
            "Type": "string",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace in which to update the rule group namespace.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "The list of tags assigned to the resource.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "untag_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        },
        "tagKeys": {
            "Description": "One or more tag keys",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_logging_configuration": {
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "logGroupArn": {
            "Description": "The ARN of the CW log group to which the vended log data will be published.",
            "Type": "string",
            "Required": true
        },
        "workspaceId": {
            "Description": "The ID of the workspace to vend logs to.",
            "Type": "string",
            "Required": true
        }
    },
    "update_workspace_alias": {
        "alias": {
            "Description": "The new alias of the workspace.",
            "Type": "string",
            "Required": false
        },
        "clientToken": {
            "Description": "Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "workspaceId": {
            "Description": "The ID of the workspace being updated.",
            "Type": "string",
            "Required": true
        }
    },
    "paginate": {
        "alias": {
            "Description": "Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "workspaceId": {
            "Description": "The ID of the workspace to describe.",
            "Type": "string",
            "Required": true
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}