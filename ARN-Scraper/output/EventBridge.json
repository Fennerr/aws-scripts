{
    "activate_event_source": {
        "Name": {
            "Description": "The name of the partner event source to activate.",
            "Type": "string",
            "Required": true
        }
    },
    "cancel_replay": {
        "ReplayName": {
            "Description": "The name of the replay to cancel.",
            "Type": "string",
            "Required": true
        }
    },
    "create_api_destination": {
        "Name": {
            "Description": "The name for the API destination to create.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the API destination to create.",
            "Type": "string",
            "Required": false
        },
        "ConnectionArn": {
            "Description": "The ARN of the connection to use for the API destination. The destination endpoint must support the authorization type specified for the connection.",
            "Type": "string",
            "Required": true
        },
        "InvocationEndpoint": {
            "Description": "The URL to the HTTP invocation endpoint for the API destination.",
            "Type": "string",
            "Required": true
        },
        "HttpMethod": {
            "Description": "The method to use for the request to the HTTP invocation endpoint.",
            "Type": "string",
            "Required": true
        },
        "InvocationRateLimitPerSecond": {
            "Description": "The maximum number of requests per second to send to the HTTP invocation endpoint.",
            "Type": "integer",
            "Required": false
        }
    },
    "create_archive": {
        "ArchiveName": {
            "Description": "The name for the archive to create.",
            "Type": "string",
            "Required": true
        },
        "EventSourceArn": {
            "Description": "The ARN of the event bus that sends events to the archive.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the archive.",
            "Type": "string",
            "Required": false
        },
        "EventPattern": {
            "Description": "An event pattern to use to filter events sent to the archive.",
            "Type": "string",
            "Required": false
        },
        "RetentionDays": {
            "Description": "The number of days to retain events for. Default value is 0. If set to 0, events are retained indefinitely",
            "Type": "integer",
            "Required": false
        }
    },
    "create_connection": {
        "Name": {
            "Description": "The name for the connection to create.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the connection to create.",
            "Type": "string",
            "Required": false
        },
        "AuthorizationType": {
            "Description": "The type of authorization to use for the connection.",
            "Type": "string",
            "Required": true
        },
        "AuthParameters": {
            "Description": "A CreateConnectionAuthRequestParameters object that contains the authorization parameters to use to authorize with the endpoint.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "create_endpoint": {
        "Name": {
            "Description": "The name of the global endpoint. For example, \"Name\":\"us-east-2-custom_bus_A-endpoint\" .",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the global endpoint.",
            "Type": "string",
            "Required": false
        },
        "RoutingConfig": {
            "Description": "Configure the routing policy, including the health check and secondary Region..",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ReplicationConfig": {
            "Description": "Enable or disable event replication.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EventBuses": {
            "Description": "Define the event buses used.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "RoleArn": {
            "Description": "The ARN of the role used for replication.",
            "Type": "string",
            "Required": false
        }
    },
    "create_event_bus": {
        "Name": {
            "Description": "The name of the new event bus.\nEvent bus names cannot contain the / character. You can't use the name default for a custom event bus, as this name is already used for your account's default event bus.\nIf this is a partner event bus, the name must exactly match the name of the partner event source that this event bus is matched to.",
            "Type": "string",
            "Required": true
        },
        "EventSourceName": {
            "Description": "If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "Tags to associate with the event bus.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_partner_event_source": {
        "Name": {
            "Description": "The name of the partner event source. This name must be unique and must be in the format `` partner_name /event_namespace /event_name ``. The Amazon Web Services account that wants to use this partner event source must create a partner event bus with a name that matches the name of the partner event source.",
            "Type": "string",
            "Required": true
        },
        "Account": {
            "Description": "The Amazon Web Services account ID that is permitted to create a matching partner event bus for this partner event source.",
            "Type": "string",
            "Required": true
        }
    },
    "deactivate_event_source": {
        "Name": {
            "Description": "The name of the partner event source to deactivate.",
            "Type": "string",
            "Required": true
        }
    },
    "deauthorize_connection": {
        "Name": {
            "Description": "The name of the connection to remove authorization from.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_api_destination": {
        "Name": {
            "Description": "The name of the destination to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_archive": {
        "ArchiveName": {
            "Description": "The name of the archive to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_connection": {
        "Name": {
            "Description": "The name of the connection to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_endpoint": {
        "Name": {
            "Description": "The name of the endpoint you want to delete. For example, \"Name\":\"us-east-2-custom_bus_A-endpoint\" ..",
            "Type": "string",
            "Required": true
        }
    },
    "delete_event_bus": {
        "Name": {
            "Description": "The name of the event bus to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_partner_event_source": {
        "Name": {
            "Description": "The name of the event source to delete.",
            "Type": "string",
            "Required": true
        },
        "Account": {
            "Description": "The Amazon Web Services account ID of the Amazon Web Services customer that the event source was created for.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_rule": {
        "Name": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "Force": {
            "Description": "If this is a managed rule, created by an Amazon Web Services service on your behalf, you must specify Force as True to delete the rule. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using DescribeRule or ListRules and checking the ManagedBy field of the response.",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_api_destination": {
        "Name": {
            "Description": "The name of the API destination to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_archive": {
        "ArchiveName": {
            "Description": "The name of the archive to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_connection": {
        "Name": {
            "Description": "The name of the connection to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_endpoint": {
        "Name": {
            "Description": "The name of the endpoint you want to get information about. For example, \"Name\":\"us-east-2-custom_bus_A-endpoint\" .",
            "Type": "string",
            "Required": true
        },
        "HomeRegion": {
            "Description": "The primary Region of the endpoint you want to get information about. For example \"HomeRegion\": \"us-east-1\" .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_event_bus": {
        "Name": {
            "Description": "The name or ARN of the event bus to show details for. If you omit this, the default event bus is displayed.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_event_source": {
        "Name": {
            "Description": "The name of the partner event source to display the details of.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_partner_event_source": {
        "Name": {
            "Description": "The name of the event source to display.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_replay": {
        "ReplayName": {
            "Description": "The name of the replay to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_rule": {
        "Name": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        }
    },
    "disable_rule": {
        "Name": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        }
    },
    "enable_rule": {
        "Name": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        }
    },
    "list_api_destinations": {
        "NamePrefix": {
            "Description": "A name prefix to filter results returned. Only API destinations with a name that starts with the prefix are returned.",
            "Type": "string",
            "Required": false
        },
        "ConnectionArn": {
            "Description": "The ARN of the connection specified for the API destination.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of API destinations to include in the response.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_archives": {
        "NamePrefix": {
            "Description": "A name prefix to filter the archives returned. Only archives with name that match the prefix are returned.",
            "Type": "string",
            "Required": false
        },
        "EventSourceArn": {
            "Description": "The ARN of the event source associated with the archive.",
            "Type": "string",
            "Required": false
        },
        "State": {
            "Description": "The state of the archive.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of results to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_connections": {
        "NamePrefix": {
            "Description": "A name prefix to filter results returned. Only connections with a name that starts with the prefix are returned.",
            "Type": "string",
            "Required": false
        },
        "ConnectionState": {
            "Description": "The state of the connection.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of connections to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_endpoints": {
        "NamePrefix": {
            "Description": "A value that will return a subset of the endpoints associated with this account. For example, \"NamePrefix\": \"ABC\" will return all endpoints with \"ABC\" in the name.",
            "Type": "string",
            "Required": false
        },
        "HomeRegion": {
            "Description": "The primary Region of the endpoints associated with this account. For example \"HomeRegion\": \"us-east-1\" .",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results returned by the call.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_event_buses": {
        "NamePrefix": {
            "Description": "Specifying this limits the results to only those event buses with names that start with the specified prefix.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_event_sources": {
        "NamePrefix": {
            "Description": "Specifying this limits the results to only those partner event sources with names that start with the specified prefix.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_partner_event_source_accounts": {
        "EventSourceName": {
            "Description": "The name of the partner event source to display account information about.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token returned by a previous call to this operation. Specifying this retrieves the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_partner_event_sources": {
        "NamePrefix": {
            "Description": "If you specify this, the results are limited to only those partner event sources that start with the string you specify.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token returned by a previous call to this operation. Specifying this retrieves the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "pecifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_replays": {
        "NamePrefix": {
            "Description": "A name prefix to filter the replays returned. Only replays with name that match the prefix are returned.",
            "Type": "string",
            "Required": false
        },
        "State": {
            "Description": "The state of the replay.",
            "Type": "string",
            "Required": false
        },
        "EventSourceArn": {
            "Description": "The ARN of the archive from which the events are replayed.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of replays to retrieve.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_rule_names_by_target": {
        "TargetArn": {
            "Description": "The Amazon Resource Name (ARN) of the target resource.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus to list rules for. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of results to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_rules": {
        "NamePrefix": {
            "Description": "The prefix matching the rule name.",
            "Type": "string",
            "Required": false
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus to list the rules for. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of results to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceARN": {
            "Description": "The ARN of the EventBridge resource for which you want to view tags.",
            "Type": "string",
            "Required": true
        }
    },
    "list_targets_by_rule": {
        "Rule": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The maximum number of results to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "put_events": {
        "Entries": {
            "Description": "The entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "EndpointId": {
            "Description": "The URL subdomain of the endpoint. For example, if the URL for Endpoint is abcde.veo.endpoints.event.amazonaws.com, then the EndpointId is abcde.veo .",
            "Type": "string",
            "Required": false
        }
    },
    "put_partner_events": {
        "Entries": {
            "Description": "The list of events to write to the event bus.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "put_permission": {
        "EventBusName": {
            "Description": "The name of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "Action": {
            "Description": "The action that you are enabling the other account to perform.",
            "Type": "string",
            "Required": false
        },
        "Principal": {
            "Description": "The 12-digit Amazon Web Services account ID that you are permitting to put events to your default event bus. Specify \"*\" to permit any account to put events to your default event bus.\nIf you specify \"*\" without specifying Condition, avoid creating rules that may match undesirable events. To create more secure rules, make sure that the event pattern for each rule contains an account field with a specific account ID from which to receive events. Rules with an account field do not match any events sent from other accounts.",
            "Type": "string",
            "Required": false
        },
        "StatementId": {
            "Description": "An identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this StatementId when you run RemovePermission .",
            "Type": "string",
            "Required": false
        },
        "Condition": {
            "Description": "This parameter enables you to limit the permission to accounts that fulfill a certain condition, such as being a member of a certain Amazon Web Services organization. For more information about Amazon Web Services Organizations, see What Is Amazon Web Services Organizations in the Amazon Web Services Organizations User Guide .\nIf you specify Condition with an Amazon Web Services organization ID, and specify \"*\" as the value for Principal, you grant permission to all the accounts in the named organization.\nThe Condition is a JSON string which must contain Type, Key, and Value fields.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Policy": {
            "Description": "A JSON string that describes the permission policy statement. You can include a Policy parameter in the request instead of using the StatementId , Action , Principal , or Condition parameters.",
            "Type": "string",
            "Required": false
        }
    },
    "put_rule": {
        "Name": {
            "Description": "The name of the rule that you are creating or updating.",
            "Type": "string",
            "Required": true
        },
        "ScheduleExpression": {
            "Description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\" or \"rate(5 minutes)\".",
            "Type": "string",
            "Required": false
        },
        "EventPattern": {
            "Description": "The event pattern. For more information, see EventBridge event patterns in the Amazon EventBridge User Guide .",
            "Type": "string",
            "Required": false
        },
        "State": {
            "Description": "Indicates whether the rule is enabled or disabled.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description of the rule.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule.\nIf you're setting an event bus in another account as the target and that account granted permission to your account through an organization instead of directly by the account ID, you must specify a RoleArn with proper permissions in the Target structure, instead of here in this parameter.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The list of key-value pairs to associate with the rule.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus to associate with this rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        }
    },
    "put_targets": {
        "Rule": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "Targets": {
            "Description": "The targets to update or add to the rule.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "remove_permission": {
        "StatementId": {
            "Description": "The statement ID corresponding to the account that is no longer allowed to put events to the default event bus.",
            "Type": "string",
            "Required": false
        },
        "RemoveAllPermissions": {
            "Description": "Specifies whether to remove all permissions.",
            "Type": "boolean",
            "Required": false
        },
        "EventBusName": {
            "Description": "The name of the event bus to revoke permissions for. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        }
    },
    "remove_targets": {
        "Rule": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "Ids": {
            "Description": "The IDs of the targets to remove from the rule.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Force": {
            "Description": "If this is a managed rule, created by an Amazon Web Services service on your behalf, you must specify Force as True to remove targets. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using DescribeRule or ListRules and checking the ManagedBy field of the response.",
            "Type": "boolean",
            "Required": false
        }
    },
    "start_replay": {
        "ReplayName": {
            "Description": "The name of the replay to start.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the replay to start.",
            "Type": "string",
            "Required": false
        },
        "EventSourceArn": {
            "Description": "The ARN of the archive to replay events from.",
            "Type": "string",
            "Required": true
        },
        "EventStartTime": {
            "Description": "A time stamp for the time to start replaying events. Only events that occurred between the EventStartTime and EventEndTime are replayed.",
            "Type": "datetime",
            "Required": true
        },
        "EventEndTime": {
            "Description": "A time stamp for the time to stop replaying events. Only events that occurred between the EventStartTime and EventEndTime are replayed.",
            "Type": "datetime",
            "Required": true
        },
        "Destination": {
            "Description": "A ReplayDestination object that includes details about the destination for the replay.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "tag_resource": {
        "ResourceARN": {
            "Description": "The ARN of the EventBridge resource that you're adding tags to.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of key-value pairs to associate with the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "test_event_pattern": {
        "EventPattern": {
            "Description": "The event pattern. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide .",
            "Type": "string",
            "Required": true
        },
        "Event": {
            "Description": "The event, in JSON format, to test against the event pattern. The JSON must follow the format specified in Amazon Web Services Events, and the following fields are mandatory:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "untag_resource": {
        "ResourceARN": {
            "Description": "The ARN of the EventBridge resource from which you are removing tags.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "The list of tag keys to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_api_destination": {
        "Name": {
            "Description": "The name of the API destination to update.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The name of the API destination to update.",
            "Type": "string",
            "Required": false
        },
        "ConnectionArn": {
            "Description": "The ARN of the connection to use for the API destination.",
            "Type": "string",
            "Required": false
        },
        "InvocationEndpoint": {
            "Description": "The URL to the endpoint to use for the API destination.",
            "Type": "string",
            "Required": false
        },
        "HttpMethod": {
            "Description": "The method to use for the API destination.",
            "Type": "string",
            "Required": false
        },
        "InvocationRateLimitPerSecond": {
            "Description": "The maximum number of invocations per second to send to the API destination.",
            "Type": "integer",
            "Required": false
        }
    },
    "update_archive": {
        "ArchiveName": {
            "Description": "The name of the archive to update.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description for the archive.",
            "Type": "string",
            "Required": false
        },
        "EventPattern": {
            "Description": "The event pattern to use to filter events sent to the archive.",
            "Type": "string",
            "Required": false
        },
        "RetentionDays": {
            "Description": "The number of days to retain events in the archive.",
            "Type": "integer",
            "Required": false
        }
    },
    "update_connection": {
        "Name": {
            "Description": "The name of the connection to update.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the connection.",
            "Type": "string",
            "Required": false
        },
        "AuthorizationType": {
            "Description": "The type of authorization to use for the connection.",
            "Type": "string",
            "Required": false
        },
        "AuthParameters": {
            "Description": "The authorization parameters to use for the connection.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_endpoint": {
        "Name": {
            "Description": "The name of the endpoint you want to update.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the endpoint.",
            "Type": "string",
            "Required": false
        },
        "RoutingConfig": {
            "Description": "Configure the routing policy, including the health check and secondary Region..",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ReplicationConfig": {
            "Description": "Whether event replication was enabled or disabled by this request.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EventBuses": {
            "Description": "Define event buses used for replication.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RoleArn": {
            "Description": "The ARN of the role used by event replication for this request.",
            "Type": "string",
            "Required": false
        }
    },
    "paginate": {
        "Rule": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": true
        },
        "EventBusName": {
            "Description": "The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}