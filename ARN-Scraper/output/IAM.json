{
    "add_client_id_to_open_id_connect_provider": {
        "OpenIDConnectProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider resource to add the client ID to. You can get a list of OIDC provider ARNs by using the  ListOpenIDConnectProviders operation.",
            "Type": "string",
            "Required": true
        },
        "ClientID": {
            "Description": "The client ID (also known as audience) to add to the IAM OpenID Connect provider resource.",
            "Type": "string",
            "Required": true
        }
    },
    "add_role_to_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the instance profile to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "RoleName": {
            "Description": "The name of the role to add.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "add_user_to_group": {
        "GroupName": {
            "Description": "The name of the group to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "UserName": {
            "Description": "The name of the user to add.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "attach_group_policy": {
        "GroupName": {
            "Description": "The name (friendly name, not ARN) of the group to attach the policy to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to attach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "attach_role_policy": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the role to attach the policy to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to attach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "attach_user_policy": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the IAM user to attach the policy to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to attach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "change_password": {
        "OldPassword": {
            "Description": "The IAM user's current password.",
            "Type": "string",
            "Required": true
        },
        "NewPassword": {
            "Description": "The new password. The new password must conform to the Amazon Web Services account's password policy, if one exists.\nThe regex pattern that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020 ) through the end of the ASCII character range (\\u00FF ). You can also include the tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D ) characters. Any of these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.",
            "Type": "string",
            "Required": true
        }
    },
    "create_access_key": {
        "UserName": {
            "Description": "The name of the IAM user that the new key will belong to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        }
    },
    "create_account_alias": {
        "AccountAlias": {
            "Description": "The account alias to create.\nThis parameter allows (through its regex pattern ) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.",
            "Type": "string",
            "Required": true
        }
    },
    "create_group": {
        "Path": {
            "Description": "The path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/).\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "The name of the group to create. Do not include the path in this value.\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".",
            "Type": "string",
            "Required": true
        }
    },
    "create_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the instance profile to create.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Path": {
            "Description": "The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/).\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the newly created IAM instance profile. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_login_profile": {
        "Password": {
            "Description": "The new password for the user.\nThe regex pattern that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020 ) through the end of the ASCII character range (\\u00FF ). You can also include the tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D ) characters. Any of these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.",
            "Type": "string",
            "Required": true
        },
        "PasswordResetRequired": {
            "Description": "Specifies whether the user is required to set a new password on next sign-in.",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_open_id_connect_provider": {
        "Url": {
            "Description": "The URL of the identity provider. The URL must begin with https:// and should correspond to the iss claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com. The URL should not contain a port number.\nYou cannot register the same provider multiple times in a single Amazon Web Services account. If you try to submit a URL that has already been used for an OpenID Connect provider in the Amazon Web Services account, you will get an error.",
            "Type": "string",
            "Required": true
        },
        "ClientIDList": {
            "Description": "Provides a list of client IDs, also known as audiences. When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. This is the value that's sent as the client_id parameter on OAuth requests.\nYou can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider.\nThere is no defined format for a client ID. The CreateOpenIDConnectProviderRequest operation accepts client IDs up to 255 characters long.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ThumbprintList": {
            "Description": "A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificates. Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.\nThe server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.\nYou must provide at least one thumbprint when creating an IAM OIDC provider. For example, assume that the OIDC provider is server.example.com and the provider stores its keys at https://keys.server.example.com/openid-connect. In that case, the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com.\nFor more information about obtaining the OIDC provider thumbprint, see Obtaining the thumbprint for an OpenID Connect provider in the IAM User Guide .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new IAM OpenID Connect (OIDC) provider. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_policy": {
        "PolicyName": {
            "Description": "The name of the policy document.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "The policy document.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "create_policy_version": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "The JSON policy document that you want to use as the content for this new version of the policy.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SetAsDefault": {
            "Description": "Specifies whether to set this version as the policy's default version.\nWhen this parameter is true, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_role": {
        "Path": {
            "Description": "The path to the role. For more information about paths, see IAM Identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/).\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "RoleName": {
            "Description": "The name of the role to create.\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".",
            "Type": "string",
            "Required": true
        },
        "AssumeRolePolicyDocument": {
            "Description": "The trust relationship policy document that grants an entity permission to assume the role.\nIn IAM, you must provide a JSON policy that has been converted to a string. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\nUpon success, the response includes the same trust policy in JSON format.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Description": {
            "Description": "A description of the role.",
            "Type": "string",
            "Required": false
        },
        "MaxSessionDuration": {
            "Description": "The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.\nAnyone who assumes the role from the or API can use the DurationSeconds API parameter or the duration-seconds CLI parameter to request a longer session. The MaxSessionDuration setting determines the maximum duration that can be requested using the DurationSeconds parameter. If users don't specify a value for the DurationSeconds parameter, their security credentials are valid for one hour by default. This applies when you use the AssumeRole* API operations or the assume-role* CLI operations but does not apply when you use those operations to create a console URL. For more information, see Using IAM roles in the IAM User Guide .",
            "Type": "integer",
            "Required": false
        },
        "PermissionsBoundary": {
            "Description": "The ARN of the policy that is used to set the permissions boundary for the role.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new role. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_saml_provider": {
        "SAMLMetadataDocument": {
            "Description": "An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.\nFor more information, see About SAML 2.0-based federation in the IAM User Guide",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of the provider to create.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_service_linked_role": {
        "AWSServiceName": {
            "Description": "The service principal for the Amazon Web Services service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com .\nService principals are unique and case-sensitive. To find the exact service principal for your service-linked role, see Amazon Web Services services that work with IAM in the IAM User Guide. Look for the services that have Yes in the Service-Linked Role column. Choose the Yes link to view the service-linked role documentation for that service.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the role.",
            "Type": "string",
            "Required": false
        },
        "CustomSuffix": {
            "Description": "A string that you provide, which is combined with the service-provided prefix to form the complete role name. If you make multiple requests for the same service, then you must supply a different CustomSuffix for each request. Otherwise the request fails with a duplicate role name error. For example, you could add -1 or -debug to the suffix.\nSome services do not support the CustomSuffix parameter. If you provide an optional suffix and the operation fails, try the operation again without the suffix.",
            "Type": "string",
            "Required": false
        }
    },
    "create_service_specific_credential": {
        "UserName": {
            "Description": "The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "ServiceName": {
            "Description": "The name of the Amazon Web Services service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.",
            "Type": "string",
            "Required": true
        }
    },
    "create_user": {
        "Path": {
            "Description": "The path for the user name. For more information about paths, see IAM identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/).\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "UserName": {
            "Description": "The name of the user to create.\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".",
            "Type": "string",
            "Required": true
        },
        "PermissionsBoundary": {
            "Description": "The ARN of the policy that is used to set the permissions boundary for the user.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_virtual_mfa_device": {
        "Path": {
            "Description": "The path for the virtual MFA device. For more information about paths, see IAM identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/).\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "VirtualMFADeviceName": {
            "Description": "The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new IAM virtual MFA device. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "deactivate_mfa_device": {
        "UserName": {
            "Description": "The name of the user whose MFA device you want to deactivate.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SerialNumber": {
            "Description": "The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_access_key": {
        "UserName": {
            "Description": "The name of the user whose access key pair you want to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "AccessKeyId": {
            "Description": "The access key ID for the access key ID and secret access key you want to delete.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_account_alias": {
        "AccountAlias": {
            "Description": "The name of the account alias to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_account_password_policy": "No parameters defined",
    "delete_group": {
        "GroupName": {
            "Description": "The name of the IAM group to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_group_policy": {
        "GroupName": {
            "Description": "The name (friendly name, not ARN) identifying the group that the policy is embedded in.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name identifying the policy document to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the instance profile to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_login_profile": {
        "UserName": {
            "Description": "The name of the user whose password you want to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_open_id_connect_provider": {
        "OpenIDConnectProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM OpenID Connect provider resource object to delete. You can get a list of OpenID Connect provider resource ARNs by using the  ListOpenIDConnectProviders operation.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_policy": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to delete.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "delete_policy_version": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy from which you want to delete a version.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The policy version to delete.\nThis parameter allows (through its regex pattern ) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .",
            "Type": "string",
            "Required": true
        }
    },
    "delete_role": {
        "RoleName": {
            "Description": "The name of the role to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_role_permissions_boundary": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the IAM role from which you want to remove the permissions boundary.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_role_policy": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) identifying the role that the policy is embedded in.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the inline policy to delete from the specified IAM role.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_saml_provider": {
        "SAMLProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the SAML provider to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_server_certificate": {
        "ServerCertificateName": {
            "Description": "The name of the server certificate you want to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_service_linked_role": {
        "RoleName": {
            "Description": "The name of the service-linked role to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_service_specific_credential": {
        "UserName": {
            "Description": "The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "ServiceSpecificCredentialId": {
            "Description": "The unique identifier of the service-specific credential. You can get this value by calling  ListServiceSpecificCredentials .\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_signing_certificate": {
        "UserName": {
            "Description": "The name of the user the signing certificate belongs to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "CertificateId": {
            "Description": "The ID of the signing certificate to delete.\nThe format of this parameter, as described by its regex pattern, is a string of characters that can be upper- or lower-cased letters or digits.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_ssh_public_key": {
        "UserName": {
            "Description": "The name of the IAM user associated with the SSH public key.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SSHPublicKeyId": {
            "Description": "The unique identifier for the SSH public key.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_user": {
        "UserName": {
            "Description": "The name of the user to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_user_permissions_boundary": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the IAM user from which you want to remove the permissions boundary.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_user_policy": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) identifying the user that the policy is embedded in.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name identifying the policy document to delete.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "delete_virtual_mfa_device": {
        "SerialNumber": {
            "Description": "The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-",
            "Type": "string",
            "Required": true
        }
    },
    "detach_group_policy": {
        "GroupName": {
            "Description": "The name (friendly name, not ARN) of the IAM group to detach the policy from.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to detach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "detach_role_policy": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the IAM role to detach the policy from.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to detach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "detach_user_policy": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the IAM user to detach the policy from.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to detach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "enable_mfa_device": {
        "UserName": {
            "Description": "The name of the IAM user for whom you want to enable the MFA device.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SerialNumber": {
            "Description": "The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode1": {
            "Description": "An authentication code emitted by the device.\nThe format for this parameter is a string of six digits.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode2": {
            "Description": "A subsequent authentication code emitted by the device.\nThe format for this parameter is a string of six digits.",
            "Type": "string",
            "Required": true
        }
    },
    "generate_credential_report": "No parameters defined",
    "generate_organizations_access_report": {
        "EntityPath": {
            "Description": "The path of the Organizations entity (root, OU, or account). You can build an entity path using the known structure of your organization. For example, assume that your account ID is 123456789012 and its parent OU ID is ou-rge0-awsabcde. The organization root ID is r-f6g7h8i9j0example and your organization ID is o-a1b2c3d4e5. Your entity path is o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-rge0-awsabcde/123456789012 .",
            "Type": "string",
            "Required": true
        },
        "OrganizationsPolicyId": {
            "Description": "The identifier of the Organizations service control policy (SCP). This parameter is optional.\nThis ID is used to generate information about when an account principal that is limited by the SCP attempted to access an Amazon Web Services service.",
            "Type": "string",
            "Required": false
        }
    },
    "generate_service_last_accessed_details": {
        "Arn": {
            "Description": "The ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.",
            "Type": "string",
            "Required": true
        },
        "Granularity": {
            "Description": "The level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don't include this optional parameter, the operation generates service data.",
            "Type": "string",
            "Required": false
        }
    },
    "get_access_key_last_used": {
        "AccessKeyId": {
            "Description": "The identifier of an access key.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        }
    },
    "get_account_authorization_details": {
        "Filter": {
            "Description": "A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value LocalManagedPolicy to include customer managed policies.\nThe format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        }
    },
    "get_account_password_policy": "No parameters defined",
    "get_account_summary": "No parameters defined",
    "get_context_keys_for_custom_policy": {
        "PolicyInputList": {
            "Description": "A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "get_context_keys_for_principal_policy": {
        "PolicySourceArn": {
            "Description": "The ARN of a user, group, or role whose policies contain the context keys that you want listed. If you specify a user, the list includes context keys that are found in all policies that are attached to the user. The list also includes all groups that the user is a member of. If you pick a group or a role, then it includes only those context keys that are found in policies attached to that entity. Note that all parameters are shown in unencoded form here for clarity, but must be URL encoded to be included as a part of a real HTML request.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "PolicyInputList": {
            "Description": "An optional list of additional policies for which you want the list of context keys that are referenced.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "get_credential_report": "No parameters defined",
    "get_group": {
        "GroupName": {
            "Description": "The name of the group.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_group_policy": {
        "GroupName": {
            "Description": "The name of the group the policy is associated with.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the policy document to get.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "get_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the instance profile to get information about.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "get_login_profile": {
        "UserName": {
            "Description": "The name of the user whose login profile you want to retrieve.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "get_open_id_connect_provider": {
        "OpenIDConnectProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the OIDC provider resource object in IAM to get information for. You can get a list of OIDC provider resource ARNs by using the  ListOpenIDConnectProviders operation.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "get_organizations_access_report": {
        "JobId": {
            "Description": "The identifier of the request generated by the  GenerateOrganizationsAccessReport operation.",
            "Type": "string",
            "Required": true
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "SortKey": {
            "Description": "The key that is used to sort the results. If you choose the namespace key, the results are returned in alphabetical order. If you choose the time key, the results are sorted numerically by the date and time.",
            "Type": "string",
            "Required": false
        }
    },
    "get_policy": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the managed policy that you want information about.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "get_policy_version": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the managed policy that you want information about.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "Identifies the policy version to retrieve.\nThis parameter allows (through its regex pattern ) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.",
            "Type": "string",
            "Required": true
        }
    },
    "get_role": {
        "RoleName": {
            "Description": "The name of the IAM role to get information about.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "get_role_policy": {
        "RoleName": {
            "Description": "The name of the role associated with the policy.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the policy document to get.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "get_saml_provider": {
        "SAMLProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the SAML provider resource object in IAM to get information about.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "get_server_certificate": {
        "ServerCertificateName": {
            "Description": "The name of the server certificate you want to retrieve information about.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "get_service_last_accessed_details": {
        "JobId": {
            "Description": "The ID of the request generated by the  GenerateServiceLastAccessedDetails operation. The JobId returned by GenerateServiceLastAccessedDetail must be used by the same role within a session, or by the same user when used to call GetServiceLastAccessedDetail .",
            "Type": "string",
            "Required": true
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        }
    },
    "get_service_last_accessed_details_with_entities": {
        "JobId": {
            "Description": "The ID of the request generated by the GenerateServiceLastAccessedDetails operation.",
            "Type": "string",
            "Required": true
        },
        "ServiceNamespace": {
            "Description": "The service namespace for an Amazon Web Services service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.\nTo learn the service namespace for a service, see Actions, resources, and condition keys for Amazon Web Services services in the IAM User Guide. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b). For more information about service namespaces, see Amazon Web Services service namespaces in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        }
    },
    "get_service_linked_role_deletion_status": {
        "DeletionTaskId": {
            "Description": "The deletion task identifier. This identifier is returned by the  DeleteServiceLinkedRole operation in the format task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt; .",
            "Type": "string",
            "Required": true
        }
    },
    "get_ssh_public_key": {
        "UserName": {
            "Description": "The name of the IAM user associated with the SSH public key.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SSHPublicKeyId": {
            "Description": "The unique identifier for the SSH public key.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        },
        "Encoding": {
            "Description": "Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use SSH. To retrieve the public key in PEM format, use PEM .",
            "Type": "string",
            "Required": true
        }
    },
    "get_user": {
        "UserName": {
            "Description": "The name of the user to get information about.\nThis parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        }
    },
    "get_user_policy": {
        "UserName": {
            "Description": "The name of the user who the policy is associated with.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the policy document to get.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "list_access_keys": {
        "UserName": {
            "Description": "The name of the user.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_account_aliases": {
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_attached_group_policies": {
        "GroupName": {
            "Description": "The name (friendly name, not ARN) of the group to list attached policies for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_attached_role_policies": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the role to list attached policies for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_attached_user_policies": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the user to list attached policies for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_entities_for_policy": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "EntityFilter": {
            "Description": "The entity type to use for filtering the results.\nFor example, when EntityFilter is Role, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.",
            "Type": "string",
            "Required": false
        },
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "PolicyUsageFilter": {
            "Description": "The policy usage method to use for filtering the results.\nTo list only permissions policies, set PolicyUsageFilter to PermissionsPolicy. To list only the policies used to set permissions boundaries, set the value to PermissionsBoundary .\nThis parameter is optional. If it is not included, all policies are returned.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_group_policies": {
        "GroupName": {
            "Description": "The name of the group to list policies for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_groups": {
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. For example, the prefix /division_abc/subdivision_xyz/ gets all groups whose path starts with /division_abc/subdivision_xyz/ .\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_groups_for_user": {
        "UserName": {
            "Description": "The name of the user to list groups for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_instance_profile_tags": {
        "InstanceProfileName": {
            "Description": "The name of the IAM instance profile whose tags you want to see.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_instance_profiles": {
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. For example, the prefix /application_abc/component_xyz/ gets all instance profiles whose path starts with /application_abc/component_xyz/ .\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_instance_profiles_for_role": {
        "RoleName": {
            "Description": "The name of the role to list instance profiles for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_mfa_device_tags": {
        "SerialNumber": {
            "Description": "The unique identifier for the IAM virtual MFA device whose tags you want to see. For virtual MFA devices, the serial number is the same as the ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_mfa_devices": {
        "UserName": {
            "Description": "The name of the user whose MFA devices you want to list.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_open_id_connect_provider_tags": {
        "OpenIDConnectProviderArn": {
            "Description": "The ARN of the OpenID Connect (OIDC) identity provider whose tags you want to see.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_open_id_connect_providers": "No parameters defined",
    "list_policies": {
        "Scope": {
            "Description": "The scope to use for filtering the results.\nTo list only Amazon Web Services managed policies, set Scope to AWS. To list only the customer managed policies in your Amazon Web Services account, set Scope to Local .\nThis parameter is optional. If it is not included, or if it is set to All, all policies are returned.",
            "Type": "string",
            "Required": false
        },
        "OnlyAttached": {
            "Description": "A flag to filter the results to only the attached policies.\nWhen OnlyAttached is true, the returned list contains only the policies that are attached to an IAM user, group, or role. When OnlyAttached is false, or when the parameter is not included, all policies are returned.",
            "Type": "boolean",
            "Required": false
        },
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "PolicyUsageFilter": {
            "Description": "The policy usage method to use for filtering the results.\nTo list only permissions policies, set PolicyUsageFilter to PermissionsPolicy. To list only the policies used to set permissions boundaries, set the value to PermissionsBoundary .\nThis parameter is optional. If it is not included, all policies are returned.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_policies_granting_service_access": {
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "Arn": {
            "Description": "The ARN of the IAM identity (user, group, or role) whose policies you want to list.",
            "Type": "string",
            "Required": true
        },
        "ServiceNamespaces": {
            "Description": "The service namespace for the Amazon Web Services services whose policies you want to list.\nTo learn the service namespace for a service, see Actions, resources, and condition keys for Amazon Web Services services in the IAM User Guide. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b). For more information about service namespaces, see Amazon Web Services service namespaces in the Amazon Web Services General Reference .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "list_policy_tags": {
        "PolicyArn": {
            "Description": "The ARN of the IAM customer managed policy whose tags you want to see.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_policy_versions": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_role_policies": {
        "RoleName": {
            "Description": "The name of the role to list policies for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_role_tags": {
        "RoleName": {
            "Description": "The name of the IAM role for which you want to see the list of tags.\nThis parameter accepts (through its regex pattern ) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_roles": {
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. For example, the prefix /application_abc/component_xyz/ gets all roles whose path starts with /application_abc/component_xyz/ .\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_saml_provider_tags": {
        "SAMLProviderArn": {
            "Description": "The ARN of the Security Assertion Markup Language (SAML) identity provider whose tags you want to see.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_saml_providers": "No parameters defined",
    "list_server_certificate_tags": {
        "ServerCertificateName": {
            "Description": "The name of the IAM server certificate whose tags you want to see.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_server_certificates": {
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. For example: /company/servercerts would get all server certificates for which the path starts with /company/servercerts .\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_service_specific_credentials": {
        "UserName": {
            "Description": "The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "ServiceName": {
            "Description": "Filters the returned results to only those for the specified Amazon Web Services service. If not specified, then Amazon Web Services returns service-specific credentials for all services.",
            "Type": "string",
            "Required": false
        }
    },
    "list_signing_certificates": {
        "UserName": {
            "Description": "The name of the IAM user whose signing certificates you want to examine.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_ssh_public_keys": {
        "UserName": {
            "Description": "The name of the IAM user to list SSH public keys for. If none is specified, the UserName field is determined implicitly based on the Amazon Web Services access key used to sign the request.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_user_policies": {
        "UserName": {
            "Description": "The name of the user to list policies for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_user_tags": {
        "UserName": {
            "Description": "The name of the IAM user whose tags you want to see.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_users": {
        "PathPrefix": {
            "Description": "The path prefix for filtering the results. For example: /division_abc/subdivision_xyz/, which would get all user names whose path starts with /division_abc/subdivision_xyz/ .\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_virtual_mfa_devices": {
        "AssignmentStatus": {
            "Description": "The status (Unassigned or Assigned ) of the devices to list. If you do not specify an AssignmentStatus , the operation defaults to Any , which lists both assigned and unassigned virtual MFA devices.,",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "put_group_policy": {
        "GroupName": {
            "Description": "The name of the group to associate the policy with.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the policy document.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "The policy document.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to = IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "put_role_permissions_boundary": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the IAM role for which you want to set the permissions boundary.",
            "Type": "string",
            "Required": true
        },
        "PermissionsBoundary": {
            "Description": "The ARN of the policy that is used to set the permissions boundary for the role.",
            "Type": "string",
            "Required": true
        }
    },
    "put_role_policy": {
        "RoleName": {
            "Description": "The name of the role to associate the policy with.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the policy document.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "The policy document.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "put_user_permissions_boundary": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the IAM user for which you want to set the permissions boundary.",
            "Type": "string",
            "Required": true
        },
        "PermissionsBoundary": {
            "Description": "The ARN of the policy that is used to set the permissions boundary for the user.",
            "Type": "string",
            "Required": true
        }
    },
    "put_user_policy": {
        "UserName": {
            "Description": "The name of the user to associate the policy with.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyName": {
            "Description": "The name of the policy document.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "The policy document.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "remove_client_id_from_open_id_connect_provider": {
        "OpenIDConnectProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM OIDC provider resource to remove the client ID from. You can get a list of OIDC provider ARNs by using the  ListOpenIDConnectProviders operation.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "ClientID": {
            "Description": "The client ID (also known as audience) to remove from the IAM OIDC provider resource. For more information about client IDs, see  CreateOpenIDConnectProvider .",
            "Type": "string",
            "Required": true
        }
    },
    "remove_role_from_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the instance profile to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "RoleName": {
            "Description": "The name of the role to remove.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "remove_user_from_group": {
        "GroupName": {
            "Description": "The name of the group to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "UserName": {
            "Description": "The name of the user to remove.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "reset_service_specific_credential": {
        "UserName": {
            "Description": "The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "ServiceSpecificCredentialId": {
            "Description": "The unique identifier of the service-specific credential.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        }
    },
    "resync_mfa_device": {
        "UserName": {
            "Description": "The name of the user whose MFA device you want to resynchronize.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SerialNumber": {
            "Description": "Serial number that uniquely identifies the MFA device.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode1": {
            "Description": "An authentication code emitted by the device.\nThe format for this parameter is a sequence of six digits.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode2": {
            "Description": "A subsequent authentication code emitted by the device.\nThe format for this parameter is a sequence of six digits.",
            "Type": "string",
            "Required": true
        }
    },
    "set_default_policy_version": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy whose default version you want to set.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The version of the policy to set as the default (operative) version.\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .",
            "Type": "string",
            "Required": true
        }
    },
    "set_security_token_service_preferences": {
        "GlobalEndpointTokenVersion": {
            "Description": "The version of the global endpoint token. Version 1 tokens are valid only in Amazon Web Services Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens.\nFor information, see Activating and deactivating STS in an Amazon Web Services Region in the IAM User Guide .",
            "Type": "string",
            "Required": true
        }
    },
    "simulate_custom_policy": {
        "PolicyInputList": {
            "Description": "A list of policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy. Do not include any resource-based policies in this parameter. Any resource-based policy must be submitted with the ResourcePolicy parameter. The policies cannot be \"scope-down\" policies, such as you could include in a call to GetFederationToken or one of the AssumeRole API operations. In other words, do not use policies designed to restrict what a user can do while using the temporary credentials.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        },
        "PermissionsBoundaryPolicyInputList": {
            "Description": "The IAM permissions boundary policy to simulate. The permissions boundary sets the maximum permissions that an IAM entity can have. You can input only one permissions boundary when you pass a policy to this operation. For more information about permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide. The policy input is specified as a string that contains the complete, valid JSON text of a permissions boundary policy.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ActionNames": {
            "Description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated against each resource. Each operation must include the service identifier, such as iam:CreateUser. This operation does not support using wildcards (*) in an action name.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ResourceArns": {
            "Description": "A list of ARNs of Amazon Web Services resources to include in the simulation. If this parameter is not provided, then the value defaults to * (all resources). Each API in the ActionNames parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response. You can simulate resources that don't exist in your account.\nThe simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the ResourcePolicy parameter.\nIf you include a ResourcePolicy, then it must be applicable to all of the resources included in the simulation or you receive an invalid input error.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourcePolicy": {
            "Description": "A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ResourceOwner": {
            "Description": "An ARN representing the Amazon Web Services account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If ResourceOwner is specified, it is also used as the account owner of any ResourcePolicy included in the simulation. If the ResourceOwner parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in CallerArn. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user CallerArn .\nThe ARN for an account uses the following syntax: arn:aws:iam::*AWS-account-ID* :root. For example, to represent the account with the 112233445566 ID, use the following ARN: arn:aws:iam::112233445566-ID:root .",
            "Type": "string",
            "Required": false
        },
        "CallerArn": {
            "Description": "The ARN of the IAM user that you want to use as the simulated caller of the API operations. CallerArn is required if you include a ResourcePolicy so that the policy's Principal element has a value to use in evaluating the policy.\nYou can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.",
            "Type": "string",
            "Required": false
        },
        "ContextEntries": {
            "Description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourceHandlingOption": {
            "Description": "Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.\nEach of the EC2 scenarios requires that you specify instance, image, and security group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see Supported platforms in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        }
    },
    "simulate_principal_policy": {
        "PolicySourceArn": {
            "Description": "The Amazon Resource Name (ARN) of a user, group, or role whose policies you want to include in the simulation. If you specify a user, group, or role, the simulation includes all policies that are associated with that entity. If you specify a user, the simulation also includes all policies that are attached to any groups the user belongs to.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "PolicyInputList": {
            "Description": "An optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "PermissionsBoundaryPolicyInputList": {
            "Description": "The IAM permissions boundary policy to simulate. The permissions boundary sets the maximum permissions that the entity can have. You can input only one permissions boundary when you pass a policy to this operation. An IAM entity can only have one permissions boundary in effect at a time. For example, if a permissions boundary is attached to an entity and you pass in a different permissions boundary policy using this parameter, then the new permissions boundary policy is used for the simulation. For more information about permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide. The policy input is specified as a string containing the complete, valid JSON text of a permissions boundary policy.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ActionNames": {
            "Description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated for each resource. Each operation must include the service identifier, such as iam:CreateUser .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ResourceArns": {
            "Description": "A list of ARNs of Amazon Web Services resources to include in the simulation. If this parameter is not provided, then the value defaults to * (all resources). Each API in the ActionNames parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response. You can simulate resources that don't exist in your account.\nThe simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the ResourcePolicy parameter.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourcePolicy": {
            "Description": "A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ResourceOwner": {
            "Description": "An Amazon Web Services account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If ResourceOwner is specified, it is also used as the account owner of any ResourcePolicy included in the simulation. If the ResourceOwner parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in CallerArn . This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user CallerArn .",
            "Type": "string",
            "Required": false
        },
        "CallerArn": {
            "Description": "The ARN of the IAM user that you want to specify as the simulated caller of the API operations. If you do not specify a CallerArn, it defaults to the ARN of the user that you specify in PolicySourceArn, if you specified a user. If you include both a PolicySourceArn (for example, arn:aws:iam::123456789012:user/David ) and a CallerArn (for example, arn:aws:iam::123456789012:user/Bob ), the result is that you simulate calling the API operations as Bob, as if Bob had David's policies.\nYou can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": false
        },
        "ContextEntries": {
            "Description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourceHandlingOption": {
            "Description": "Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.\nEach of the EC2 scenarios requires that you specify instance, image, and security group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see Supported platforms in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        }
    },
    "tag_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the IAM instance profile to which you want to add tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the IAM instance profile. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_mfa_device": {
        "SerialNumber": {
            "Description": "The unique identifier for the IAM virtual MFA device to which you want to add tags. For virtual MFA devices, the serial number is the same as the ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the IAM virtual MFA device. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_open_id_connect_provider": {
        "OpenIDConnectProviderArn": {
            "Description": "The ARN of the OIDC identity provider in IAM to which you want to add tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the OIDC identity provider in IAM. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_policy": {
        "PolicyArn": {
            "Description": "The ARN of the IAM customer managed policy to which you want to add tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the IAM customer managed policy. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_role": {
        "RoleName": {
            "Description": "The name of the IAM role to which you want to add tags.\nThis parameter accepts (through its regex pattern ) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the IAM role. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_saml_provider": {
        "SAMLProviderArn": {
            "Description": "The ARN of the SAML identity provider in IAM to which you want to add tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the SAML identity provider in IAM. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_server_certificate": {
        "ServerCertificateName": {
            "Description": "The name of the IAM server certificate to which you want to add tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the IAM server certificate. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_user": {
        "UserName": {
            "Description": "The name of the IAM user to which you want to add tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of tags that you want to attach to the IAM user. Each tag consists of a key name and an associated value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_instance_profile": {
        "InstanceProfileName": {
            "Description": "The name of the IAM instance profile from which you want to remove tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified instance profile.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_mfa_device": {
        "SerialNumber": {
            "Description": "The unique identifier for the IAM virtual MFA device from which you want to remove tags. For virtual MFA devices, the serial number is the same as the ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified instance profile.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_open_id_connect_provider": {
        "OpenIDConnectProviderArn": {
            "Description": "The ARN of the OIDC provider in IAM from which you want to remove tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_policy": {
        "PolicyArn": {
            "Description": "The ARN of the IAM customer managed policy from which you want to remove tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified policy.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_role": {
        "RoleName": {
            "Description": "The name of the IAM role from which you want to remove tags.\nThis parameter accepts (through its regex pattern ) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified role.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_saml_provider": {
        "SAMLProviderArn": {
            "Description": "The ARN of the SAML identity provider in IAM from which you want to remove tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified SAML identity provider.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_server_certificate": {
        "ServerCertificateName": {
            "Description": "The name of the IAM server certificate from which you want to remove tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified IAM server certificate.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_user": {
        "UserName": {
            "Description": "The name of the IAM user from which you want to remove tags.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of key names as a simple array of strings. The tags with matching keys are removed from the specified user.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_access_key": {
        "UserName": {
            "Description": "The name of the user whose key you want to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "AccessKeyId": {
            "Description": "The access key ID of the secret access key you want to update.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        },
        "Status": {
            "Description": "The status you want to assign to the secret access key. Active means that the key can be used for programmatic calls to Amazon Web Services, while Inactive means that the key cannot be used.",
            "Type": "string",
            "Required": true
        }
    },
    "update_account_password_policy": {
        "MinimumPasswordLength": {
            "Description": "The minimum number of characters allowed in an IAM user password.\nIf you do not specify a value for this parameter, then the operation uses the default value of 6 .",
            "Type": "integer",
            "Required": false
        },
        "RequireSymbols": {
            "Description": "Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:\n! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one symbol character.",
            "Type": "boolean",
            "Required": false
        },
        "RequireNumbers": {
            "Description": "Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one numeric character.",
            "Type": "boolean",
            "Required": false
        },
        "RequireUppercaseCharacters": {
            "Description": "Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one uppercase character.",
            "Type": "boolean",
            "Required": false
        },
        "RequireLowercaseCharacters": {
            "Description": "Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one lowercase character.",
            "Type": "boolean",
            "Required": false
        },
        "AllowUsersToChangePassword": {
            "Description": "Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see Permitting IAM users to change their own passwords in the IAM User Guide .\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that IAM users in the account do not automatically have permissions to change their own password.",
            "Type": "boolean",
            "Required": false
        },
        "MaxPasswordAge": {
            "Description": "The number of days that an IAM user password is valid.\nIf you do not specify a value for this parameter, then the operation uses the default value of 0. The result is that IAM user passwords never expire.",
            "Type": "integer",
            "Required": false
        },
        "PasswordReusePrevention": {
            "Description": "Specifies the number of previous passwords that IAM users are prevented from reusing.\nIf you do not specify a value for this parameter, then the operation uses the default value of 0. The result is that IAM users are not prevented from reusing previous passwords.",
            "Type": "integer",
            "Required": false
        },
        "HardExpiry": {
            "Description": "Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_assume_role_policy": {
        "RoleName": {
            "Description": "The name of the role to update with the new policy.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "The policy that grants an entity permission to assume the role.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "update_group": {
        "GroupName": {
            "Description": "Name of the IAM group to update. If you're changing the name of the group, this is the original name.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "NewPath": {
            "Description": "New path for the IAM group. Only include this if changing the group's path.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "NewGroupName": {
            "Description": "New name for the IAM group. Only include this if changing the group's name.\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".",
            "Type": "string",
            "Required": false
        }
    },
    "update_login_profile": {
        "UserName": {
            "Description": "The name of the user whose password you want to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "Password": {
            "Description": "The new password for the specified IAM user.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\nHowever, the format can be further restricted by the account administrator by setting a password policy on the Amazon Web Services account. For more information, see  UpdateAccountPasswordPolicy .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "PasswordResetRequired": {
            "Description": "Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_open_id_connect_provider_thumbprint": {
        "OpenIDConnectProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM OIDC provider resource object for which you want to update the thumbprint. You can get a list of OIDC provider ARNs by using the  ListOpenIDConnectProviders operation.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "ThumbprintList": {
            "Description": "A list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see  CreateOpenIDConnectProvider .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_role": {
        "RoleName": {
            "Description": "The name of the role that you want to modify.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The new description that you want to apply to the specified role.",
            "Type": "string",
            "Required": false
        },
        "MaxSessionDuration": {
            "Description": "The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.\nAnyone who assumes the role from the CLI or API can use the DurationSeconds API parameter or the duration-seconds CLI parameter to request a longer session. The MaxSessionDuration setting determines the maximum duration that can be requested using the DurationSeconds parameter. If users don't specify a value for the DurationSeconds parameter, their security credentials are valid for one hour by default. This applies when you use the AssumeRole* API operations or the assume-role* CLI operations but does not apply when you use those operations to create a console URL. For more information, see Using IAM roles in the IAM User Guide .",
            "Type": "integer",
            "Required": false
        }
    },
    "update_role_description": {
        "RoleName": {
            "Description": "The name of the role that you want to modify.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The new description that you want to apply to the specified role.",
            "Type": "string",
            "Required": true
        }
    },
    "update_saml_provider": {
        "SAMLMetadataDocument": {
            "Description": "An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.",
            "Type": "string",
            "Required": true
        },
        "SAMLProviderArn": {
            "Description": "The Amazon Resource Name (ARN) of the SAML provider to update.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "update_server_certificate": {
        "ServerCertificateName": {
            "Description": "The name of the server certificate that you want to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "NewPath": {
            "Description": "The new path for the server certificate. Include this only if you are updating the server certificate's path.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "NewServerCertificateName": {
            "Description": "The new name for the server certificate. Include this only if you are updating the server certificate's name. The name of the certificate cannot contain any spaces.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        }
    },
    "update_service_specific_credential": {
        "UserName": {
            "Description": "The name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "ServiceSpecificCredentialId": {
            "Description": "The unique identifier of the service-specific credential.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        },
        "Status": {
            "Description": "The status to be assigned to the service-specific credential.",
            "Type": "string",
            "Required": true
        }
    },
    "update_signing_certificate": {
        "UserName": {
            "Description": "The name of the IAM user the signing certificate belongs to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "CertificateId": {
            "Description": "The ID of the signing certificate you want to update.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        },
        "Status": {
            "Description": "The status you want to assign to the certificate. Active means that the certificate can be used for programmatic calls to Amazon Web Services Inactive means that the certificate cannot be used.",
            "Type": "string",
            "Required": true
        }
    },
    "update_ssh_public_key": {
        "UserName": {
            "Description": "The name of the IAM user associated with the SSH public key.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SSHPublicKeyId": {
            "Description": "The unique identifier for the SSH public key.\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.",
            "Type": "string",
            "Required": true
        },
        "Status": {
            "Description": "The status to assign to the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.",
            "Type": "string",
            "Required": true
        }
    },
    "update_user": {
        "UserName": {
            "Description": "Name of the user to update. If you're changing the name of the user, this is the original user name.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "NewPath": {
            "Description": "New path for the IAM user. Include this parameter only if you're changing the user's path.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "NewUserName": {
            "Description": "New name for the user. Include this parameter only if you're changing the user's name.\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".",
            "Type": "string",
            "Required": false
        }
    },
    "upload_server_certificate": {
        "Path": {
            "Description": "The path for the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "ServerCertificateName": {
            "Description": "The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "CertificateBody": {
            "Description": "The contents of the public key certificate in PEM-encoded format.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "PrivateKey": {
            "Description": "The contents of the private key in PEM-encoded format.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "CertificateChain": {
            "Description": "The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new IAM server certificate resource. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "upload_signing_certificate": {
        "UserName": {
            "Description": "The name of the user the signing certificate is for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "CertificateBody": {
            "Description": "The contents of the signing certificate.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "upload_ssh_public_key": {
        "UserName": {
            "Description": "The name of the IAM user to associate the SSH public key with.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "SSHPublicKeyBody": {
            "Description": "The SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The minimum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "paginate": {
        "PolicySourceArn": {
            "Description": "The Amazon Resource Name (ARN) of a user, group, or role whose policies you want to include in the simulation. If you specify a user, group, or role, the simulation includes all policies that are associated with that entity. If you specify a user, the simulation also includes all policies that are attached to any groups the user belongs to.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "PolicyInputList": {
            "Description": "An optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "PermissionsBoundaryPolicyInputList": {
            "Description": "The IAM permissions boundary policy to simulate. The permissions boundary sets the maximum permissions that the entity can have. You can input only one permissions boundary when you pass a policy to this operation. An IAM entity can only have one permissions boundary in effect at a time. For example, if a permissions boundary is attached to an entity and you pass in a different permissions boundary policy using this parameter, then the new permissions boundary policy is used for the simulation. For more information about permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide. The policy input is specified as a string containing the complete, valid JSON text of a permissions boundary policy.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ActionNames": {
            "Description": "A list of names of API operations to evaluate in the simulation. Each operation is evaluated for each resource. Each operation must include the service identifier, such as iam:CreateUser .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ResourceArns": {
            "Description": "A list of ARNs of Amazon Web Services resources to include in the simulation. If this parameter is not provided, then the value defaults to * (all resources). Each API in the ActionNames parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response. You can simulate resources that don't exist in your account.\nThe simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the ResourcePolicy parameter.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourcePolicy": {
            "Description": "A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ResourceOwner": {
            "Description": "An Amazon Web Services account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If ResourceOwner is specified, it is also used as the account owner of any ResourcePolicy included in the simulation. If the ResourceOwner parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in CallerArn . This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user CallerArn .",
            "Type": "string",
            "Required": false
        },
        "CallerArn": {
            "Description": "The ARN of the IAM user that you want to specify as the simulated caller of the API operations. If you do not specify a CallerArn, it defaults to the ARN of the user that you specify in PolicySourceArn, if you specified a user. If you include both a PolicySourceArn (for example, arn:aws:iam::123456789012:user/David ) and a CallerArn (for example, arn:aws:iam::123456789012:user/Bob ), the result is that you simulate calling the API operations as Bob, as if Bob had David's policies.\nYou can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": false
        },
        "ContextEntries": {
            "Description": "A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourceHandlingOption": {
            "Description": "Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.\nEach of the EC2 scenarios requires that you specify instance, image, and security group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see Supported platforms in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "UserName": {
            "Description": "The name of the user to get information about.\nThis parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_account_password_policy": {
        "MinimumPasswordLength": {
            "Description": "The minimum number of characters allowed in an IAM user password.\nIf you do not specify a value for this parameter, then the operation uses the default value of 6 .",
            "Type": "integer",
            "Required": false
        },
        "RequireSymbols": {
            "Description": "Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:\n! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one symbol character.",
            "Type": "boolean",
            "Required": false
        },
        "RequireNumbers": {
            "Description": "Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one numeric character.",
            "Type": "boolean",
            "Required": false
        },
        "RequireUppercaseCharacters": {
            "Description": "Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one uppercase character.",
            "Type": "boolean",
            "Required": false
        },
        "RequireLowercaseCharacters": {
            "Description": "Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that passwords do not require at least one lowercase character.",
            "Type": "boolean",
            "Required": false
        },
        "AllowUsersToChangePassword": {
            "Description": "Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see Permitting IAM users to change their own passwords in the IAM User Guide .\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that IAM users in the account do not automatically have permissions to change their own password.",
            "Type": "boolean",
            "Required": false
        },
        "MaxPasswordAge": {
            "Description": "The number of days that an IAM user password is valid.\nIf you do not specify a value for this parameter, then the operation uses the default value of 0. The result is that IAM user passwords never expire.",
            "Type": "integer",
            "Required": false
        },
        "PasswordReusePrevention": {
            "Description": "Specifies the number of previous passwords that IAM users are prevented from reusing.\nIf you do not specify a value for this parameter, then the operation uses the default value of 0. The result is that IAM users are not prevented from reusing previous passwords.",
            "Type": "integer",
            "Required": false
        },
        "HardExpiry": {
            "Description": "Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.\nIf you do not specify a value for this parameter, then the operation uses the default value of false. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_server_certificate": {
        "Path": {
            "Description": "The path for the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "ServerCertificateName": {
            "Description": "The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        },
        "CertificateBody": {
            "Description": "The contents of the public key certificate in PEM-encoded format.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "PrivateKey": {
            "Description": "The contents of the private key in PEM-encoded format.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "CertificateChain": {
            "Description": "The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new IAM server certificate resource. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_signing_certificate": {
        "UserName": {
            "Description": "The name of the user the signing certificate is for.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": false
        },
        "CertificateBody": {
            "Description": "The contents of the signing certificate.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "get_available_subresources": "No parameters defined",
    "AccessKey": {
        "id": {
            "Description": "The AccessKey's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "AccessKeyPair": {
        "user_name": {
            "Description": "The AccessKeyPair's user_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "id": {
            "Description": "The AccessKeyPair's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "secret": {
            "Description": "The AccessKeyPair's secret identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "AccountPasswordPolicy": "No parameters defined",
    "AccountSummary": "No parameters defined",
    "AssumeRolePolicy": "No parameters defined",
    "CurrentUser": "No parameters defined",
    "Group": "No parameters defined",
    "GroupPolicy": {
        "group_name": {
            "Description": "The GroupPolicy's group_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The GroupPolicy's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "InstanceProfile": {
        "name": {
            "Description": "The InstanceProfile's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "LoginProfile": "No parameters defined",
    "MfaDevice": {
        "serial_number": {
            "Description": "The MfaDevice's serial_number identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Policy": {
        "name": {
            "Description": "The Policy's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "PolicyVersion": {
        "arn": {
            "Description": "The PolicyVersion's arn identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "version_id": {
            "Description": "The PolicyVersion's version_id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Role": "No parameters defined",
    "RolePolicy": {
        "role_name": {
            "Description": "The RolePolicy's role_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The RolePolicy's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "SamlProvider": {
        "arn": {
            "Description": "The SamlProvider's arn identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "ServerCertificate": {
        "name": {
            "Description": "The ServerCertificate's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "SigningCertificate": {
        "id": {
            "Description": "The SigningCertificate's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "User": "No parameters defined",
    "UserPolicy": {
        "user_name": {
            "Description": "The UserPolicy's user_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The UserPolicy's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "VirtualMfaDevice": {
        "serial_number": {
            "Description": "The VirtualMfaDevice's serial_number identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "all": "No parameters defined",
    "filter": {
        "Marker": {
            "Description": "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.",
            "Type": "string",
            "Required": false
        },
        "MaxItems": {
            "Description": "Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true, and Marker contains a value to include in the subsequent call that tells the service where to continue from.",
            "Type": "integer",
            "Required": false
        }
    },
    "limit": {
        "count": {
            "Description": "The limit to the number of resources in the iterable.",
            "Type": "integer",
            "Required": false
        }
    },
    "page_size": {
        "count": {
            "Description": "The number of items returned by each service call",
            "Type": "integer",
            "Required": false
        }
    },
    "activate": "No parameters defined",
    "deactivate": "No parameters defined",
    "delete": "No parameters defined",
    "load": "No parameters defined",
    "reload": "No parameters defined",
    "update": {
        "NewPath": {
            "Description": "New path for the IAM user. Include this parameter only if you're changing the user's path.\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "NewUserName": {
            "Description": "New name for the user. Include this parameter only if you're changing the user's name.\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both \"MyResource\" and \"myresource\".",
            "Type": "string",
            "Required": false
        }
    },
    "add_user": {
        "UserName": {
            "Description": "The name of the user to add.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "attach_policy": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to attach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "create": {
        "Path": {
            "Description": "The path for the user name. For more information about paths, see IAM identifiers in the IAM User Guide .\nThis parameter is optional. If it is not included, it defaults to a slash (/).\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.",
            "Type": "string",
            "Required": false
        },
        "PermissionsBoundary": {
            "Description": "The ARN of the policy that is used to set the permissions boundary for the user.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "detach_policy": {
        "PolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM policy you want to detach.\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "remove_user": {
        "UserName": {
            "Description": "The name of the user to remove.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "put": {
        "PolicyDocument": {
            "Description": "The policy document.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "add_role": {
        "RoleName": {
            "Description": "The name of the role to add.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "remove_role": {
        "RoleName": {
            "Description": "The name of the role to remove.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "associate": {
        "AuthenticationCode1": {
            "Description": "An authentication code emitted by the device.\nThe format for this parameter is a string of six digits.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode2": {
            "Description": "A subsequent authentication code emitted by the device.\nThe format for this parameter is a string of six digits.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate": "No parameters defined",
    "resync": {
        "AuthenticationCode1": {
            "Description": "An authentication code emitted by the device.\nThe format for this parameter is a sequence of six digits.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode2": {
            "Description": "A subsequent authentication code emitted by the device.\nThe format for this parameter is a sequence of six digits.",
            "Type": "string",
            "Required": true
        }
    },
    "attach_group": {
        "GroupName": {
            "Description": "The name (friendly name, not ARN) of the group to attach the policy to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "attach_role": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the role to attach the policy to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "attach_user": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the IAM user to attach the policy to.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "create_version": {
        "PolicyDocument": {
            "Description": "The JSON policy document that you want to use as the content for this new version of the policy.\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SetAsDefault": {
            "Description": "Specifies whether to set this version as the policy's default version.\nWhen this parameter is true, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .",
            "Type": "boolean",
            "Required": false
        }
    },
    "detach_group": {
        "GroupName": {
            "Description": "The name (friendly name, not ARN) of the IAM group to detach the policy from.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "detach_role": {
        "RoleName": {
            "Description": "The name (friendly name, not ARN) of the IAM role to detach the policy from.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "detach_user": {
        "UserName": {
            "Description": "The name (friendly name, not ARN) of the IAM user to detach the policy from.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "set_as_default": "No parameters defined",
    "add_group": {
        "GroupName": {
            "Description": "The name of the group to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    },
    "create_access_key_pair": "No parameters defined",
    "enable_mfa": {
        "SerialNumber": {
            "Description": "The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode1": {
            "Description": "An authentication code emitted by the device.\nThe format for this parameter is a string of six digits.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationCode2": {
            "Description": "A subsequent authentication code emitted by the device.\nThe format for this parameter is a string of six digits.",
            "Type": "string",
            "Required": true
        }
    },
    "remove_group": {
        "GroupName": {
            "Description": "The name of the group to update.\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-",
            "Type": "string",
            "Required": true
        }
    }
}