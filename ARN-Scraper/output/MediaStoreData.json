{
    "delete_object": {
        "Path": {
            "Description": "The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;",
            "Type": "string",
            "Required": true
        }
    },
    "describe_object": {
        "Path": {
            "Description": "The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;",
            "Type": "string",
            "Required": true
        }
    },
    "get_object": {
        "Path": {
            "Description": "The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\nFor example, to upload the file mlaw.avi to the folder path premium\\canada in the container movies, enter the path premium/canada/mlaw.avi .\nDo not include the container name in this path.\nIf the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing premium/usa subfolder. If you specify premium/canada, the service creates a canada subfolder in the premium folder. You then have two subfolders, usa and canada, in the premium folder.\nThere is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.\nFor more information about folders and how they exist in a container, see the AWS Elemental MediaStore User Guide .\nThe file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.",
            "Type": "string",
            "Required": true
        },
        "Range": {
            "Description": "The range bytes of an object to retrieve. For more information about the Range header, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35 . AWS Elemental MediaStore ignores this header for partially uploaded objects that have streaming upload availability.",
            "Type": "string",
            "Required": false
        }
    },
    "list_items": {
        "Path": {
            "Description": "The path in the container from which to retrieve items. Format: <folder name>/<folder name>/<file name>",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return per API request. For example, you submit a ListItems request with MaxResults set at 500. Although 2,000 items match your request, the service returns no more than the first 500 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value.\nIf MaxResults is not included in the request, the service defaults to pagination with a maximum of 1,000 results per page.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token that identifies which batch of results that you want to see. For example, you submit a ListItems request with MaxResults set at 500. The service returns the first batch of results (up to 500) and a NextToken value. To see the next batch of results, you can submit the ListItems request a second time and specify the NextToken value.\nTokens expire after 15 minutes.",
            "Type": "string",
            "Required": false
        }
    },
    "put_object": {
        "Body": {
            "Description": "The bytes to be stored.",
            "Type": "bytes or seekable file-like object",
            "Required": true
        },
        "Path": {
            "Description": "The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;\nFor example, to upload the file mlaw.avi to the folder path premium\\canada in the container movies, enter the path premium/canada/mlaw.avi .\nDo not include the container name in this path.\nIf the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing premium/usa subfolder. If you specify premium/canada, the service creates a canada subfolder in the premium folder. You then have two subfolders, usa and canada, in the premium folder.\nThere is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.\nFor more information about folders and how they exist in a container, see the AWS Elemental MediaStore User Guide .\nThe file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.",
            "Type": "string",
            "Required": true
        },
        "ContentType": {
            "Description": "The content type of the object.",
            "Type": "string",
            "Required": false
        },
        "CacheControl": {
            "Description": "An optional CacheControl header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .\nHeaders with a custom user-defined value are also accepted.",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "Indicates the storage class of a Put request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.",
            "Type": "string",
            "Required": false
        },
        "UploadAvailability": {
            "Description": "Indicates the availability of an object while it is still uploading. If the value is set to streaming, the object is available for downloading after some initial buffering but before the object is uploaded completely. If the value is set to standard, the object is available for downloading only when it is uploaded completely. The default value for this header is standard .\nTo use this header, you must also set the HTTP Transfer-Encoding header to chunked .",
            "Type": "string",
            "Required": false
        }
    },
    "paginate": {
        "Path": {
            "Description": "The path in the container from which to retrieve items. Format: <folder name>/<folder name>/<file name>",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}