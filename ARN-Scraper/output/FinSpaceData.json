{
    "associate_user_to_permission_group": {
        "permissionGroupId": {
            "Description": "The unique identifier for the permission group.",
            "Type": "string",
            "Required": true
        },
        "userId": {
            "Description": "The unique identifier for the user.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_changeset": {
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "datasetId": {
            "Description": "The unique identifier for the FinSpace Dataset where the Changeset will be created.",
            "Type": "string",
            "Required": true
        },
        "changeType": {
            "Description": "The option to indicate how a Changeset will be applied to a Dataset.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "sourceParams": {
            "Description": "Options that define the location of the data being ingested (s3SourcePath ) and the source of the changeset (sourceType ).\nBoth s3SourcePath and sourceType are required attributes.\nHere is an example of how you could specify the sourceParams :\nThe S3 path that you specify must allow the FinSpace role access. To do that, you first need to configure the IAM policy on S3 bucket. For more information, see Loading data from an Amazon S3 Bucket using the FinSpace API section.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "formatParams": {
            "Description": "Options that define the structure of the source file(s) including the format type (formatType ), header row (withHeader ), data separation character (separator ) and the type of compression (compression ).\nHere is an example of how you could specify the formatParams :\nNote that if you only provide formatType as CSV, the rest of the attributes will automatically default to CSV values as following:\nFor more information about supported file formats, see Supported Data Types and File Formats in the FinSpace User Guide.",
            "Type": "dict",
            "Required": true,
            "dict variables": [
                {},
                {}
            ]
        }
    },
    "create_data_view": {
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "datasetId": {
            "Description": "The unique Dataset identifier that is used to create a Dataview.",
            "Type": "string",
            "Required": true
        },
        "autoUpdate": {
            "Description": "Flag to indicate Dataview should be updated automatically.",
            "Type": "boolean",
            "Required": false
        },
        "sortColumns": {
            "Description": "Columns to be used for sorting the data.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "partitionColumns": {
            "Description": "Ordered set of column names used to partition data.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "asOfTimestamp": {
            "Description": "Beginning time to use for the Dataview. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.",
            "Type": "integer",
            "Required": false
        },
        "destinationTypeParams": {
            "Description": "Options that define the destination type for the Dataview.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "create_dataset": {
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "datasetTitle": {
            "Description": "Display title for a FinSpace Dataset.",
            "Type": "string",
            "Required": true
        },
        "kind": {
            "Description": "The format in which Dataset data is structured.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "datasetDescription": {
            "Description": "Description of a Dataset.",
            "Type": "string",
            "Required": false
        },
        "ownerInfo": {
            "Description": "Contact information for a Dataset owner.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "permissionGroupParams": {
            "Description": "Permission group parameters for Dataset permissions.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "alias": {
            "Description": "The unique resource identifier for a Dataset.",
            "Type": "string",
            "Required": false
        },
        "schemaDefinition": {
            "Description": "Definition for a schema on a tabular Dataset.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_permission_group": {
        "name": {
            "Description": "The name of the permission group.",
            "Type": "string",
            "Required": true
        },
        "description": {
            "Description": "A brief description for the permission group.",
            "Type": "string",
            "Required": false
        },
        "applicationPermissions": {
            "Description": "The option to indicate FinSpace application permissions that are granted to a specific group.",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_user": {
        "emailAddress": {
            "Description": "The email address of the user that you want to register. The email address serves as a uniquer identifier for each user and cannot be changed after it's created.",
            "Type": "string",
            "Required": true
        },
        "type": {
            "Description": "The option to indicate the type of user. Use one of the following options to specify this parameter:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "firstName": {
            "Description": "The first name of the user that you want to register.",
            "Type": "string",
            "Required": false
        },
        "lastName": {
            "Description": "The last name of the user that you want to register.",
            "Type": "string",
            "Required": false
        },
        "ApiAccess": {
            "Description": "The option to indicate whether the user can use the GetProgrammaticAccessCredentials API to obtain credentials that can then be used to access other FinSpace Data API operations.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "apiAccessPrincipalArn": {
            "Description": "The ARN identifier of an AWS user or role that is allowed to call the GetProgrammaticAccessCredentials API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.",
            "Type": "string",
            "Required": false
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_dataset": {
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "datasetId": {
            "Description": "The unique identifier of the Dataset to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_permission_group": {
        "permissionGroupId": {
            "Description": "The unique identifier for the permission group that you want to delete.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "disable_user": {
        "userId": {
            "Description": "The unique identifier for the user account that you want to disable.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "disassociate_user_from_permission_group": {
        "permissionGroupId": {
            "Description": "The unique identifier for the permission group.",
            "Type": "string",
            "Required": true
        },
        "userId": {
            "Description": "The unique identifier for the user.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "enable_user": {
        "userId": {
            "Description": "The unique identifier for the user account that you want to enable.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "get_changeset": {
        "datasetId": {
            "Description": "The unique identifier for the FinSpace Dataset where the Changeset is created.",
            "Type": "string",
            "Required": true
        },
        "changesetId": {
            "Description": "The unique identifier of the Changeset for which to get data.",
            "Type": "string",
            "Required": true
        }
    },
    "get_data_view": {
        "dataViewId": {
            "Description": "The unique identifier for the Dataview.",
            "Type": "string",
            "Required": true
        },
        "datasetId": {
            "Description": "The unique identifier for the Dataset used in the Dataview.",
            "Type": "string",
            "Required": true
        }
    },
    "get_dataset": {
        "datasetId": {
            "Description": "The unique identifier for a Dataset.",
            "Type": "string",
            "Required": true
        }
    },
    "get_external_data_view_access_details": {
        "dataViewId": {
            "Description": "The unique identifier for the Dataview that you want to access.",
            "Type": "string",
            "Required": true
        },
        "datasetId": {
            "Description": "The unique identifier for the Dataset.",
            "Type": "string",
            "Required": true
        }
    },
    "get_permission_group": {
        "permissionGroupId": {
            "Description": "The unique identifier for the permission group.",
            "Type": "string",
            "Required": true
        }
    },
    "get_programmatic_access_credentials": {
        "durationInMinutes": {
            "Description": "The time duration in which the credentials remain valid.",
            "Type": "integer",
            "Required": false
        },
        "environmentId": {
            "Description": "The FinSpace environment identifier.",
            "Type": "string",
            "Required": true
        }
    },
    "get_user": {
        "userId": {
            "Description": "The unique identifier of the user to get data for.",
            "Type": "string",
            "Required": true
        }
    },
    "get_working_location": {
        "locationType": {
            "Description": "Specify the type of the working location.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "list_changesets": {
        "datasetId": {
            "Description": "The unique identifier for the FinSpace Dataset to which the Changeset belongs.",
            "Type": "string",
            "Required": true
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        }
    },
    "list_data_views": {
        "datasetId": {
            "Description": "The unique identifier of the Dataset for which to retrieve Dataviews.",
            "Type": "string",
            "Required": true
        },
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_datasets": {
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_permission_groups": {
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": true
        }
    },
    "list_permission_groups_by_user": {
        "userId": {
            "Description": "The unique identifier for the user.",
            "Type": "string",
            "Required": true
        },
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": true
        }
    },
    "list_users": {
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": true
        }
    },
    "list_users_by_permission_group": {
        "permissionGroupId": {
            "Description": "The unique identifier for the permission group.",
            "Type": "string",
            "Required": true
        },
        "nextToken": {
            "Description": "A token that indicates where a results page should begin.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of results per page.",
            "Type": "integer",
            "Required": true
        }
    },
    "reset_user_password": {
        "userId": {
            "Description": "The unique identifier of the user that a temporary password is requested for.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "update_changeset": {
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "datasetId": {
            "Description": "The unique identifier for the FinSpace Dataset in which the Changeset is created.",
            "Type": "string",
            "Required": true
        },
        "changesetId": {
            "Description": "The unique identifier for the Changeset to update.",
            "Type": "string",
            "Required": true
        },
        "sourceParams": {
            "Description": "Options that define the location of the data being ingested (s3SourcePath ) and the source of the changeset (sourceType ).\nBoth s3SourcePath and sourceType are required attributes.\nHere is an example of how you could specify the sourceParams :\nThe S3 path that you specify must allow the FinSpace role access. To do that, you first need to configure the IAM policy on S3 bucket. For more information, see Loading data from an Amazon S3 Bucket using the FinSpace API section.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "formatParams": {
            "Description": "Options that define the structure of the source file(s) including the format type (formatType ), header row (withHeader ), data separation character (separator ) and the type of compression (compression ).\nHere is an example of how you could specify the formatParams :\nNote that if you only provide formatType as CSV, the rest of the attributes will automatically default to CSV values as following:\nFor more information about supported file formats, see Supported Data Types and File Formats in the FinSpace User Guide.",
            "Type": "dict",
            "Required": true,
            "dict variables": [
                {},
                {}
            ]
        }
    },
    "update_dataset": {
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "datasetId": {
            "Description": "The unique identifier for the Dataset to update.",
            "Type": "string",
            "Required": true
        },
        "datasetTitle": {
            "Description": "A display title for the Dataset.",
            "Type": "string",
            "Required": true
        },
        "kind": {
            "Description": "The format in which the Dataset data is structured.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "datasetDescription": {
            "Description": "A description for the Dataset.",
            "Type": "string",
            "Required": false
        },
        "alias": {
            "Description": "The unique resource identifier for a Dataset.",
            "Type": "string",
            "Required": false
        },
        "schemaDefinition": {
            "Description": "Definition for a schema on a tabular Dataset.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_permission_group": {
        "permissionGroupId": {
            "Description": "The unique identifier for the permission group to update.",
            "Type": "string",
            "Required": true
        },
        "name": {
            "Description": "The name of the permission group.",
            "Type": "string",
            "Required": false
        },
        "description": {
            "Description": "A brief description for the permission group.",
            "Type": "string",
            "Required": false
        },
        "applicationPermissions": {
            "Description": "The permissions that are granted to a specific group for accessing the FinSpace application.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "update_user": {
        "userId": {
            "Description": "The unique identifier for the user account to update.",
            "Type": "string",
            "Required": true
        },
        "type": {
            "Description": "The option to indicate the type of user.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "firstName": {
            "Description": "The first name of the user.",
            "Type": "string",
            "Required": false
        },
        "lastName": {
            "Description": "The last name of the user.",
            "Type": "string",
            "Required": false
        },
        "apiAccess": {
            "Description": "The option to indicate whether the user can use the GetProgrammaticAccessCredentials API to obtain credentials that can then be used to access other FinSpace Data API operations.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "apiAccessPrincipalArn": {
            "Description": "The ARN identifier of an AWS user or role that is allowed to call the GetProgrammaticAccessCredentials API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.",
            "Type": "string",
            "Required": false
        },
        "clientToken": {
            "Description": "A token that ensures idempotency. This token expires in 10 minutes.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "paginate": {
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}