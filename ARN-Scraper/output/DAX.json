{
    "create_cluster": {
        "ClusterName": {
            "Description": "The cluster identifier. This parameter is stored as a lowercase string.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "NodeType": {
            "Description": "The compute and memory capacity of the nodes in the cluster.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the cluster.",
            "Type": "string",
            "Required": false
        },
        "ReplicationFactor": {
            "Description": "The number of nodes in the DAX cluster. A replication factor of 1 will create a single-node cluster, without any read replicas. For additional fault tolerance, you can create a multiple node cluster with one or more read replicas. To do this, set ReplicationFactor to a number between 3 (one primary and two read replicas) and 10 (one primary and nine read replicas). If the AvailabilityZones parameter is provided, its length must equal the ReplicationFactor .",
            "Type": "integer",
            "Required": true
        },
        "AvailabilityZones": {
            "Description": "The Availability Zones (AZs) in which the cluster nodes will reside after the cluster has been created or updated. If provided, the length of this list must equal the ReplicationFactor parameter. If you omit this parameter, DAX will spread the nodes across Availability Zones for the highest availability.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SubnetGroupName": {
            "Description": "The name of the subnet group to be used for the replication group.",
            "Type": "string",
            "Required": false
        },
        "SecurityGroupIds": {
            "Description": "A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the security group ID is system-generated.)\nIf this parameter is not specified, DAX assigns the default VPC security group to each node.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PreferredMaintenanceWindow": {
            "Description": "Specifies the weekly time range during which maintenance on the DAX cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are:\nExample: sun:05:00-sun:09:00",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "NotificationTopicArn": {
            "Description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.",
            "Type": "string",
            "Required": false
        },
        "IamRoleArn": {
            "Description": "A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role's permissions to access DynamoDB on your behalf.",
            "Type": "string",
            "Required": true
        },
        "ParameterGroupName": {
            "Description": "The parameter group to be associated with the DAX cluster.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A set of tags to associate with the DAX cluster.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SSESpecification": {
            "Description": "Represents the settings used to enable server-side encryption on the cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClusterEndpointEncryptionType": {
            "Description": "The type of encryption the cluster's endpoint should support. Values are:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "create_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the parameter group to apply to all of the clusters in this replication group.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the parameter group.",
            "Type": "string",
            "Required": false
        }
    },
    "create_subnet_group": {
        "SubnetGroupName": {
            "Description": "A name for the subnet group. This value is stored as a lowercase string.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the subnet group",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "A list of VPC subnet IDs for the subnet group.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "decrease_replication_factor": {
        "ClusterName": {
            "Description": "The name of the DAX cluster from which you want to remove nodes.",
            "Type": "string",
            "Required": true
        },
        "NewReplicationFactor": {
            "Description": "The new number of nodes for the DAX cluster.",
            "Type": "integer",
            "Required": true
        },
        "AvailabilityZones": {
            "Description": "The Availability Zone(s) from which to remove nodes.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NodeIdsToRemove": {
            "Description": "The unique identifiers of the nodes to be removed from the cluster.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "delete_cluster": {
        "ClusterName": {
            "Description": "The name of the cluster to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the parameter group to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_subnet_group": {
        "SubnetGroupName": {
            "Description": "The name of the subnet group to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_clusters": {
        "ClusterNames": {
            "Description": "The names of the DAX clusters being described.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\nThe value for MaxResults must be between 20 and 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_default_parameters": {
        "MaxResults": {
            "Description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\nThe value for MaxResults must be between 20 and 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_events": {
        "SourceName": {
            "Description": "The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.",
            "Type": "string",
            "Required": false
        },
        "SourceType": {
            "Description": "The event source to retrieve events for. If no value is specified, all events are returned.",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "The beginning of the time interval to retrieve events for, specified in ISO 8601 format.",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "The end of the time interval for which to retrieve events, specified in ISO 8601 format.",
            "Type": "datetime",
            "Required": false
        },
        "Duration": {
            "Description": "The number of minutes' worth of events to retrieve.",
            "Type": "integer",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\nThe value for MaxResults must be between 20 and 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_parameter_groups": {
        "ParameterGroupNames": {
            "Description": "The names of the parameter groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\nThe value for MaxResults must be between 20 and 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_parameters": {
        "ParameterGroupName": {
            "Description": "The name of the parameter group.",
            "Type": "string",
            "Required": true
        },
        "Source": {
            "Description": "How the parameter is defined. For example, system denotes a system-defined parameter.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\nThe value for MaxResults must be between 20 and 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_subnet_groups": {
        "SubnetGroupNames": {
            "Description": "The name of the subnet group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\nThe value for MaxResults must be between 20 and 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults .",
            "Type": "string",
            "Required": false
        }
    },
    "increase_replication_factor": {
        "ClusterName": {
            "Description": "The name of the DAX cluster that will receive additional nodes.",
            "Type": "string",
            "Required": true
        },
        "NewReplicationFactor": {
            "Description": "The new number of nodes for the DAX cluster.",
            "Type": "integer",
            "Required": true
        },
        "AvailabilityZones": {
            "Description": "The Availability Zones (AZs) in which the cluster nodes will be created. All nodes belonging to the cluster are placed in these Availability Zones. Use this parameter if you want to distribute the nodes across multiple AZs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_tags": {
        "ResourceName": {
            "Description": "The name of the DAX resource to which the tags belong.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token.",
            "Type": "string",
            "Required": false
        }
    },
    "reboot_node": {
        "ClusterName": {
            "Description": "The name of the DAX cluster containing the node to be rebooted.",
            "Type": "string",
            "Required": true
        },
        "NodeId": {
            "Description": "The system-assigned ID of the node to be rebooted.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "ResourceName": {
            "Description": "The name of the DAX resource to which tags should be added.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to be assigned to the DAX resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "ResourceName": {
            "Description": "The name of the DAX resource from which the tags should be removed.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of tag keys. If the DAX cluster has any tags with these keys, then the tags are removed from the cluster.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_cluster": {
        "ClusterName": {
            "Description": "The name of the DAX cluster to be modified.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the changes being made to the cluster.",
            "Type": "string",
            "Required": false
        },
        "PreferredMaintenanceWindow": {
            "Description": "A range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.",
            "Type": "string",
            "Required": false
        },
        "NotificationTopicArn": {
            "Description": "The Amazon Resource Name (ARN) that identifies the topic.",
            "Type": "string",
            "Required": false
        },
        "NotificationTopicStatus": {
            "Description": "The current state of the topic. A value of \u201cactive\u201d means that notifications will be sent to the topic. A value of \u201cinactive\u201d means that notifications will not be sent to the topic.",
            "Type": "string",
            "Required": false
        },
        "ParameterGroupName": {
            "Description": "The name of a parameter group for this cluster.",
            "Type": "string",
            "Required": false
        },
        "SecurityGroupIds": {
            "Description": "A list of user-specified security group IDs to be assigned to each node in the DAX cluster. If this parameter is not specified, DAX assigns the default VPC security group to each node.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the parameter group.",
            "Type": "string",
            "Required": true
        },
        "ParameterNameValues": {
            "Description": "An array of name-value pairs for the parameters in the group. Each element in the array represents a single parameter.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_subnet_group": {
        "SubnetGroupName": {
            "Description": "The name of the subnet group.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the subnet group.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "A list of subnet IDs in the subnet group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "paginate": {
        "ResourceName": {
            "Description": "The name of the DAX resource to which the tags belong.",
            "Type": "string",
            "Required": true
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}