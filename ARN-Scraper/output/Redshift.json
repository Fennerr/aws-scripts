{
    "accept_reserved_node_exchange": {
        "ReservedNodeId": {
            "Description": "A string representing the node identifier of the DC1 Reserved Node to be exchanged.",
            "Type": "string",
            "Required": true
        },
        "TargetReservedNodeOfferingId": {
            "Description": "The unique identifier of the DC2 Reserved Node offering to be used for the exchange. You can obtain the value for the parameter by calling  GetReservedNodeExchangeOfferings",
            "Type": "string",
            "Required": true
        }
    },
    "add_partner": {
        "AccountId": {
            "Description": "The Amazon Web Services account ID that owns the cluster.",
            "Type": "string",
            "Required": true
        },
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster that receives data from the partner.",
            "Type": "string",
            "Required": true
        },
        "DatabaseName": {
            "Description": "The name of the database that receives data from the partner.",
            "Type": "string",
            "Required": true
        },
        "PartnerName": {
            "Description": "The name of the partner that is authorized to send data.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_data_share_consumer": {
        "DataShareArn": {
            "Description": "The Amazon Resource Name (ARN) of the datashare that the consumer is to use with the account or the namespace.",
            "Type": "string",
            "Required": true
        },
        "AssociateEntireAccount": {
            "Description": "A value that specifies whether the datashare is associated with the entire account.",
            "Type": "boolean",
            "Required": false
        },
        "ConsumerArn": {
            "Description": "The Amazon Resource Name (ARN) of the consumer that is associated with the datashare.",
            "Type": "string",
            "Required": false
        },
        "ConsumerRegion": {
            "Description": "From a datashare consumer account, associates a datashare with all existing and future namespaces in the specified Amazon Web Services Region.",
            "Type": "string",
            "Required": false
        }
    },
    "authorize_cluster_security_group_ingress": {
        "ClusterSecurityGroupName": {
            "Description": "The name of the security group to which the ingress rule is added.",
            "Type": "string",
            "Required": true
        },
        "CIDRIP": {
            "Description": "The IP range to be added the Amazon Redshift security group.",
            "Type": "string",
            "Required": false
        },
        "EC2SecurityGroupName": {
            "Description": "The EC2 security group to be added the Amazon Redshift security group.",
            "Type": "string",
            "Required": false
        },
        "EC2SecurityGroupOwnerId": {
            "Description": "The Amazon Web Services account number of the owner of the security group specified by the EC2SecurityGroupName parameter. The Amazon Web Services Access Key ID is not an acceptable value.\nExample: 111122223333",
            "Type": "string",
            "Required": false
        }
    },
    "authorize_data_share": {
        "DataShareArn": {
            "Description": "The Amazon Resource Name (ARN) of the datashare that producers are to authorize sharing for.",
            "Type": "string",
            "Required": true
        },
        "ConsumerIdentifier": {
            "Description": "The identifier of the data consumer that is authorized to access the datashare. This identifier is an Amazon Web Services account ID or a keyword, such as ADX.",
            "Type": "string",
            "Required": true
        }
    },
    "authorize_endpoint_access": {
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster to grant access to.",
            "Type": "string",
            "Required": false
        },
        "Account": {
            "Description": "The Amazon Web Services account ID to grant access to.",
            "Type": "string",
            "Required": true
        },
        "VpcIds": {
            "Description": "The virtual private cloud (VPC) identifiers to grant access to.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "authorize_snapshot_access": {
        "SnapshotIdentifier": {
            "Description": "The identifier of the snapshot the account is authorized to restore.",
            "Type": "string",
            "Required": false
        },
        "SnapshotArn": {
            "Description": "The Amazon Resource Name (ARN) of the snapshot to authorize access to.",
            "Type": "string",
            "Required": false
        },
        "SnapshotClusterIdentifier": {
            "Description": "The identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.",
            "Type": "string",
            "Required": false
        },
        "AccountWithRestoreAccess": {
            "Description": "The identifier of the Amazon Web Services account authorized to restore the specified snapshot.\nTo share a snapshot with Amazon Web Services Support, specify amazon-redshift-support.",
            "Type": "string",
            "Required": true
        }
    },
    "batch_delete_cluster_snapshots": {
        "Identifiers": {
            "Description": "A list of identifiers for the snapshots that you want to delete.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_modify_cluster_snapshots": {
        "SnapshotIdentifierList": {
            "Description": "A list of snapshot identifiers you want to modify.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The number of days that a manual snapshot is retained. If you specify the value -1, the manual snapshot is retained indefinitely.\nThe number must be either -1 or an integer between 1 and 3,653.\nIf you decrease the manual snapshot retention period from its current value, existing manual snapshots that fall outside of the new retention period will return an error. If you want to suppress the errors and delete the snapshots, use the force option.",
            "Type": "integer",
            "Required": false
        },
        "Force": {
            "Description": "A boolean value indicating whether to override an exception if the retention period has passed.",
            "Type": "boolean",
            "Required": false
        }
    },
    "cancel_resize": {
        "ClusterIdentifier": {
            "Description": "The unique identifier for the cluster that you want to cancel a resize operation for.",
            "Type": "string",
            "Required": true
        }
    },
    "copy_cluster_snapshot": {
        "SourceSnapshotIdentifier": {
            "Description": "The identifier for the source snapshot.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SourceSnapshotClusterIdentifier": {
            "Description": "The identifier of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TargetSnapshotIdentifier": {
            "Description": "The identifier given to the new manual snapshot.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.\nThe value must be either -1 or an integer between 1 and 3,653.\nThe default value is -1.",
            "Type": "integer",
            "Required": false
        }
    },
    "create_authentication_profile": {
        "AuthenticationProfileName": {
            "Description": "The name of the authentication profile to be created.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationProfileContent": {
            "Description": "The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.",
            "Type": "string",
            "Required": true
        }
    },
    "create_cluster": {
        "DBName": {
            "Description": "The name of the first database to be created when the cluster is created.\nTo create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database. For more information, go to Create a Database in the Amazon Redshift Database Developer Guide.\nDefault: dev\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ClusterIdentifier": {
            "Description": "A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. The identifier also appears in the Amazon Redshift console.\nConstraints:\nExample: myexamplecluster",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "ClusterType": {
            "Description": "The type of the cluster. When cluster type is specified as\nValid Values: multi-node | single-node\nDefault: multi-node",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "NodeType": {
            "Description": "The node type to be provisioned for the cluster. For information about node types, go to Working with Clusters in the Amazon Redshift Cluster Management Guide .\nValid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.xlplus | ra3.4xlarge | ra3.16xlarge",
            "Type": "string",
            "Required": true
        },
        "MasterUsername": {
            "Description": "The user name associated with the admin user account for the cluster that is being created.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "MasterUserPassword": {
            "Description": "The password associated with the admin user account for the cluster that is being created.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "ClusterSecurityGroups": {
            "Description": "A list of security groups to be associated with this cluster.\nDefault: The default cluster security group for Amazon Redshift.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "VpcSecurityGroupIds": {
            "Description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.\nDefault: The default VPC security group is associated with the cluster.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClusterSubnetGroupName": {
            "Description": "The name of a cluster subnet group to be associated with this cluster.\nIf this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).",
            "Type": "string",
            "Required": false
        },
        "AvailabilityZone": {
            "Description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.\nDefault: A random, system-chosen Availability Zone in the region that is specified by the endpoint.\nExample: us-east-2d\nConstraint: The specified Availability Zone must be in the same region as the current endpoint.",
            "Type": "string",
            "Required": false
        },
        "PreferredMaintenanceWindow": {
            "Description": "The weekly time range (in UTC) during which automated cluster maintenance can occur.\nFormat: ddd:hh24:mi-ddd:hh24:mi\nDefault: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. For more information about the time blocks for each region, see Maintenance Windows in Amazon Redshift Cluster Management Guide.\nValid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\nConstraints: Minimum 30-minute window.",
            "Type": "string",
            "Required": false
        },
        "ClusterParameterGroupName": {
            "Description": "The name of the parameter group to be associated with this cluster.\nDefault: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to Working with Amazon Redshift Parameter Groups\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "AutomatedSnapshotRetentionPeriod": {
            "Description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with  CreateClusterSnapshot .\nYou can't disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.\nDefault: 1\nConstraints: Must be a value from 0 to 35.",
            "Type": "integer",
            "Required": false
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots.\nThe value must be either -1 or an integer between 1 and 3,653.",
            "Type": "integer",
            "Required": false
        },
        "Port": {
            "Description": "The port number on which the cluster accepts incoming connections.\nThe cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections.\nDefault: 5439\nValid Values: 1150-65535",
            "Type": "integer",
            "Required": false
        },
        "ClusterVersion": {
            "Description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.\nThe version selected runs on all the nodes in the cluster.\nConstraints: Only version 1.0 is currently available.\nExample: 1.0",
            "Type": "string",
            "Required": false
        },
        "AllowVersionUpgrade": {
            "Description": "If true, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster.\nWhen a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.\nDefault: true",
            "Type": "boolean",
            "Required": false
        },
        "NumberOfNodes": {
            "Description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node .\nFor information about determining how many nodes you need, go to Working with Clusters in the Amazon Redshift Cluster Management Guide .\nIf you don't specify this parameter, you get a single-node cluster. When requesting a multi-node cluster, you must specify the number of nodes that you want in the cluster.\nDefault: 1\nConstraints: Value must be at least 1 and no more than 100.",
            "Type": "integer",
            "Required": false
        },
        "PubliclyAccessible": {
            "Description": "If true , the cluster can be accessed from a public network.",
            "Type": "boolean",
            "Required": false
        },
        "Encrypted": {
            "Description": "If true, the data in the cluster is encrypted at rest.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "HsmClientCertificateIdentifier": {
            "Description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
            "Type": "string",
            "Required": false
        },
        "HsmConfigurationIdentifier": {
            "Description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
            "Type": "string",
            "Required": false
        },
        "ElasticIp": {
            "Description": "The Elastic IP (EIP) address for the cluster.\nConstraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to Supported Platforms to Launch Your Cluster in the Amazon Redshift Cluster Management Guide.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "KmsKeyId": {
            "Description": "The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.",
            "Type": "string",
            "Required": false
        },
        "EnhancedVpcRouting": {
            "Description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.\nIf this option is true, enhanced VPC routing is enabled.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "AdditionalInfo": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        },
        "IamRoles": {
            "Description": "A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services. You must supply the IAM roles in their Amazon Resource Name (ARN) format.\nThe maximum number of IAM roles that you can associate is subject to a quota. For more information, go to Quotas and limits in the Amazon Redshift Cluster Management Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaintenanceTrackName": {
            "Description": "An optional parameter for the name of the maintenance track for the cluster. If you don't provide a maintenance track name, the cluster is assigned to the current track.",
            "Type": "string",
            "Required": false
        },
        "SnapshotScheduleIdentifier": {
            "Description": "A unique identifier for the snapshot schedule.",
            "Type": "string",
            "Required": false
        },
        "AvailabilityZoneRelocation": {
            "Description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is created.",
            "Type": "boolean",
            "Required": false
        },
        "AquaConfigurationStatus": {
            "Description": "This parameter is retired. It does not set the AQUA configuration status. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).",
            "Type": "string",
            "Required": false
        },
        "DefaultIamRoleArn": {
            "Description": "The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.",
            "Type": "string",
            "Required": false
        },
        "LoadSampleData": {
            "Description": "A flag that specifies whether to load sample data once the cluster is created.",
            "Type": "string",
            "Required": false
        }
    },
    "create_cluster_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the cluster parameter group.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "ParameterGroupFamily": {
            "Description": "The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines the set of parameters.\nTo get a list of valid parameter group family names, you can call  DescribeClusterParameterGroups. By default, Amazon Redshift returns a list of all the parameter groups that are owned by your Amazon Web Services account, including the default parameter groups for each Amazon Redshift engine version. The parameter group family names associated with the default parameter groups provide you the valid values. For example, a valid family name is \"redshift-1.0\".",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the parameter group.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_cluster_security_group": {
        "ClusterSecurityGroupName": {
            "Description": "The name for the security group. Amazon Redshift stores the value as a lowercase string.\nConstraints:\nExample: examplesecuritygroup",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Description": {
            "Description": "A description for the security group.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_cluster_snapshot": {
        "SnapshotIdentifier": {
            "Description": "A unique identifier for the snapshot that you are requesting. This identifier must be unique for all snapshots within the Amazon Web Services account.\nConstraints:\nExample: my-snapshot-id",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "ClusterIdentifier": {
            "Description": "The cluster identifier for which you want a snapshot.",
            "Type": "string",
            "Required": true
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.\nThe value must be either -1 or an integer between 1 and 3,653.\nThe default value is -1.",
            "Type": "integer",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_cluster_subnet_group": {
        "ClusterSubnetGroupName": {
            "Description": "The name for the subnet group. Amazon Redshift stores the value as a lowercase string.\nConstraints:\nExample: examplesubnetgroup",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Description": {
            "Description": "A description for the subnet group.",
            "Type": "string",
            "Required": true
        },
        "SubnetIds": {
            "Description": "An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_endpoint_access": {
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster to access.",
            "Type": "string",
            "Required": false
        },
        "ResourceOwner": {
            "Description": "The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.",
            "Type": "string",
            "Required": false
        },
        "EndpointName": {
            "Description": "The Redshift-managed VPC endpoint name.\nAn endpoint name must contain 1-30 characters. Valid characters are A-Z, a-z, 0-9, and hyphen(-). The first character must be a letter. The name can't contain two consecutive hyphens or end with a hyphen.",
            "Type": "string",
            "Required": true
        },
        "SubnetGroupName": {
            "Description": "The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.",
            "Type": "string",
            "Required": true
        },
        "VpcSecurityGroupIds": {
            "Description": "The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_event_subscription": {
        "SubscriptionName": {
            "Description": "The name of the event subscription to be created.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SnsTopicArn": {
            "Description": "The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
            "Type": "string",
            "Required": true
        },
        "SourceType": {
            "Description": "The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.\nValid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.",
            "Type": "string",
            "Required": false
        },
        "SourceIds": {
            "Description": "A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.\nExample: my-cluster-1, my-cluster-2\nExample: my-snapshot-20131010",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EventCategories": {
            "Description": "Specifies the Amazon Redshift event categories to be published by the event notification subscription.\nValues: configuration, management, monitoring, security, pending",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Severity": {
            "Description": "Specifies the Amazon Redshift event severity to be published by the event notification subscription.\nValues: ERROR, INFO",
            "Type": "string",
            "Required": false
        },
        "Enabled": {
            "Description": "A boolean value; set to true to activate the subscription, and set to false to create the subscription but not activate it.",
            "Type": "boolean",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_hsm_client_certificate": {
        "HsmClientCertificateIdentifier": {
            "Description": "The identifier to be assigned to the new HSM client certificate that the cluster will use to connect to the HSM to use the database encryption keys.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_hsm_configuration": {
        "HsmConfigurationIdentifier": {
            "Description": "The identifier to be assigned to the new Amazon Redshift HSM configuration.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A text description of the HSM configuration to be created.",
            "Type": "string",
            "Required": true
        },
        "HsmIpAddress": {
            "Description": "The IP address that the Amazon Redshift cluster must use to access the HSM.",
            "Type": "string",
            "Required": true
        },
        "HsmPartitionName": {
            "Description": "The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.",
            "Type": "string",
            "Required": true
        },
        "HsmPartitionPassword": {
            "Description": "The password required to access the HSM partition.",
            "Type": "string",
            "Required": true
        },
        "HsmServerPublicCertificate": {
            "Description": "The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_scheduled_action": {
        "ScheduledActionName": {
            "Description": "The name of the scheduled action. The name must be unique within an account. For more information about this parameter, see  ScheduledAction .",
            "Type": "string",
            "Required": true
        },
        "TargetAction": {
            "Description": "A JSON format string of the Amazon Redshift API operation with input parameters. For more information about this parameter, see  ScheduledAction .",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Schedule": {
            "Description": "The schedule in at( ) or cron( ) format. For more information about this parameter, see  ScheduledAction .",
            "Type": "string",
            "Required": true
        },
        "IamRole": {
            "Description": "The IAM role to assume to run the target action. For more information about this parameter, see  ScheduledAction .",
            "Type": "string",
            "Required": true
        },
        "ScheduledActionDescription": {
            "Description": "The description of the scheduled action.",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "The start time in UTC of the scheduled action. Before this time, the scheduled action does not trigger. For more information about this parameter, see  ScheduledAction .",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "The end time in UTC of the scheduled action. After this time, the scheduled action does not trigger. For more information about this parameter, see  ScheduledAction .",
            "Type": "datetime",
            "Required": false
        },
        "Enable": {
            "Description": "If true, the schedule is enabled. If false, the scheduled action does not trigger. For more information about state of the scheduled action, see  ScheduledAction .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_snapshot_copy_grant": {
        "SnapshotCopyGrantName": {
            "Description": "The name of the snapshot copy grant. This name must be unique in the region for the Amazon Web Services account.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "KmsKeyId": {
            "Description": "The unique identifier of the encrypted symmetric key to which to grant Amazon Redshift permission. If no key is specified, the default key is used.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_snapshot_schedule": {
        "ScheduleDefinitions": {
            "Description": "The definition of the snapshot schedule. The definition is made up of schedule expressions, for example \"cron(30 12 *)\" or \"rate(12 hours)\".",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ScheduleIdentifier": {
            "Description": "A unique identifier for a snapshot schedule. Only alphanumeric characters are allowed for the identifier.",
            "Type": "string",
            "Required": false
        },
        "ScheduleDescription": {
            "Description": "The description of the snapshot schedule.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "An optional set of tags you can use to search for the schedule.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "",
            "Type": "boolean",
            "Required": false
        },
        "NextInvocations": {
            "Description": "",
            "Type": "integer",
            "Required": false
        }
    },
    "create_tags": {
        "ResourceName": {
            "Description": "The Amazon Resource Name (ARN) to which you want to add the tag or tags. For example, arn:aws:redshift:us-east-2:123456789:cluster:t1 .",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "One or more name/value pairs to add as tags to the specified resource. Each tag name is passed in with the parameter Key and the corresponding value is passed in with the parameter Value. The Key and Value parameters are separated by a comma (,). Separate multiple tags with a space. For example, --tags \"Key\"=\"owner\",\"Value\"=\"admin\" \"Key\"=\"environment\",\"Value\"=\"test\" \"Key\"=\"version\",\"Value\"=\"1.0\" .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_usage_limit": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster that you want to limit usage.",
            "Type": "string",
            "Required": true
        },
        "FeatureType": {
            "Description": "The Amazon Redshift feature that you want to limit.",
            "Type": "string",
            "Required": true
        },
        "LimitType": {
            "Description": "The type of limit. Depending on the feature type, this can be based on a time duration or data size. If FeatureType is spectrum, then LimitType must be data-scanned. If FeatureType is concurrency-scaling, then LimitType must be time. If FeatureType is cross-region-datasharing, then LimitType must be data-scanned .",
            "Type": "string",
            "Required": true
        },
        "Amount": {
            "Description": "The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number.",
            "Type": "integer",
            "Required": true
        },
        "Period": {
            "Description": "The time period that the amount applies to. A weekly period begins on Sunday. The default is monthly .",
            "Type": "string",
            "Required": false
        },
        "BreachAction": {
            "Description": "The action that Amazon Redshift takes when the limit is reached. The default is log. For more information about this parameter, see  UsageLimit .",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tag instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "deauthorize_data_share": {
        "DataShareArn": {
            "Description": "The Amazon Resource Name (ARN) of the datashare to remove authorization from.",
            "Type": "string",
            "Required": true
        },
        "ConsumerIdentifier": {
            "Description": "The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an Amazon Web Services account ID or a keyword, such as ADX.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_authentication_profile": {
        "AuthenticationProfileName": {
            "Description": "The name of the authentication profile to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_cluster": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster to be deleted.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SkipFinalClusterSnapshot": {
            "Description": "Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true, a final cluster snapshot is not created. If false, a final cluster snapshot is created before the cluster is deleted.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "FinalClusterSnapshotIdentifier": {
            "Description": "The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, SkipFinalClusterSnapshot must be false .\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "FinalClusterSnapshotRetentionPeriod": {
            "Description": "The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.\nThe value must be either -1 or an integer between 1 and 3,653.\nThe default value is -1.",
            "Type": "integer",
            "Required": false
        }
    },
    "delete_cluster_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the parameter group to be deleted.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "delete_cluster_security_group": {
        "ClusterSecurityGroupName": {
            "Description": "The name of the cluster security group to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_cluster_snapshot": {
        "SnapshotIdentifier": {
            "Description": "The unique identifier of the manual snapshot to be deleted.\nConstraints: Must be the name of an existing snapshot that is in the available, failed, or cancelled state.",
            "Type": "string",
            "Required": true
        },
        "SnapshotClusterIdentifier": {
            "Description": "The unique identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.\nConstraints: Must be the name of valid cluster.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_cluster_subnet_group": {
        "ClusterSubnetGroupName": {
            "Description": "The name of the cluster subnet group name to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_endpoint_access": {
        "EndpointName": {
            "Description": "The Redshift-managed VPC endpoint to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_event_subscription": {
        "SubscriptionName": {
            "Description": "The name of the Amazon Redshift event notification subscription to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_hsm_client_certificate": {
        "HsmClientCertificateIdentifier": {
            "Description": "The identifier of the HSM client certificate to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_hsm_configuration": {
        "HsmConfigurationIdentifier": {
            "Description": "The identifier of the Amazon Redshift HSM configuration to be deleted.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_partner": {
        "AccountId": {
            "Description": "The Amazon Web Services account ID that owns the cluster.",
            "Type": "string",
            "Required": true
        },
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster that receives data from the partner.",
            "Type": "string",
            "Required": true
        },
        "DatabaseName": {
            "Description": "The name of the database that receives data from the partner.",
            "Type": "string",
            "Required": true
        },
        "PartnerName": {
            "Description": "The name of the partner that is authorized to send data.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_scheduled_action": {
        "ScheduledActionName": {
            "Description": "The name of the scheduled action to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_snapshot_copy_grant": {
        "SnapshotCopyGrantName": {
            "Description": "The name of the snapshot copy grant to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_snapshot_schedule": {
        "ScheduleIdentifier": {
            "Description": "A unique identifier of the snapshot schedule to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_tags": {
        "ResourceName": {
            "Description": "The Amazon Resource Name (ARN) from which you want to remove the tag or tags. For example, arn:aws:redshift:us-east-2:123456789:cluster:t1 .",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "The tag key that you want to delete.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_usage_limit": {
        "UsageLimitId": {
            "Description": "The identifier of the usage limit to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_account_attributes": {
        "AttributeNames": {
            "Description": "A list of attribute names.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_authentication_profiles": {
        "AuthenticationProfileName": {
            "Description": "The name of the authentication profile to describe. If not specified then all authentication profiles owned by the account are listed.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_cluster_db_revisions": {
        "ClusterIdentifier": {
            "Description": "A unique identifier for a cluster whose ClusterDbRevisions you are requesting. This parameter is case sensitive. All clusters defined for an account are returned by default.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in the marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the marker parameter and retrying the request.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point for returning a set of response records. When the results of a DescribeClusterDbRevisions request exceed the value specified in MaxRecords, Amazon Redshift returns a value in the marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the marker parameter and retrying the request.\nConstraints: You can specify either the ClusterIdentifier parameter, or the marker parameter, but not both.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_cluster_parameter_groups": {
        "ParameterGroupName": {
            "Description": "The name of a specific parameter group for which to return details. By default, details about all parameter groups and the default parameter group are returned.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterParameterGroups request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching cluster parameter groups that are associated with the specified key or keys. For example, suppose that you have parameter groups that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the parameter groups that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching cluster parameter groups that are associated with the specified tag value or values. For example, suppose that you have parameter groups that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the parameter groups that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_cluster_parameters": {
        "ParameterGroupName": {
            "Description": "The name of a cluster parameter group for which to return details.",
            "Type": "string",
            "Required": true
        },
        "Source": {
            "Description": "The parameter types to return. Specify user to show parameters that are different form the default. Similarly, specify engine-default to show parameters that are the same as the default parameter group.\nDefault: All parameter types returned.\nValid Values: user | engine-default",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterParameters request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_cluster_security_groups": {
        "ClusterSecurityGroupName": {
            "Description": "The name of a cluster security group for which you are requesting details. You can specify either the Marker parameter or a ClusterSecurityGroupName parameter, but not both.\nExample: securitygroup1",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterSecurityGroups request exceed the value specified in MaxRecords, Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.\nConstraints: You can specify either the ClusterSecurityGroupName parameter or the Marker parameter, but not both.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching cluster security groups that are associated with the specified key or keys. For example, suppose that you have security groups that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the security groups that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching cluster security groups that are associated with the specified tag value or values. For example, suppose that you have security groups that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the security groups that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_cluster_snapshots": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster which generated the requested snapshots.",
            "Type": "string",
            "Required": false
        },
        "SnapshotIdentifier": {
            "Description": "The snapshot identifier of the snapshot about which to return information.",
            "Type": "string",
            "Required": false
        },
        "SnapshotArn": {
            "Description": "The Amazon Resource Name (ARN) of the snapshot associated with the message to describe cluster snapshots.",
            "Type": "string",
            "Required": false
        },
        "SnapshotType": {
            "Description": "The type of snapshots for which you are requesting information. By default, snapshots of all types are returned.\nValid Values: automated | manual",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "A value that requests only snapshots created at or after the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2012-07-16T18:00:00Z",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "A time value that requests only snapshots created at or before the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2012-07-16T18:00:00Z",
            "Type": "datetime",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterSnapshots request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "OwnerAccount": {
            "Description": "The Amazon Web Services account used to create or copy the snapshot. Use this field to filter the results to snapshots owned by a particular account. To describe snapshots you own, either specify your Amazon Web Services account, or do not specify the parameter.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching cluster snapshots that are associated with the specified key or keys. For example, suppose that you have snapshots that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching cluster snapshots that are associated with the specified tag value or values. For example, suppose that you have snapshots that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClusterExists": {
            "Description": "A value that indicates whether to return snapshots only for an existing cluster. You can perform table-level restore only by using a snapshot of an existing cluster, that is, a cluster that has not been deleted. Values for this parameter work as follows:",
            "Type": "boolean",
            "Required": false,
            "boolean variables": {}
        },
        "SortingEntities": {
            "Description": "\n(dict) --Describes a sorting entity\n\nAttribute (string)[REQUIRED]The category for sorting the snapshots.\n\nSortOrder (string) --The order for listing the attributes.\n\n\n\n\n",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_cluster_subnet_groups": {
        "ClusterSubnetGroupName": {
            "Description": "The name of the cluster subnet group for which information is requested.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterSubnetGroups request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching cluster subnet groups that are associated with the specified key or keys. For example, suppose that you have subnet groups that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subnet groups that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching cluster subnet groups that are associated with the specified tag value or values. For example, suppose that you have subnet groups that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subnet groups that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_cluster_tracks": {
        "MaintenanceTrackName": {
            "Description": "The name of the maintenance track.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "An integer value for the maximum number of maintenance tracks to return.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeClusterTracks request exceed the value specified in MaxRecords , Amazon Redshift returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_cluster_versions": {
        "ClusterVersion": {
            "Description": "The specific cluster version to return.\nExample: 1.0",
            "Type": "string",
            "Required": false
        },
        "ClusterParameterGroupFamily": {
            "Description": "The name of a specific cluster parameter group family to return details for.\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterVersions request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_clusters": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of a cluster whose properties you are requesting. This parameter is case sensitive.\nThe default is that all clusters defined for an account are returned.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusters request exceed the value specified in MaxRecords, Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.\nConstraints: You can specify either the ClusterIdentifier parameter or the Marker parameter, but not both.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching clusters that are associated with the specified key or keys. For example, suppose that you have clusters that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the clusters that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching clusters that are associated with the specified tag value or values. For example, suppose that you have clusters that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the clusters that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_data_shares": {
        "DataShareArn": {
            "Description": "The identifier of the datashare to describe details of.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeDataShares request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_data_shares_for_consumer": {
        "ConsumerArn": {
            "Description": "The Amazon Resource Name (ARN) of the consumer that returns in the list of datashares.",
            "Type": "string",
            "Required": false
        },
        "Status": {
            "Description": "An identifier giving the status of a datashare in the consumer cluster. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeDataSharesForConsumer request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_data_shares_for_producer": {
        "ProducerArn": {
            "Description": "The Amazon Resource Name (ARN) of the producer that returns in the list of datashares.",
            "Type": "string",
            "Required": false
        },
        "Status": {
            "Description": "An identifier giving the status of a datashare in the producer. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeDataSharesForProducer request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_default_cluster_parameters": {
        "ParameterGroupFamily": {
            "Description": "The name of the cluster parameter group family.",
            "Type": "string",
            "Required": true
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeDefaultClusterParameters request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_endpoint_access": {
        "ClusterIdentifier": {
            "Description": "The cluster identifier associated with the described endpoint.",
            "Type": "string",
            "Required": false
        },
        "ResourceOwner": {
            "Description": "The Amazon Web Services account ID of the owner of the cluster.",
            "Type": "string",
            "Required": false
        },
        "EndpointName": {
            "Description": "The name of the endpoint to be described.",
            "Type": "string",
            "Required": false
        },
        "VpcId": {
            "Description": "The virtual private cloud (VPC) identifier with access to the cluster.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a Marker is included in the response so that the remaining results can be retrieved.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional pagination token provided by a previous DescribeEndpointAccess request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the MaxRecords parameter.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_endpoint_authorization": {
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster to access.",
            "Type": "string",
            "Required": false
        },
        "Account": {
            "Description": "The AAmazon Web Services account ID of either the cluster owner (grantor) or grantee. If Grantee parameter is true, then the Account value is of the grantor.",
            "Type": "string",
            "Required": false
        },
        "Grantee": {
            "Description": "Indicates whether to check authorization from a grantor or grantee point of view. If true, Amazon Redshift returns endpoint authorizations that you've been granted. If false (default), checks authorization from a grantor point of view.",
            "Type": "boolean",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a Marker is included in the response so that the remaining results can be retrieved.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional pagination token provided by a previous DescribeEndpointAuthorization request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the MaxRecords parameter.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_event_categories": {
        "SourceType": {
            "Description": "The source type, such as cluster or parameter group, to which the described event categories apply.\nValid values: cluster, cluster-snapshot, cluster-parameter-group, cluster-security-group, and scheduled-action.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_event_subscriptions": {
        "SubscriptionName": {
            "Description": "The name of the Amazon Redshift event notification subscription to be described.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeEventSubscriptions request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching event notification subscriptions that are associated with the specified key or keys. For example, suppose that you have subscriptions that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching event notification subscriptions that are associated with the specified tag value or values. For example, suppose that you have subscriptions that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_events": {
        "SourceIdentifier": {
            "Description": "The identifier of the event source for which events will be returned. If this parameter is not specified, then all sources are included in the response.\nConstraints:\nIf SourceIdentifier is supplied, SourceType must also be provided.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "SourceType": {
            "Description": "The event source to retrieve events for. If no value is specified, all events are returned.\nConstraints:\nIf SourceType is supplied, SourceIdentifier must also be provided.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "StartTime": {
            "Description": "The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2009-07-08T18:00Z",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2009-07-08T18:00Z",
            "Type": "datetime",
            "Required": false
        },
        "Duration": {
            "Description": "The number of minutes prior to the time of the request for which to retrieve events. For example, if the request is sent at 18:00 and you specify a duration of 60, then only events which have occurred after 17:00 will be returned.\nDefault: 60",
            "Type": "integer",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeEvents request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_hsm_client_certificates": {
        "HsmClientCertificateIdentifier": {
            "Description": "The identifier of a specific HSM client certificate for which you want information. If no identifier is specified, information is returned for all HSM client certificates owned by your Amazon Web Services account.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeHsmClientCertificates request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching HSM client certificates that are associated with the specified key or keys. For example, suppose that you have HSM client certificates that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the HSM client certificates that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching HSM client certificates that are associated with the specified tag value or values. For example, suppose that you have HSM client certificates that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the HSM client certificates that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_hsm_configurations": {
        "HsmConfigurationIdentifier": {
            "Description": "The identifier of a specific Amazon Redshift HSM configuration to be described. If no identifier is specified, information is returned for all HSM configurations owned by your Amazon Web Services account.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeHsmConfigurations request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching HSM configurations that are associated with the specified key or keys. For example, suppose that you have HSM configurations that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the HSM configurations that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching HSM configurations that are associated with the specified tag value or values. For example, suppose that you have HSM configurations that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the HSM configurations that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_logging_status": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster from which to get the logging status.\nExample: examplecluster",
            "Type": "string",
            "Required": true
        }
    },
    "describe_node_configuration_options": {
        "ActionType": {
            "Description": "The action type to evaluate for possible node configurations. Specify \"restore-cluster\" to get configuration combinations based on an existing snapshot. Specify \"recommend-node-config\" to get configuration recommendations based on an existing cluster or snapshot. Specify \"resize-cluster\" to get configuration combinations for elastic resize based on an existing cluster.",
            "Type": "string",
            "Required": true
        },
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster to evaluate for possible node configurations.",
            "Type": "string",
            "Required": false
        },
        "SnapshotIdentifier": {
            "Description": "The identifier of the snapshot to evaluate for possible node configurations.",
            "Type": "string",
            "Required": false
        },
        "SnapshotArn": {
            "Description": "The Amazon Resource Name (ARN) of the snapshot associated with the message to describe node configuration.",
            "Type": "string",
            "Required": false
        },
        "OwnerAccount": {
            "Description": "The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "A set of name, operator, and value items to filter the results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeNodeConfigurationOptions request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 500\nConstraints: minimum 100, maximum 500.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_orderable_cluster_options": {
        "ClusterVersion": {
            "Description": "The version filter value. Specify this parameter to show only the available offerings matching the specified version.\nDefault: All versions.\nConstraints: Must be one of the version returned from  DescribeClusterVersions .",
            "Type": "string",
            "Required": false
        },
        "NodeType": {
            "Description": "The node type filter value. Specify this parameter to show only the available offerings matching the specified node type.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeOrderableClusterOptions request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_partners": {
        "AccountId": {
            "Description": "The Amazon Web Services account ID that owns the cluster.",
            "Type": "string",
            "Required": true
        },
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster whose partner integration is being described.",
            "Type": "string",
            "Required": true
        },
        "DatabaseName": {
            "Description": "The name of the database whose partner integration is being described. If database name is not specified, then all databases in the cluster are described.",
            "Type": "string",
            "Required": false
        },
        "PartnerName": {
            "Description": "The name of the partner that is being described. If partner name is not specified, then all partner integrations are described.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reserved_node_exchange_status": {
        "ReservedNodeId": {
            "Description": "The identifier of the source reserved node in a reserved-node exchange request.",
            "Type": "string",
            "Required": false
        },
        "ReservedNodeExchangeRequestId": {
            "Description": "The identifier of the reserved-node exchange request.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a Marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional pagination token provided by a previous DescribeReservedNodeExchangeStatus request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the MaxRecords parameter. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reserved_node_offerings": {
        "ReservedNodeOfferingId": {
            "Description": "The unique identifier for the offering.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeReservedNodeOfferings request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reserved_nodes": {
        "ReservedNodeId": {
            "Description": "Identifier for the node reservation.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeReservedNodes request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_resize": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of a cluster whose resize progress you are requesting. This parameter is case-sensitive.\nBy default, resize operations for all clusters defined for an Amazon Web Services account are returned.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_scheduled_actions": {
        "ScheduledActionName": {
            "Description": "The name of the scheduled action to retrieve.",
            "Type": "string",
            "Required": false
        },
        "TargetActionType": {
            "Description": "The type of the scheduled actions to retrieve.",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "The start time in UTC of the scheduled actions to retrieve. Only active scheduled actions that have invocations after this time are retrieved.",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "The end time in UTC of the scheduled action to retrieve. Only active scheduled actions that have invocations before this time are retrieved.",
            "Type": "datetime",
            "Required": false
        },
        "Active": {
            "Description": "If true, retrieve only active scheduled actions. If false, retrieve only disabled scheduled actions.",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "List of scheduled action filters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeScheduledActions request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_snapshot_copy_grants": {
        "SnapshotCopyGrantName": {
            "Description": "The name of the snapshot copy grant.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeSnapshotCopyGrant request exceed the value specified in MaxRecords, Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.\nConstraints: You can specify either the SnapshotCopyGrantName parameter or the Marker parameter, but not both.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching resources that are associated with the specified key or keys. For example, suppose that you have resources tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with all resources that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching resources that are associated with the specified value or values. For example, suppose that you have resources tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with all resources that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_snapshot_schedules": {
        "ClusterIdentifier": {
            "Description": "The unique identifier for the cluster whose snapshot schedules you want to view.",
            "Type": "string",
            "Required": false
        },
        "ScheduleIdentifier": {
            "Description": "A unique identifier for a snapshot schedule.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "The key value for a snapshot schedule tag.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "The value corresponding to the key of the snapshot schedule tag.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Marker": {
            "Description": "A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the marker parameter and retrying the command. If the marker field is empty, all response records have been retrieved for the request.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_storage": "No parameters defined",
    "describe_table_restore_status": {
        "ClusterIdentifier": {
            "Description": "The Amazon Redshift cluster that the table is being restored to.",
            "Type": "string",
            "Required": false
        },
        "TableRestoreRequestId": {
            "Description": "The identifier of the table restore request to return status for. If you don't specify a TableRestoreRequestId value, then DescribeTableRestoreStatus returns the status of all in-progress table restore requests.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional pagination token provided by a previous DescribeTableRestoreStatus request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the MaxRecords parameter.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_tags": {
        "ResourceName": {
            "Description": "The Amazon Resource Name (ARN) for which you want to describe the tag or tags. For example, arn:aws:redshift:us-east-2:123456789:cluster:t1 .",
            "Type": "string",
            "Required": false
        },
        "ResourceType": {
            "Description": "The type of resource with which you want to view tags. Valid resource types are:\nFor more information about Amazon Redshift resource types and constructing ARNs, go to Specifying Policy Elements: Actions, Effects, Resources, and Principals in the Amazon Redshift Cluster Management Guide.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "MaxRecords": {
            "Description": "The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the marker parameter and retrying the command. If the marker field is empty, all response records have been retrieved for the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching resources that are associated with the specified key or keys. For example, suppose that you have resources tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with all resources that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching resources that are associated with the specified value or values. For example, suppose that you have resources tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with all resources that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_usage_limits": {
        "UsageLimitId": {
            "Description": "The identifier of the usage limit to describe.",
            "Type": "string",
            "Required": false
        },
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster for which you want to describe usage limits.",
            "Type": "string",
            "Required": false
        },
        "FeatureType": {
            "Description": "The feature type for which you want to describe usage limits.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeUsageLimits request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching usage limit objects that are associated with the specified key or keys. For example, suppose that you have parameter groups that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the usage limit objects have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching usage limit objects that are associated with the specified tag value or values. For example, suppose that you have parameter groups that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the usage limit objects that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "disable_logging": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster on which logging is to be stopped.\nExample: examplecluster",
            "Type": "string",
            "Required": true
        }
    },
    "disable_snapshot_copy": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of the source cluster that you want to disable copying of snapshots to a destination region.\nConstraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_data_share_consumer": {
        "DataShareArn": {
            "Description": "The Amazon Resource Name (ARN) of the datashare to remove association for.",
            "Type": "string",
            "Required": true
        },
        "DisassociateEntireAccount": {
            "Description": "A value that specifies whether association for the datashare is removed from the entire account.",
            "Type": "boolean",
            "Required": false
        },
        "ConsumerArn": {
            "Description": "The Amazon Resource Name (ARN) of the consumer that association for the datashare is removed from.",
            "Type": "string",
            "Required": false
        },
        "ConsumerRegion": {
            "Description": "From a datashare consumer account, removes association of a datashare from all the existing and future namespaces in the specified Amazon Web Services Region.",
            "Type": "string",
            "Required": false
        }
    },
    "enable_logging": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster on which logging is to be started.\nExample: examplecluster",
            "Type": "string",
            "Required": true
        },
        "BucketName": {
            "Description": "The name of an existing S3 bucket where the log files are to be stored.\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "S3KeyPrefix": {
            "Description": "The prefix applied to the log file names.\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "LogDestinationType": {
            "Description": "The log destination type. An enum with possible values of s3 and cloudwatch .",
            "Type": "string",
            "Required": false
        },
        "LogExports": {
            "Description": "The collection of exported log types. Log types include the connection log, user log and user activity log.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "enable_snapshot_copy": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of the source cluster to copy snapshots from.\nConstraints: Must be the valid name of an existing cluster that does not already have cross-region snapshot copy enabled.",
            "Type": "string",
            "Required": true
        },
        "DestinationRegion": {
            "Description": "The destination Amazon Web Services Region that you want to copy snapshots to.\nConstraints: Must be the name of a valid Amazon Web Services Region. For more information, see Regions and Endpoints in the Amazon Web Services General Reference.",
            "Type": "string",
            "Required": true
        },
        "RetentionPeriod": {
            "Description": "The number of days to retain automated snapshots in the destination region after they are copied from the source region.\nDefault: 7.\nConstraints: Must be at least 1 and no more than 35.",
            "Type": "integer",
            "Required": false
        },
        "SnapshotCopyGrantName": {
            "Description": "The name of the snapshot copy grant to use when snapshots of an Amazon Web Services KMS-encrypted cluster are copied to the destination region.",
            "Type": "string",
            "Required": false
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The number of days to retain newly copied snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region. If the value is -1, the manual snapshot is retained indefinitely.\nThe value must be either -1 or an integer between 1 and 3,653.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_cluster_credentials": {
        "DbUser": {
            "Description": "The name of a database user. If a user name matching DbUser exists in the database, the temporary user credentials have the same permissions as the existing user. If DbUser doesn't exist in the database and Autocreate is True, a new user is created using the value for DbUser with PUBLIC permissions. If a database user matching the value for DbUser doesn't exist and Autocreate is False, then the command succeeds but the connection attempt will fail because the user doesn't exist in the database.\nFor more information, see CREATE USER in the Amazon Redshift Database Developer Guide.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "DbName": {
            "Description": "The name of a database that DbUser is authorized to log on to. If DbName is not specified, DbUser can log on to any existing database.\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ClusterIdentifier": {
            "Description": "The unique identifier of the cluster that contains the database for which you are requesting credentials. This parameter is case sensitive.",
            "Type": "string",
            "Required": true
        },
        "DurationSeconds": {
            "Description": "The number of seconds until the returned temporary password expires.\nConstraint: minimum 900, maximum 3600.\nDefault: 900",
            "Type": "integer",
            "Required": false
        },
        "AutoCreate": {
            "Description": "Create a database user with the name specified for the user named in DbUser if one does not exist.",
            "Type": "boolean",
            "Required": false
        },
        "DbGroups": {
            "Description": "A list of the names of existing database groups that the user named in DbUser will join for the current session, in addition to any group memberships for an existing user. If not specified, a new user is added only to PUBLIC.\nDatabase group name constraints",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "get_cluster_credentials_with_iam": {
        "DbName": {
            "Description": "The name of the database for which you are requesting credentials. If the database name is specified, the IAM policy must allow access to the resource dbname for the specified database name. If the database name is not specified, access to all databases is allowed.",
            "Type": "string",
            "Required": false
        },
        "ClusterIdentifier": {
            "Description": "The unique identifier of the cluster that contains the database for which you are requesting credentials.",
            "Type": "string",
            "Required": true
        },
        "DurationSeconds": {
            "Description": "The number of seconds until the returned temporary password expires.\nRange: 900-3600. Default: 900.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_reserved_node_exchange_configuration_options": {
        "ActionType": {
            "Description": "The action type of the reserved-node configuration. The action type can be an exchange initiated from either a snapshot or a resize.",
            "Type": "string",
            "Required": true
        },
        "ClusterIdentifier": {
            "Description": "The identifier for the cluster that is the source for a reserved-node exchange.",
            "Type": "string",
            "Required": false
        },
        "SnapshotIdentifier": {
            "Description": "The identifier for the snapshot that is the source for the reserved-node exchange.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a Marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional pagination token provided by a previous GetReservedNodeExchangeConfigurationOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the MaxRecords parameter. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        }
    },
    "get_reserved_node_exchange_offerings": {
        "ReservedNodeId": {
            "Description": "A string representing the node identifier for the DC1 Reserved Node to be exchanged.",
            "Type": "string",
            "Required": true
        },
        "MaxRecords": {
            "Description": "An integer setting the maximum number of ReservedNodeOfferings to retrieve.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "A value that indicates the starting point for the next set of ReservedNodeOfferings.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_aqua_configuration": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster to be modified.",
            "Type": "string",
            "Required": true
        },
        "AquaConfigurationStatus": {
            "Description": "This parameter is retired. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).",
            "Type": "string",
            "Required": false
        }
    },
    "modify_authentication_profile": {
        "AuthenticationProfileName": {
            "Description": "The name of the authentication profile to replace.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationProfileContent": {
            "Description": "The new content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.",
            "Type": "string",
            "Required": true
        }
    },
    "modify_cluster": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of the cluster to be modified.\nExample: examplecluster",
            "Type": "string",
            "Required": true
        },
        "ClusterType": {
            "Description": "The new cluster type.\nWhen you submit your cluster resize request, your existing cluster goes into a read-only mode. After Amazon Redshift provisions a new cluster based on your resize requirements, there will be outage for a period while the old cluster is deleted and your connection is switched to the new cluster. You can use  DescribeResize to track the progress of the resize request.\nValid Values: multi-node | single-node",
            "Type": "string",
            "Required": false
        },
        "NodeType": {
            "Description": "The new node type of the cluster. If you specify a new node type, you must also specify the number of nodes parameter.\nFor more information about resizing clusters, go to Resizing Clusters in Amazon Redshift in the Amazon Redshift Cluster Management Guide .\nValid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.xlplus | ra3.4xlarge | ra3.16xlarge",
            "Type": "string",
            "Required": false
        },
        "NumberOfNodes": {
            "Description": "The new number of nodes of the cluster. If you specify a new number of nodes, you must also specify the node type parameter.\nFor more information about resizing clusters, go to Resizing Clusters in Amazon Redshift in the Amazon Redshift Cluster Management Guide .\nValid Values: Integer greater than 0 .",
            "Type": "integer",
            "Required": false
        },
        "ClusterSecurityGroups": {
            "Description": "A list of cluster security groups to be authorized on this cluster. This change is asynchronously applied as soon as possible.\nSecurity groups currently associated with the cluster, and not in the list of groups to apply, will be revoked from the cluster.\nConstraints:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "VpcSecurityGroupIds": {
            "Description": "A list of virtual private cloud (VPC) security groups to be associated with the cluster. This change is asynchronously applied as soon as possible.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MasterUserPassword": {
            "Description": "The new password for the cluster admin user. This change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the MasterUserPassword element exists in the PendingModifiedValues element of the operation response.\nDefault: Uses existing setting.\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ClusterParameterGroupName": {
            "Description": "The name of the cluster parameter group to apply to this cluster. This change is applied only after the cluster is rebooted. To reboot a cluster use  RebootCluster .\nDefault: Uses existing setting.\nConstraints: The cluster parameter group must be in the same parameter group family that matches the cluster version.",
            "Type": "string",
            "Required": false
        },
        "AutomatedSnapshotRetentionPeriod": {
            "Description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with  CreateClusterSnapshot .\nIf you decrease the automated snapshot retention period from its current value, existing automated snapshots that fall outside of the new retention period will be immediately deleted.\nYou can't disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.\nDefault: Uses existing setting.\nConstraints: Must be a value from 0 to 35.",
            "Type": "integer",
            "Required": false
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The default for number of days that a newly created manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. This value doesn't retroactively change the retention periods of existing manual snapshots.\nThe value must be either -1 or an integer between 1 and 3,653.\nThe default value is -1.",
            "Type": "integer",
            "Required": false
        },
        "PreferredMaintenanceWindow": {
            "Description": "The weekly time range (in UTC) during which system maintenance can occur, if necessary. If system maintenance is necessary during the window, it may result in an outage.\nThis maintenance window change is made immediately. If the new maintenance window indicates the current time, there must be at least 120 minutes between the current time and end of the window in order to ensure that pending changes are applied.\nDefault: Uses existing setting.\nFormat: ddd:hh24:mi-ddd:hh24:mi, for example wed:07:30-wed:08:00 .\nValid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\nConstraints: Must be at least 30 minutes.",
            "Type": "string",
            "Required": false
        },
        "ClusterVersion": {
            "Description": "The new version number of the Amazon Redshift engine to upgrade to.\nFor major version upgrades, if a non-default cluster parameter group is currently in use, a new cluster parameter group in the cluster parameter group family for the new version must be specified. The new cluster parameter group can be the default for that cluster parameter group family. For more information about parameters and parameter groups, go to Amazon Redshift Parameter Groups in the Amazon Redshift Cluster Management Guide .\nExample: 1.0",
            "Type": "string",
            "Required": false
        },
        "AllowVersionUpgrade": {
            "Description": "If true, major version upgrades will be applied automatically to the cluster during the maintenance window.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "HsmClientCertificateIdentifier": {
            "Description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
            "Type": "string",
            "Required": false
        },
        "HsmConfigurationIdentifier": {
            "Description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
            "Type": "string",
            "Required": false
        },
        "NewClusterIdentifier": {
            "Description": "The new identifier for the cluster.\nConstraints:\nExample: examplecluster",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "PubliclyAccessible": {
            "Description": "If true , the cluster can be accessed from a public network. Only clusters in VPCs can be set to be publicly available.",
            "Type": "boolean",
            "Required": false
        },
        "ElasticIp": {
            "Description": "The Elastic IP (EIP) address for the cluster.\nConstraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to Supported Platforms to Launch Your Cluster in the Amazon Redshift Cluster Management Guide.",
            "Type": "string",
            "Required": false
        },
        "EnhancedVpcRouting": {
            "Description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.\nIf this option is true, enhanced VPC routing is enabled.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "MaintenanceTrackName": {
            "Description": "The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.",
            "Type": "string",
            "Required": false
        },
        "Encrypted": {
            "Description": "Indicates whether the cluster is encrypted. If the value is encrypted (true) and you provide a value for the KmsKeyId parameter, we encrypt the cluster with the provided KmsKeyId. If you don't provide a KmsKeyId, we encrypt with the default key.\nIf the value is not encrypted (false), then the cluster is decrypted.",
            "Type": "boolean",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.",
            "Type": "string",
            "Required": false
        },
        "AvailabilityZoneRelocation": {
            "Description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.",
            "Type": "boolean",
            "Required": false
        },
        "AvailabilityZone": {
            "Description": "The option to initiate relocation for an Amazon Redshift cluster to the target Availability Zone.",
            "Type": "string",
            "Required": false
        },
        "Port": {
            "Description": "The option to change the port of an Amazon Redshift cluster.",
            "Type": "integer",
            "Required": false
        }
    },
    "modify_cluster_db_revision": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of a cluster whose database revision you want to modify.\nExample: examplecluster",
            "Type": "string",
            "Required": true
        },
        "RevisionTarget": {
            "Description": "The identifier of the database revision. You can retrieve this value from the response to the  DescribeClusterDbRevisions request.",
            "Type": "string",
            "Required": true
        }
    },
    "modify_cluster_iam_roles": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of the cluster for which you want to associate or disassociate IAM roles.",
            "Type": "string",
            "Required": true
        },
        "AddIamRoles": {
            "Description": "Zero or more IAM roles to associate with the cluster. The roles must be in their Amazon Resource Name (ARN) format.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveIamRoles": {
            "Description": "Zero or more IAM roles in ARN format to disassociate from the cluster.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DefaultIamRoleArn": {
            "Description": "The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was last modified.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_cluster_maintenance": {
        "ClusterIdentifier": {
            "Description": "A unique identifier for the cluster.",
            "Type": "string",
            "Required": true
        },
        "DeferMaintenance": {
            "Description": "A boolean indicating whether to enable the deferred maintenance window.",
            "Type": "boolean",
            "Required": false
        },
        "DeferMaintenanceIdentifier": {
            "Description": "A unique identifier for the deferred maintenance window.",
            "Type": "string",
            "Required": false
        },
        "DeferMaintenanceStartTime": {
            "Description": "A timestamp indicating the start time for the deferred maintenance window.",
            "Type": "datetime",
            "Required": false
        },
        "DeferMaintenanceEndTime": {
            "Description": "A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration.",
            "Type": "datetime",
            "Required": false
        },
        "DeferMaintenanceDuration": {
            "Description": "An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less.",
            "Type": "integer",
            "Required": false
        }
    },
    "modify_cluster_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the parameter group to be modified.",
            "Type": "string",
            "Required": true
        },
        "Parameters": {
            "Description": "An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.\nFor each parameter to be modified, you must supply at least the parameter name and parameter value; other name-value pairs of the parameter are optional.\nFor the workload management (WLM) configuration, you must supply all the name-value pairs in the wlm_json_configuration parameter.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "modify_cluster_snapshot": {
        "SnapshotIdentifier": {
            "Description": "The identifier of the snapshot whose setting you want to modify.",
            "Type": "string",
            "Required": true
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely.\nIf the manual snapshot falls outside of the new retention period, you can specify the force option to immediately delete the snapshot.\nThe value must be either -1 or an integer between 1 and 3,653.",
            "Type": "integer",
            "Required": false
        },
        "Force": {
            "Description": "A Boolean option to override an exception if the retention period has already passed.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_cluster_snapshot_schedule": {
        "ClusterIdentifier": {
            "Description": "A unique identifier for the cluster whose snapshot schedule you want to modify.",
            "Type": "string",
            "Required": true
        },
        "ScheduleIdentifier": {
            "Description": "A unique alphanumeric identifier for the schedule that you want to associate with the cluster.",
            "Type": "string",
            "Required": false
        },
        "DisassociateSchedule": {
            "Description": "A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_cluster_subnet_group": {
        "ClusterSubnetGroupName": {
            "Description": "The name of the subnet group to be modified.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A text description of the subnet group to be modified.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "modify_endpoint_access": {
        "EndpointName": {
            "Description": "The endpoint to be modified.",
            "Type": "string",
            "Required": true
        },
        "VpcSecurityGroupIds": {
            "Description": "The complete list of VPC security groups associated with the endpoint after the endpoint is modified.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_event_subscription": {
        "SubscriptionName": {
            "Description": "The name of the modified Amazon Redshift event notification subscription.",
            "Type": "string",
            "Required": true
        },
        "SnsTopicArn": {
            "Description": "The Amazon Resource Name (ARN) of the SNS topic to be used by the event notification subscription.",
            "Type": "string",
            "Required": false
        },
        "SourceType": {
            "Description": "The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.\nValid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.",
            "Type": "string",
            "Required": false
        },
        "SourceIds": {
            "Description": "A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.\nExample: my-cluster-1, my-cluster-2\nExample: my-snapshot-20131010",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EventCategories": {
            "Description": "Specifies the Amazon Redshift event categories to be published by the event notification subscription.\nValues: configuration, management, monitoring, security, pending",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Severity": {
            "Description": "Specifies the Amazon Redshift event severity to be published by the event notification subscription.\nValues: ERROR, INFO",
            "Type": "string",
            "Required": false
        },
        "Enabled": {
            "Description": "A Boolean value indicating if the subscription is enabled. true indicates the subscription is enabled",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_scheduled_action": {
        "ScheduledActionName": {
            "Description": "The name of the scheduled action to modify.",
            "Type": "string",
            "Required": true
        },
        "TargetAction": {
            "Description": "A modified JSON format of the scheduled action. For more information about this parameter, see  ScheduledAction .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Schedule": {
            "Description": "A modified schedule in either at( ) or cron( ) format. For more information about this parameter, see  ScheduledAction .",
            "Type": "string",
            "Required": false
        },
        "IamRole": {
            "Description": "A different IAM role to assume to run the target action. For more information about this parameter, see  ScheduledAction .",
            "Type": "string",
            "Required": false
        },
        "ScheduledActionDescription": {
            "Description": "A modified description of the scheduled action.",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "A modified start time of the scheduled action. For more information about this parameter, see  ScheduledAction .",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "A modified end time of the scheduled action. For more information about this parameter, see  ScheduledAction .",
            "Type": "datetime",
            "Required": false
        },
        "Enable": {
            "Description": "A modified enable flag of the scheduled action. If true, the scheduled action is active. If false, the scheduled action is disabled.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_snapshot_copy_retention_period": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of the cluster for which you want to change the retention period for either automated or manual snapshots that are copied to a destination Amazon Web Services Region.\nConstraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.",
            "Type": "string",
            "Required": true
        },
        "RetentionPeriod": {
            "Description": "The number of days to retain automated snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region.\nBy default, this only changes the retention period of copied automated snapshots.\nIf you decrease the retention period for automated snapshots that are copied to a destination Amazon Web Services Region, Amazon Redshift deletes any existing automated snapshots that were copied to the destination Amazon Web Services Region and that fall outside of the new retention period.\nConstraints: Must be at least 1 and no more than 35 for automated snapshots.\nIf you specify the manual option, only newly copied manual snapshots will have the new retention period.\nIf you specify the value of -1 newly copied manual snapshots are retained indefinitely.\nConstraints: The number of days must be either -1 or an integer between 1 and 3,653 for manual snapshots.",
            "Type": "integer",
            "Required": true
        },
        "Manual": {
            "Description": "Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_snapshot_schedule": {
        "ScheduleIdentifier": {
            "Description": "A unique alphanumeric identifier of the schedule to modify.",
            "Type": "string",
            "Required": true
        },
        "ScheduleDefinitions": {
            "Description": "An updated list of schedule definitions. A schedule definition is made up of schedule expressions, for example, \"cron(30 12 *)\" or \"rate(12 hours)\".",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "modify_usage_limit": {
        "UsageLimitId": {
            "Description": "The identifier of the usage limit to modify.",
            "Type": "string",
            "Required": true
        },
        "Amount": {
            "Description": "The new limit amount. For more information about this parameter, see  UsageLimit .",
            "Type": "integer",
            "Required": false
        },
        "BreachAction": {
            "Description": "The new action that Amazon Redshift takes when the limit is reached. For more information about this parameter, see  UsageLimit .",
            "Type": "string",
            "Required": false
        }
    },
    "pause_cluster": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster to be paused.",
            "Type": "string",
            "Required": true
        }
    },
    "purchase_reserved_node_offering": {
        "ReservedNodeOfferingId": {
            "Description": "The unique identifier of the reserved node offering you want to purchase.",
            "Type": "string",
            "Required": true
        },
        "NodeCount": {
            "Description": "The number of reserved nodes that you want to purchase.\nDefault: 1",
            "Type": "integer",
            "Required": false
        }
    },
    "reboot_cluster": {
        "ClusterIdentifier": {
            "Description": "The cluster identifier.",
            "Type": "string",
            "Required": true
        }
    },
    "reject_data_share": {
        "DataShareArn": {
            "Description": "The Amazon Resource Name (ARN) of the datashare to reject.",
            "Type": "string",
            "Required": true
        }
    },
    "reset_cluster_parameter_group": {
        "ParameterGroupName": {
            "Description": "The name of the cluster parameter group to be reset.",
            "Type": "string",
            "Required": true
        },
        "ResetAllParameters": {
            "Description": "If true, all parameters in the specified parameter group will be reset to their default values.\nDefault: true",
            "Type": "boolean",
            "Required": false
        },
        "Parameters": {
            "Description": "An array of names of parameters to be reset. If ResetAllParameters option is not used, then at least one parameter name must be supplied.\nConstraints: A maximum of 20 parameters can be reset in a single request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "resize_cluster": {
        "ClusterIdentifier": {
            "Description": "The unique identifier for the cluster to resize.",
            "Type": "string",
            "Required": true
        },
        "ClusterType": {
            "Description": "The new cluster type for the specified cluster.",
            "Type": "string",
            "Required": false
        },
        "NodeType": {
            "Description": "The new node type for the nodes you are adding. If not specified, the cluster's current node type is used.",
            "Type": "string",
            "Required": false
        },
        "NumberOfNodes": {
            "Description": "The new number of nodes for the cluster. If not specified, the cluster's current number of nodes is used.",
            "Type": "integer",
            "Required": false
        },
        "Classic": {
            "Description": "A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic.",
            "Type": "boolean",
            "Required": false
        },
        "ReservedNodeId": {
            "Description": "The identifier of the reserved node.",
            "Type": "string",
            "Required": false
        },
        "TargetReservedNodeOfferingId": {
            "Description": "The identifier of the target reserved node offering.",
            "Type": "string",
            "Required": false
        }
    },
    "restore_from_cluster_snapshot": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster that will be created from restoring the snapshot.\nConstraints:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SnapshotIdentifier": {
            "Description": "The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive. You can specify this parameter or snapshotArn, but not both.\nExample: my-snapshot-id",
            "Type": "string",
            "Required": false
        },
        "SnapshotArn": {
            "Description": "The Amazon Resource Name (ARN) of the snapshot associated with the message to restore from a cluster. You can specify this parameter or snapshotIdentifier , but not both.",
            "Type": "string",
            "Required": false
        },
        "SnapshotClusterIdentifier": {
            "Description": "The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.",
            "Type": "string",
            "Required": false
        },
        "Port": {
            "Description": "The port number on which the cluster accepts connections.\nDefault: The same port as the original cluster.\nConstraints: Must be between 1115 and 65535 .",
            "Type": "integer",
            "Required": false
        },
        "AvailabilityZone": {
            "Description": "The Amazon EC2 Availability Zone in which to restore the cluster.\nDefault: A random, system-chosen Availability Zone.\nExample: us-east-2a",
            "Type": "string",
            "Required": false
        },
        "AllowVersionUpgrade": {
            "Description": "If true, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster.\nDefault: true",
            "Type": "boolean",
            "Required": false
        },
        "ClusterSubnetGroupName": {
            "Description": "The name of the subnet group where you want to cluster restored.\nA snapshot of cluster in VPC can be restored only in VPC. Therefore, you must provide subnet group name where you want the cluster restored.",
            "Type": "string",
            "Required": false
        },
        "PubliclyAccessible": {
            "Description": "If true , the cluster can be accessed from a public network.",
            "Type": "boolean",
            "Required": false
        },
        "OwnerAccount": {
            "Description": "The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.",
            "Type": "string",
            "Required": false
        },
        "HsmClientCertificateIdentifier": {
            "Description": "Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
            "Type": "string",
            "Required": false
        },
        "HsmConfigurationIdentifier": {
            "Description": "Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
            "Type": "string",
            "Required": false
        },
        "ElasticIp": {
            "Description": "The elastic IP (EIP) address for the cluster.",
            "Type": "string",
            "Required": false
        },
        "ClusterParameterGroupName": {
            "Description": "The name of the parameter group to be associated with this cluster.\nDefault: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to Working with Amazon Redshift Parameter Groups .\nConstraints:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ClusterSecurityGroups": {
            "Description": "A list of security groups to be associated with this cluster.\nDefault: The default cluster security group for Amazon Redshift.\nCluster security groups only apply to clusters outside of VPCs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "VpcSecurityGroupIds": {
            "Description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.\nDefault: The default VPC security group is associated with the cluster.\nVPC security groups only apply to clusters in VPCs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PreferredMaintenanceWindow": {
            "Description": "The weekly time range (in UTC) during which automated cluster maintenance can occur.\nFormat: ddd:hh24:mi-ddd:hh24:mi\nDefault: The value selected for the cluster from which the snapshot was taken. For more information about the time blocks for each region, see Maintenance Windows in Amazon Redshift Cluster Management Guide.\nValid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\nConstraints: Minimum 30-minute window.",
            "Type": "string",
            "Required": false
        },
        "AutomatedSnapshotRetentionPeriod": {
            "Description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with  CreateClusterSnapshot .\nYou can't disable automated snapshots for RA3 node types. Set the automated retention period from 1-35 days.\nDefault: The value selected for the cluster from which the snapshot was taken.\nConstraints: Must be a value from 0 to 35.",
            "Type": "integer",
            "Required": false
        },
        "ManualSnapshotRetentionPeriod": {
            "Description": "The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots.\nThe value must be either -1 or an integer between 1 and 3,653.",
            "Type": "integer",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The Key Management Service (KMS) key ID of the encryption key that encrypts data in the cluster restored from a shared snapshot. You can also provide the key ID when you restore from an unencrypted snapshot to an encrypted cluster in the same account. Additionally, you can specify a new KMS key ID when you restore from an encrypted snapshot in the same account in order to change it. In that case, the restored cluster is encrypted with the new KMS key ID.",
            "Type": "string",
            "Required": false
        },
        "NodeType": {
            "Description": "The node type that the restored cluster will be provisioned with.\nDefault: The node type of the cluster from which the snapshot was taken. You can modify this if you are using any DS node type. In that case, you can choose to restore into another DS node type of the same size. For example, you can restore ds1.8xlarge into ds2.8xlarge, or ds1.xlarge into ds2.xlarge. If you have a DC instance type, you must restore into that same instance type and size. In other words, you can only restore a dc1.large instance type into another dc1.large instance type or dc2.large instance type. You can't restore dc1.8xlarge to dc2.8xlarge. First restore to a dc1.8xlarge cluster, then resize to a dc2.8large cluster. For more information about node types, see About Clusters and Nodes in the Amazon Redshift Cluster Management Guide .",
            "Type": "string",
            "Required": false
        },
        "EnhancedVpcRouting": {
            "Description": "An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.\nIf this option is true, enhanced VPC routing is enabled.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "AdditionalInfo": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        },
        "IamRoles": {
            "Description": "A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services. You must supply the IAM roles in their Amazon Resource Name (ARN) format.\nThe maximum number of IAM roles that you can associate is subject to a quota. For more information, go to Quotas and limits in the Amazon Redshift Cluster Management Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaintenanceTrackName": {
            "Description": "The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks.",
            "Type": "string",
            "Required": false
        },
        "SnapshotScheduleIdentifier": {
            "Description": "A unique identifier for the snapshot schedule.",
            "Type": "string",
            "Required": false
        },
        "NumberOfNodes": {
            "Description": "The number of nodes specified when provisioning the restored cluster.",
            "Type": "integer",
            "Required": false
        },
        "AvailabilityZoneRelocation": {
            "Description": "The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster is restored.",
            "Type": "boolean",
            "Required": false
        },
        "AquaConfigurationStatus": {
            "Description": "This parameter is retired. It does not set the AQUA configuration status. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).",
            "Type": "string",
            "Required": false
        },
        "DefaultIamRoleArn": {
            "Description": "The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was last modified while it was restored from a snapshot.",
            "Type": "string",
            "Required": false
        },
        "ReservedNodeId": {
            "Description": "The identifier of the target reserved node offering.",
            "Type": "string",
            "Required": false
        },
        "TargetReservedNodeOfferingId": {
            "Description": "The identifier of the target reserved node offering.",
            "Type": "string",
            "Required": false
        },
        "Encrypted": {
            "Description": "Enables support for restoring an unencrypted snapshot to a cluster encrypted with Key Management Service (KMS) and a customer managed key.",
            "Type": "boolean",
            "Required": false
        }
    },
    "restore_table_from_cluster_snapshot": {
        "ClusterIdentifier": {
            "Description": "The identifier of the Amazon Redshift cluster to restore the table to.",
            "Type": "string",
            "Required": true
        },
        "SnapshotIdentifier": {
            "Description": "The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the ClusterIdentifier parameter.",
            "Type": "string",
            "Required": true
        },
        "SourceDatabaseName": {
            "Description": "The name of the source database that contains the table to restore from.",
            "Type": "string",
            "Required": true
        },
        "SourceSchemaName": {
            "Description": "The name of the source schema that contains the table to restore from. If you do not specify a SourceSchemaName value, the default is public .",
            "Type": "string",
            "Required": false
        },
        "SourceTableName": {
            "Description": "The name of the source table to restore from.",
            "Type": "string",
            "Required": true
        },
        "TargetDatabaseName": {
            "Description": "The name of the database to restore the table to.",
            "Type": "string",
            "Required": false
        },
        "TargetSchemaName": {
            "Description": "The name of the schema to restore the table to.",
            "Type": "string",
            "Required": false
        },
        "NewTableName": {
            "Description": "The name of the table to create as a result of the current request.",
            "Type": "string",
            "Required": true
        },
        "EnableCaseSensitiveIdentifier": {
            "Description": "Indicates whether name identifiers for database, schema, and table are case sensitive. If true , the names are case sensitive. If false (default), the names are not case sensitive.",
            "Type": "boolean",
            "Required": false
        }
    },
    "resume_cluster": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster to be resumed.",
            "Type": "string",
            "Required": true
        }
    },
    "revoke_cluster_security_group_ingress": {
        "ClusterSecurityGroupName": {
            "Description": "The name of the security Group from which to revoke the ingress rule.",
            "Type": "string",
            "Required": true
        },
        "CIDRIP": {
            "Description": "The IP range for which to revoke access. This range must be a valid Classless Inter-Domain Routing (CIDR) block of IP addresses. If CIDRIP is specified, EC2SecurityGroupName and EC2SecurityGroupOwnerId cannot be provided.",
            "Type": "string",
            "Required": false
        },
        "EC2SecurityGroupName": {
            "Description": "The name of the EC2 Security Group whose access is to be revoked. If EC2SecurityGroupName is specified, EC2SecurityGroupOwnerId must also be provided and CIDRIP cannot be provided.",
            "Type": "string",
            "Required": false
        },
        "EC2SecurityGroupOwnerId": {
            "Description": "The Amazon Web Services account number of the owner of the security group specified in the EC2SecurityGroupName parameter. The Amazon Web Services access key ID is not an acceptable value. If EC2SecurityGroupOwnerId is specified, EC2SecurityGroupName must also be provided. and CIDRIP cannot be provided.\nExample: 111122223333",
            "Type": "string",
            "Required": false
        }
    },
    "revoke_endpoint_access": {
        "ClusterIdentifier": {
            "Description": "The cluster to revoke access from.",
            "Type": "string",
            "Required": false
        },
        "Account": {
            "Description": "The Amazon Web Services account ID whose access is to be revoked.",
            "Type": "string",
            "Required": false
        },
        "VpcIds": {
            "Description": "The virtual private cloud (VPC) identifiers for which access is to be revoked.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Force": {
            "Description": "Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted.",
            "Type": "boolean",
            "Required": false
        }
    },
    "revoke_snapshot_access": {
        "SnapshotIdentifier": {
            "Description": "The identifier of the snapshot that the account can no longer access.",
            "Type": "string",
            "Required": false
        },
        "SnapshotArn": {
            "Description": "The Amazon Resource Name (ARN) of the snapshot associated with the message to revoke access.",
            "Type": "string",
            "Required": false
        },
        "SnapshotClusterIdentifier": {
            "Description": "The identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.",
            "Type": "string",
            "Required": false
        },
        "AccountWithRestoreAccess": {
            "Description": "The identifier of the Amazon Web Services account that can no longer restore the specified snapshot.",
            "Type": "string",
            "Required": true
        }
    },
    "rotate_encryption_key": {
        "ClusterIdentifier": {
            "Description": "The unique identifier of the cluster that you want to rotate the encryption keys for.\nConstraints: Must be the name of valid cluster that has encryption enabled.",
            "Type": "string",
            "Required": true
        }
    },
    "update_partner_status": {
        "AccountId": {
            "Description": "The Amazon Web Services account ID that owns the cluster.",
            "Type": "string",
            "Required": true
        },
        "ClusterIdentifier": {
            "Description": "The cluster identifier of the cluster whose partner integration status is being updated.",
            "Type": "string",
            "Required": true
        },
        "DatabaseName": {
            "Description": "The name of the database whose partner integration status is being updated.",
            "Type": "string",
            "Required": true
        },
        "PartnerName": {
            "Description": "The name of the partner whose integration status is being updated.",
            "Type": "string",
            "Required": true
        },
        "Status": {
            "Description": "The value of the updated status.",
            "Type": "string",
            "Required": true
        },
        "StatusMessage": {
            "Description": "The status message provided by the partner.",
            "Type": "string",
            "Required": false
        }
    },
    "paginate": {
        "ReservedNodeId": {
            "Description": "A string representing the node identifier for the DC1 Reserved Node to be exchanged.",
            "Type": "string",
            "Required": true
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "ClusterIdentifier": {
            "Description": "The identifier of the cluster which generated the requested snapshots.",
            "Type": "string",
            "Required": false
        },
        "SnapshotIdentifier": {
            "Description": "The snapshot identifier of the snapshot about which to return information.",
            "Type": "string",
            "Required": false
        },
        "SnapshotArn": {
            "Description": "The Amazon Resource Name (ARN) of the snapshot associated with the message to describe cluster snapshots.",
            "Type": "string",
            "Required": false
        },
        "SnapshotType": {
            "Description": "The type of snapshots for which you are requesting information. By default, snapshots of all types are returned.\nValid Values: automated | manual",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "A value that requests only snapshots created at or after the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2012-07-16T18:00:00Z",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "A time value that requests only snapshots created at or before the specified time. The time value is specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2012-07-16T18:00:00Z",
            "Type": "datetime",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified MaxRecords value, a value is returned in a marker field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.\nDefault: 100\nConstraints: minimum 20, maximum 100.",
            "Type": "integer",
            "Required": false
        },
        "Marker": {
            "Description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a  DescribeClusterSnapshots request exceed the value specified in MaxRecords , Amazon Web Services returns a value in the Marker field of the response. You can retrieve the next set of response records by providing the returned marker value in the Marker parameter and retrying the request.",
            "Type": "string",
            "Required": false
        },
        "OwnerAccount": {
            "Description": "The Amazon Web Services account used to create or copy the snapshot. Use this field to filter the results to snapshots owned by a particular account. To describe snapshots you own, either specify your Amazon Web Services account, or do not specify the parameter.",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "A tag key or keys for which you want to return all matching cluster snapshots that are associated with the specified key or keys. For example, suppose that you have snapshots that are tagged with keys called owner and environment. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag keys associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagValues": {
            "Description": "A tag value or values for which you want to return all matching cluster snapshots that are associated with the specified tag value or values. For example, suppose that you have snapshots that are tagged with values called admin and test. If you specify both of these tag values in the request, Amazon Redshift returns a response with the snapshots that have either or both of these tag values associated with them.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClusterExists": {
            "Description": "A value that indicates whether to return snapshots only for an existing cluster. You can perform table-level restore only by using a snapshot of an existing cluster, that is, a cluster that has not been deleted. Values for this parameter work as follows:",
            "Type": "boolean",
            "Required": false,
            "boolean variables": {}
        },
        "SortingEntities": {
            "Description": "\n(dict) --Describes a sorting entity\n\nAttribute (string)[REQUIRED]The category for sorting the snapshots.\n\nSortOrder (string) --The order for listing the attributes.\n\n\n\n\n",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}