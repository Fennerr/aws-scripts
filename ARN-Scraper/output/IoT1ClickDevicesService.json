{
    "claim_devices_by_claim_code": {
        "ClaimCode": {
            "Description": "The claim code, starting with \"C-\", as provided by the device manufacturer.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_device": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        }
    },
    "finalize_device_claim": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A collection of key/value pairs defining the resource tags. For example, { \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see AWS Tagging Strategies .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "get_device_methods": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        }
    },
    "initiate_device_claim": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        }
    },
    "invoke_device_method": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        },
        "DeviceMethod": {
            "Description": "The device method to invoke.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DeviceMethodParameters": {
            "Description": "A JSON encoded string containing the device method request parameters.",
            "Type": "string",
            "Required": false
        }
    },
    "list_device_events": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        },
        "FromTimeStamp": {
            "Description": "The start date for the device event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z",
            "Type": "datetime",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return per request. If not set, a default value of 100 is used.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        },
        "ToTimeStamp": {
            "Description": "The end date for the device event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z",
            "Type": "datetime",
            "Required": true
        }
    },
    "list_devices": {
        "DeviceType": {
            "Description": "The type of the device, such as \"button\".",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return per request. If not set, a default value of 100 is used.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A collection of key/value pairs defining the resource tags. For example, { \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see AWS Tagging Strategies .",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "unclaim_device": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A collections of tag keys. For example, {\"key1\",\"key2\"}",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_device_state": {
        "DeviceId": {
            "Description": "The unique identifier of the device.",
            "Type": "string",
            "Required": true
        },
        "Enabled": {
            "Description": "If true, the device is enabled. If false, the device is disabled.",
            "Type": "boolean",
            "Required": false
        }
    },
    "paginate": {
        "DeviceType": {
            "Description": "The type of the device, such as \"button\".",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}