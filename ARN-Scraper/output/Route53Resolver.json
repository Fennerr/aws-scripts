{
    "associate_firewall_rule_group": {
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        },
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The unique identifier of the VPC that you want to associate with the rule group.",
            "Type": "string",
            "Required": true
        },
        "Priority": {
            "Description": "The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.\nYou must specify a unique priority for each rule group that you associate with a single VPC. To make it easier to insert rule groups later, leave space between the numbers, for example, use 101, 200, and so on. You can change the priority setting for a rule group association after you create it.\nThe allowed values for Priority are between 100 and 9900.",
            "Type": "integer",
            "Required": true
        },
        "Name": {
            "Description": "A name that lets you identify the association, to manage and use it.",
            "Type": "string",
            "Required": true
        },
        "MutationProtection": {
            "Description": "If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. When you create the association, the default setting is DISABLED .",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of the tag keys and values that you want to associate with the rule group association.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "associate_resolver_endpoint_ip_address": {
        "ResolverEndpointId": {
            "Description": "The ID of the Resolver endpoint that you want to associate IP addresses with.",
            "Type": "string",
            "Required": true
        },
        "IpAddress": {
            "Description": "Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "associate_resolver_query_log_config": {
        "ResolverQueryLogConfigId": {
            "Description": "The ID of the query logging configuration that you want to associate a VPC with.",
            "Type": "string",
            "Required": true
        },
        "ResourceId": {
            "Description": "The ID of an Amazon VPC that you want this query logging configuration to log queries for.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_resolver_rule": {
        "ResolverRuleId": {
            "Description": "The ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use ListResolverRules .",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "A name for the association that you're creating between a Resolver rule and a VPC.",
            "Type": "string",
            "Required": false
        },
        "VPCId": {
            "Description": "The ID of the VPC that you want to associate the Resolver rule with.",
            "Type": "string",
            "Required": true
        }
    },
    "create_firewall_domain_list": {
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows you to retry failed requests without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "A name that lets you identify the domain list to manage and use it.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of the tag keys and values that you want to associate with the domain list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_firewall_rule": {
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows you to retry failed requests without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        },
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group where you want to create the rule.",
            "Type": "string",
            "Required": true
        },
        "FirewallDomainListId": {
            "Description": "The ID of the domain list that you want to use in the rule.",
            "Type": "string",
            "Required": true
        },
        "Priority": {
            "Description": "The setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\nYou must specify a unique priority for each rule in a rule group. To make it easier to insert rules later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for the rules in a rule group at any time.",
            "Type": "integer",
            "Required": true
        },
        "Action": {
            "Description": "The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "BlockResponse": {
            "Description": "The way that you want DNS Firewall to block the request, used with the rule action setting BLOCK .\nThis setting is required if the rule action setting is BLOCK .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "BlockOverrideDomain": {
            "Description": "The custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\nThis setting is required if the BlockResponse setting is OVERRIDE .",
            "Type": "string",
            "Required": false
        },
        "BlockOverrideDnsType": {
            "Description": "The DNS record's type. This determines the format of the record value that you provided in BlockOverrideDomain. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\nThis setting is required if the BlockResponse setting is OVERRIDE .",
            "Type": "string",
            "Required": false
        },
        "BlockOverrideTtl": {
            "Description": "The recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\nThis setting is required if the BlockResponse setting is OVERRIDE .",
            "Type": "integer",
            "Required": false
        },
        "Name": {
            "Description": "A name that lets you identify the rule in the rule group.",
            "Type": "string",
            "Required": true
        }
    },
    "create_firewall_rule_group": {
        "CreatorRequestId": {
            "Description": "A unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "A name that lets you identify the rule group, to manage and use it.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of the tag keys and values that you want to associate with the rule group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_resolver_endpoint": {
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.",
            "Type": "string",
            "Required": false
        },
        "SecurityGroupIds": {
            "Description": "The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Direction": {
            "Description": "Specify the applicable value:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "IpAddresses": {
            "Description": "The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Tags": {
            "Description": "A list of the tag keys and values that you want to associate with the endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_resolver_query_log_config": {
        "Name": {
            "Description": "The name that you want to give the query logging configuration.",
            "Type": "string",
            "Required": true
        },
        "DestinationArn": {
            "Description": "The ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of the tag keys and values that you want to associate with the query logging configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_resolver_rule": {
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.",
            "Type": "string",
            "Required": false
        },
        "RuleType": {
            "Description": "When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType. To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .",
            "Type": "string",
            "Required": true
        },
        "DomainName": {
            "Description": "DNS queries for this domain name are forwarded to the IP addresses that you specify in TargetIps. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).",
            "Type": "string",
            "Required": true
        },
        "TargetIps": {
            "Description": "The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a space.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResolverEndpointId": {
            "Description": "The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in TargetIps .",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of the tag keys and values that you want to associate with the endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "delete_firewall_domain_list": {
        "FirewallDomainListId": {
            "Description": "The ID of the domain list that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_firewall_rule": {
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group that you want to delete the rule from.",
            "Type": "string",
            "Required": true
        },
        "FirewallDomainListId": {
            "Description": "The ID of the domain list that's used in the rule.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_firewall_rule_group": {
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_resolver_endpoint": {
        "ResolverEndpointId": {
            "Description": "The ID of the Resolver endpoint that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_resolver_query_log_config": {
        "ResolverQueryLogConfigId": {
            "Description": "The ID of the query logging configuration that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_resolver_rule": {
        "ResolverRuleId": {
            "Description": "The ID of the Resolver rule that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_firewall_rule_group": {
        "FirewallRuleGroupAssociationId": {
            "Description": "The identifier of the  FirewallRuleGroupAssociation .",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_resolver_endpoint_ip_address": {
        "ResolverEndpointId": {
            "Description": "The ID of the Resolver endpoint that you want to disassociate an IP address from.",
            "Type": "string",
            "Required": true
        },
        "IpAddress": {
            "Description": "The IPv4 address that you want to remove from a Resolver endpoint.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "disassociate_resolver_query_log_config": {
        "ResolverQueryLogConfigId": {
            "Description": "The ID of the query logging configuration that you want to disassociate a specified VPC from.",
            "Type": "string",
            "Required": true
        },
        "ResourceId": {
            "Description": "The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_resolver_rule": {
        "VPCId": {
            "Description": "The ID of the VPC that you want to disassociate the Resolver rule from.",
            "Type": "string",
            "Required": true
        },
        "ResolverRuleId": {
            "Description": "The ID of the Resolver rule that you want to disassociate from the specified VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "get_firewall_config": {
        "ResourceId": {
            "Description": "The ID of the VPC from Amazon VPC that the configuration is for.",
            "Type": "string",
            "Required": true
        }
    },
    "get_firewall_domain_list": {
        "FirewallDomainListId": {
            "Description": "The ID of the domain list.",
            "Type": "string",
            "Required": true
        }
    },
    "get_firewall_rule_group": {
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group.",
            "Type": "string",
            "Required": true
        }
    },
    "get_firewall_rule_group_association": {
        "FirewallRuleGroupAssociationId": {
            "Description": "The identifier of the  FirewallRuleGroupAssociation .",
            "Type": "string",
            "Required": true
        }
    },
    "get_firewall_rule_group_policy": {
        "Arn": {
            "Description": "The ARN (Amazon Resource Name) for the rule group.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_config": {
        "ResourceId": {
            "Description": "Resource ID of the Amazon VPC that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_dnssec_config": {
        "ResourceId": {
            "Description": "The ID of the virtual private cloud (VPC) for the DNSSEC validation status.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_endpoint": {
        "ResolverEndpointId": {
            "Description": "The ID of the Resolver endpoint that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_query_log_config": {
        "ResolverQueryLogConfigId": {
            "Description": "The ID of the Resolver query logging configuration that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_query_log_config_association": {
        "ResolverQueryLogConfigAssociationId": {
            "Description": "The ID of the Resolver query logging configuration association that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_query_log_config_policy": {
        "Arn": {
            "Description": "The ARN of the query logging configuration that you want to get the query logging policy for.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_rule": {
        "ResolverRuleId": {
            "Description": "The ID of the Resolver rule that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_rule_association": {
        "ResolverRuleAssociationId": {
            "Description": "The ID of the Resolver rule association that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_resolver_rule_policy": {
        "Arn": {
            "Description": "The ID of the Resolver rule that you want to get the Resolver rule policy for.",
            "Type": "string",
            "Required": true
        }
    },
    "import_firewall_domains": {
        "FirewallDomainListId": {
            "Description": "The ID of the domain list that you want to modify with the import operation.",
            "Type": "string",
            "Required": true
        },
        "Operation": {
            "Description": "What you want DNS Firewall to do with the domains that are listed in the file. This must be set to REPLACE, which updates the domain list to exactly match the list in the file.",
            "Type": "string",
            "Required": true
        },
        "DomainFileUrl": {
            "Description": "The fully qualified URL or URI of the file stored in Amazon Simple Storage Service (Amazon S3) that contains the list of domains to import.\nThe file must be in an S3 bucket that's in the same Region as your DNS Firewall. The file must be a text file and must contain a single domain per line.",
            "Type": "string",
            "Required": true
        }
    },
    "list_firewall_configs": {
        "MaxResults": {
            "Description": "The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a NextToken value that you can use in a subsequent call to get the next batch of objects.\nIf you don't specify a value for MaxResults, Resolver returns up to 100 objects.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first call to this list request, omit this value.\nWhen you request a list of objects, Resolver returns at most the number of objects specified in MaxResults. If more objects are available for retrieval, Resolver returns a NextToken value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_firewall_domain_lists": {
        "MaxResults": {
            "Description": "The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a NextToken value that you can use in a subsequent call to get the next batch of objects.\nIf you don't specify a value for MaxResults, Resolver returns up to 100 objects.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first call to this list request, omit this value.\nWhen you request a list of objects, Resolver returns at most the number of objects specified in MaxResults. If more objects are available for retrieval, Resolver returns a NextToken value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_firewall_domains": {
        "FirewallDomainListId": {
            "Description": "The ID of the domain list whose domains you want to retrieve.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a NextToken value that you can use in a subsequent call to get the next batch of objects.\nIf you don't specify a value for MaxResults, Resolver returns up to 100 objects.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first call to this list request, omit this value.\nWhen you request a list of objects, Resolver returns at most the number of objects specified in MaxResults. If more objects are available for retrieval, Resolver returns a NextToken value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_firewall_rule_group_associations": {
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group that you want to retrieve the associations for. Leave this blank to retrieve associations for any rule group.",
            "Type": "string",
            "Required": false
        },
        "VpcId": {
            "Description": "The unique identifier of the VPC that you want to retrieve the associations for. Leave this blank to retrieve associations for any VPC.",
            "Type": "string",
            "Required": false
        },
        "Priority": {
            "Description": "The setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.",
            "Type": "integer",
            "Required": false
        },
        "Status": {
            "Description": "The association Status setting that you want DNS Firewall to filter on for the list. If you don't specify this, then DNS Firewall returns all associations, regardless of status.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a NextToken value that you can use in a subsequent call to get the next batch of objects.\nIf you don't specify a value for MaxResults, Resolver returns up to 100 objects.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first call to this list request, omit this value.\nWhen you request a list of objects, Resolver returns at most the number of objects specified in MaxResults. If more objects are available for retrieval, Resolver returns a NextToken value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_firewall_rule_groups": {
        "MaxResults": {
            "Description": "The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a NextToken value that you can use in a subsequent call to get the next batch of objects.\nIf you don't specify a value for MaxResults, Resolver returns up to 100 objects.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first call to this list request, omit this value.\nWhen you request a list of objects, Resolver returns at most the number of objects specified in MaxResults. If more objects are available for retrieval, Resolver returns a NextToken value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_firewall_rules": {
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group that you want to retrieve the rules for.",
            "Type": "string",
            "Required": true
        },
        "Priority": {
            "Description": "Optional additional filter for the rules to retrieve.\nThe setting that determines the processing order of the rules in a rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.",
            "Type": "integer",
            "Required": false
        },
        "Action": {
            "Description": "Optional additional filter for the rules to retrieve.\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a NextToken value that you can use in a subsequent call to get the next batch of objects.\nIf you don't specify a value for MaxResults, Resolver returns up to 100 objects.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first call to this list request, omit this value.\nWhen you request a list of objects, Resolver returns at most the number of objects specified in MaxResults. If more objects are available for retrieval, Resolver returns a NextToken value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_resolver_configs": {
        "MaxResults": {
            "Description": "The maximum number of Resolver configurations that you want to return in the response to a ListResolverConfigs request. If you don't specify a value for MaxResults , up to 100 Resolver configurations are returned.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "(Optional) If the current Amazon Web Services account has more than MaxResults Resolver configurations, use NextToken to get the second and subsequent pages of results.\nFor the first ListResolverConfigs request, omit this value.\nFor the second and subsequent requests, get the value of NextToken from the previous response and specify that value for NextToken in the request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_resolver_dnssec_configs": {
        "MaxResults": {
            "Description": "Optional : An integer that specifies the maximum number of DNSSEC configuration results that you want Amazon Route 53 to return. If you don't specify a value for MaxResults , Route 53 returns up to 100 configuration per page.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "(Optional) If the current Amazon Web Services account has more than MaxResults DNSSEC configurations, use NextToken to get the second and subsequent pages of results.\nFor the first ListResolverDnssecConfigs request, omit this value.\nFor the second and subsequent requests, get the value of NextToken from the previous response and specify that value for NextToken in the request.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "An optional specification to return a subset of objects.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_resolver_endpoint_ip_addresses": {
        "ResolverEndpointId": {
            "Description": "The ID of the Resolver endpoint that you want to get IP addresses for.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of IP addresses that you want to return in the response to a ListResolverEndpointIpAddresses request. If you don't specify a value for MaxResults , Resolver returns up to 100 IP addresses.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListResolverEndpointIpAddresses request, omit this value.\nIf the specified Resolver endpoint has more than MaxResults IP addresses, you can submit another ListResolverEndpointIpAddresses request to get the next group of IP addresses. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        }
    },
    "list_resolver_endpoints": {
        "MaxResults": {
            "Description": "The maximum number of Resolver endpoints that you want to return in the response to a ListResolverEndpoints request. If you don't specify a value for MaxResults , Resolver returns up to 100 Resolver endpoints.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListResolverEndpoints request, omit this value.\nIf you have more than MaxResults Resolver endpoints, you can submit another ListResolverEndpoints request to get the next group of Resolver endpoints. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "An optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_resolver_query_log_config_associations": {
        "MaxResults": {
            "Description": "The maximum number of query logging associations that you want to return in the response to a ListResolverQueryLogConfigAssociations request. If you don't specify a value for MaxResults , Resolver returns up to 100 query logging associations.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListResolverQueryLogConfigAssociations request, omit this value.\nIf there are more than MaxResults query logging associations that match the values that you specify for Filters, you can submit another ListResolverQueryLogConfigAssociations request to get the next group of associations. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "An optional specification to return a subset of query logging associations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SortBy": {
            "Description": "The element that you want Resolver to sort query logging associations by.\nValid values include the following elements:\nIf Status is a value other than FAILED, ERROR is null.",
            "Type": "string",
            "Required": false,
            "string variables": [
                {},
                {}
            ]
        },
        "SortOrder": {
            "Description": "If you specified a value for SortBy, the order that you want query logging associations to be listed in, ASCENDING or DESCENDING .",
            "Type": "string",
            "Required": false
        }
    },
    "list_resolver_query_log_configs": {
        "MaxResults": {
            "Description": "The maximum number of query logging configurations that you want to return in the response to a ListResolverQueryLogConfigs request. If you don't specify a value for MaxResults , Resolver returns up to 100 query logging configurations.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListResolverQueryLogConfigs request, omit this value.\nIf there are more than MaxResults query logging configurations that match the values that you specify for Filters, you can submit another ListResolverQueryLogConfigs request to get the next group of configurations. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "An optional specification to return a subset of query logging configurations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SortBy": {
            "Description": "The element that you want Resolver to sort query logging configurations by.\nValid values include the following elements:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "SortOrder": {
            "Description": "If you specified a value for SortBy, the order that you want query logging configurations to be listed in, ASCENDING or DESCENDING .",
            "Type": "string",
            "Required": false
        }
    },
    "list_resolver_rule_associations": {
        "MaxResults": {
            "Description": "The maximum number of rule associations that you want to return in the response to a ListResolverRuleAssociations request. If you don't specify a value for MaxResults , Resolver returns up to 100 rule associations.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListResolverRuleAssociation request, omit this value.\nIf you have more than MaxResults rule associations, you can submit another ListResolverRuleAssociation request to get the next group of rule associations. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "An optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_resolver_rules": {
        "MaxResults": {
            "Description": "The maximum number of Resolver rules that you want to return in the response to a ListResolverRules request. If you don't specify a value for MaxResults , Resolver returns up to 100 Resolver rules.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListResolverRules request, omit this value.\nIf you have more than MaxResults Resolver rules, you can submit another ListResolverRules request to get the next group of Resolver rules. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "An optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the resource that you want to list tags for.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of tags that you want to return in the response to a ListTagsForResource request. If you don't specify a value for MaxResults , Resolver returns up to 100 tags.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first ListTagsForResource request, omit this value.\nIf you have more than MaxResults tags, you can submit another ListTagsForResource request to get the next group of tags for the resource. In the next request, specify the value of NextToken from the previous response.",
            "Type": "string",
            "Required": false
        }
    },
    "put_firewall_rule_group_policy": {
        "Arn": {
            "Description": "The ARN (Amazon Resource Name) for the rule group that you want to share.",
            "Type": "string",
            "Required": true
        },
        "FirewallRuleGroupPolicy": {
            "Description": "The Identity and Access Management (Amazon Web Services IAM) policy to attach to the rule group.",
            "Type": "string",
            "Required": true
        }
    },
    "put_resolver_query_log_config_policy": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) of the account that you want to share rules with.",
            "Type": "string",
            "Required": true
        },
        "ResolverQueryLogConfigPolicy": {
            "Description": "An Identity and Access Management policy statement that lists the query logging configurations that you want to share with another Amazon Web Services account and the operations that you want the account to be able to perform. You can specify the following operations in the Actions section of the statement:\nIn the Resource section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in Arn .",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "put_resolver_rule_policy": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) of the rule that you want to share with another account.",
            "Type": "string",
            "Required": true
        },
        "ResolverRulePolicy": {
            "Description": "An Identity and Access Management policy statement that lists the rules that you want to share with another Amazon Web Services account and the operations that you want the account to be able to perform. You can specify the following operations in the Action section of the statement:\nIn the Resource section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in Arn .",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable Get or List command:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Tags": {
            "Description": "The tags that you want to add to the specified resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable Get or List command:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "TagKeys": {
            "Description": "The tags that you want to remove to the specified resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_firewall_config": {
        "ResourceId": {
            "Description": "The ID of the VPC that the configuration is for.",
            "Type": "string",
            "Required": true
        },
        "FirewallFailOpen": {
            "Description": "Determines how Route 53 Resolver handles queries during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply.\nThis behavior is only enforced for VPCs that have at least one DNS Firewall rule group association.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "update_firewall_domains": {
        "FirewallDomainListId": {
            "Description": "The ID of the domain list whose domains you want to update.",
            "Type": "string",
            "Required": true
        },
        "Operation": {
            "Description": "What you want DNS Firewall to do with the domains that you are providing:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Domains": {
            "Description": "A list of domains to use in the update operation.\nEach domain specification in your domain list must satisfy the following requirements:",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "update_firewall_rule": {
        "FirewallRuleGroupId": {
            "Description": "The unique identifier of the firewall rule group for the rule.",
            "Type": "string",
            "Required": true
        },
        "FirewallDomainListId": {
            "Description": "The ID of the domain list to use in the rule.",
            "Type": "string",
            "Required": true
        },
        "Priority": {
            "Description": "The setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\nYou must specify a unique priority for each rule in a rule group. To make it easier to insert rules later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for the rules in a rule group at any time.",
            "Type": "integer",
            "Required": false
        },
        "Action": {
            "Description": "The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "BlockResponse": {
            "Description": "The way that you want DNS Firewall to block the request. Used for the rule action setting BLOCK .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "BlockOverrideDomain": {
            "Description": "The custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .",
            "Type": "string",
            "Required": false
        },
        "BlockOverrideDnsType": {
            "Description": "The DNS record's type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .",
            "Type": "string",
            "Required": false
        },
        "BlockOverrideTtl": {
            "Description": "The recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .",
            "Type": "integer",
            "Required": false
        },
        "Name": {
            "Description": "The name of the rule.",
            "Type": "string",
            "Required": false
        }
    },
    "update_firewall_rule_group_association": {
        "FirewallRuleGroupAssociationId": {
            "Description": "The identifier of the  FirewallRuleGroupAssociation .",
            "Type": "string",
            "Required": true
        },
        "Priority": {
            "Description": "The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.\nYou must specify a unique priority for each rule group that you associate with a single VPC. To make it easier to insert rule groups later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for a rule group association after you create it.",
            "Type": "integer",
            "Required": false
        },
        "MutationProtection": {
            "Description": "If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "The name of the rule group association.",
            "Type": "string",
            "Required": false
        }
    },
    "update_resolver_config": {
        "ResourceId": {
            "Description": "Resource ID of the Amazon VPC that you want to update the Resolver configuration for.",
            "Type": "string",
            "Required": true
        },
        "AutodefinedReverseFlag": {
            "Description": "Indicates whether or not the Resolver will create autodefined rules for reverse DNS lookups. This is enabled by default. Disabling this option will also affect EC2-Classic instances using ClassicLink. For more information, see ClassicLink in the Amazon EC2 guide .",
            "Type": "string",
            "Required": true
        }
    },
    "update_resolver_dnssec_config": {
        "ResourceId": {
            "Description": "The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.",
            "Type": "string",
            "Required": true
        },
        "Validation": {
            "Description": "The new value that you are specifying for DNSSEC validation for the VPC. The value can be ENABLE or DISABLE. Be aware that it can take time for a validation status change to be completed.",
            "Type": "string",
            "Required": true
        }
    },
    "update_resolver_endpoint": {
        "ResolverEndpointId": {
            "Description": "The ID of the Resolver endpoint that you want to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of the Resolver endpoint that you want to update.",
            "Type": "string",
            "Required": false
        }
    },
    "update_resolver_rule": {
        "ResolverRuleId": {
            "Description": "The ID of the Resolver rule that you want to update.",
            "Type": "string",
            "Required": true
        },
        "Config": {
            "Description": "The new settings for the Resolver rule.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "paginate": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the resource that you want to list tags for.",
            "Type": "string",
            "Required": true
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}