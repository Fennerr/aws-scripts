{
    "create_http_namespace": {
        "Name": {
            "Description": "The name that you want to assign to this namespace.",
            "Type": "string",
            "Required": true
        },
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed CreateHttpNamespace requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/time stamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the namespace.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to add to the namespace. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_private_dns_namespace": {
        "Name": {
            "Description": "The name that you want to assign to this namespace. When you create a private DNS namespace, Cloud Map automatically creates an Amazon Route 53 private hosted zone that has the same name as the namespace.",
            "Type": "string",
            "Required": true
        },
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed CreatePrivateDnsNamespace requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the namespace.",
            "Type": "string",
            "Required": false
        },
        "Vpc": {
            "Description": "The ID of the Amazon VPC that you want to associate the namespace with.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to add to the namespace. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Properties": {
            "Description": "Properties for the private DNS namespace.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_public_dns_namespace": {
        "Name": {
            "Description": "The name that you want to assign to this namespace.",
            "Type": "string",
            "Required": true
        },
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed CreatePublicDnsNamespace requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the namespace.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to add to the namespace. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Properties": {
            "Description": "Properties for the public DNS namespace.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_service": {
        "Name": {
            "Description": "The name that you want to assign to the service.\nIf you want Cloud Map to create an SRV record when you register an instance and you're using a system that requires a specific SRV format, such as HAProxy, specify the following for Name :\nWhen you register an instance, Cloud Map creates an SRV record and assigns a name to the record by concatenating the service name and the namespace name (for example,",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "NamespaceId": {
            "Description": "The ID of the namespace that you want to use to create the service. The namespace ID must be specified, but it can be specified either here or in the DnsConfig object.",
            "Type": "string",
            "Required": false
        },
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed CreateService requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the service.",
            "Type": "string",
            "Required": false
        },
        "DnsConfig": {
            "Description": "A complex type that contains information about the Amazon Route 53 records that you want Cloud Map to create when you register an instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HealthCheckConfig": {
            "Description": "For information about the charges for health checks, see Cloud Map Pricing .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HealthCheckCustomConfig": {
            "Description": "A complex type that contains information about an optional custom health check.\nYou can't add, update, or delete a HealthCheckCustomConfig configuration from an existing service.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to add to the service. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Type": {
            "Description": "If present, specifies that the service instances are only discoverable using the DiscoverInstances API operation. No DNS records is registered for the service instances. The only valid value is HTTP .",
            "Type": "string",
            "Required": false
        }
    },
    "delete_namespace": {
        "Id": {
            "Description": "The ID of the namespace that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_service": {
        "Id": {
            "Description": "The ID of the service that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "deregister_instance": {
        "ServiceId": {
            "Description": "The ID of the service that the instance is associated with.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "The value that you specified for Id in the RegisterInstance request.",
            "Type": "string",
            "Required": true
        }
    },
    "discover_instances": {
        "NamespaceName": {
            "Description": "The HttpName name of the namespace. It's found in the HttpProperties member of the Properties member of the namespace.",
            "Type": "string",
            "Required": true
        },
        "ServiceName": {
            "Description": "The name of the service that you specified when you registered the instance.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of instances that you want Cloud Map to return in the response to a DiscoverInstances request. If you don't specify a value for MaxResults , Cloud Map returns up to 100 instances.",
            "Type": "integer",
            "Required": false
        },
        "QueryParameters": {
            "Description": "Filters to scope the results based on custom attributes for the instance (for example, {version=v1, az=1a} ). Only instances that match all the specified key-value pairs are returned.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "OptionalParameters": {
            "Description": "Opportunistic filters to scope the results based on custom attributes. If there are instances that match both the filters specified in both the QueryParameters parameter and this parameter, all of these instances are returned. Otherwise, the filters are ignored, and only instances that match the filters that are specified in the QueryParameters parameter are returned.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HealthStatus": {
            "Description": "The health status of the instances that you want to discover. This parameter is ignored for services that don't have a health check configured, and all instances are returned.\nReturns healthy instances.\nReturns unhealthy instances.\nReturns all instances.\nReturns healthy instances, unless none are reporting a healthy state. In that case, return all instances. This is also called failing open.",
            "Type": "string",
            "Required": false
        }
    },
    "get_instance": {
        "ServiceId": {
            "Description": "The ID of the service that the instance is associated with.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "The ID of the instance that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_instances_health_status": {
        "ServiceId": {
            "Description": "The ID of the service that the instance is associated with.",
            "Type": "string",
            "Required": true
        },
        "Instances": {
            "Description": "An array that contains the IDs of all the instances that you want to get the health status for.\nIf you omit Instances, Cloud Map returns the health status for all the instances that are associated with the specified service.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of instances that you want Cloud Map to return in the response to a GetInstancesHealthStatus request. If you don't specify a value for MaxResults , Cloud Map returns up to 100 instances.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "For the first GetInstancesHealthStatus request, omit this value.\nIf more than MaxResults instances match the specified criteria, you can submit another GetInstancesHealthStatus request to get the next group of results. Specify the value of NextToken from the previous response in the next request.",
            "Type": "string",
            "Required": false
        }
    },
    "get_namespace": {
        "Id": {
            "Description": "The ID of the namespace that you want to get information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_operation": {
        "OperationId": {
            "Description": "The ID of the operation that you want to get more information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_service": {
        "Id": {
            "Description": "The ID of the service that you want to get settings for.",
            "Type": "string",
            "Required": true
        }
    },
    "list_instances": {
        "ServiceId": {
            "Description": "The ID of the service that you want to list instances for.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "For the first ListInstances request, omit this value.\nIf more than MaxResults instances match the specified criteria, you can submit another ListInstances request to get the next group of results. Specify the value of NextToken from the previous response in the next request.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of instances that you want Cloud Map to return in the response to a ListInstances request. If you don't specify a value for MaxResults , Cloud Map returns up to 100 instances.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_namespaces": {
        "NextToken": {
            "Description": "For the first ListNamespaces request, omit this value.\nIf the response contains NextToken, submit another ListNamespaces request to get the next group of results. Specify the value of NextToken from the previous response in the next request.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of namespaces that you want Cloud Map to return in the response to a ListNamespaces request. If you don't specify a value for MaxResults , Cloud Map returns up to 100 namespaces.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "A complex type that contains specifications for the namespaces that you want to list.\nIf you specify more than one filter, a namespace must match all filters to be returned by ListNamespaces .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_operations": {
        "NextToken": {
            "Description": "For the first ListOperations request, omit this value.\nIf the response contains NextToken, submit another ListOperations request to get the next group of results. Specify the value of NextToken from the previous response in the next request.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items that you want Cloud Map to return in the response to a ListOperations request. If you don't specify a value for MaxResults , Cloud Map returns up to 100 operations.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "A complex type that contains specifications for the operations that you want to list, for example, operations that you started between a specified start date and end date.\nIf you specify more than one filter, an operation must match all filters to be returned by ListOperations .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_services": {
        "NextToken": {
            "Description": "For the first ListServices request, omit this value.\nIf the response contains NextToken, submit another ListServices request to get the next group of results. Specify the value of NextToken from the previous response in the next request.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of services that you want Cloud Map to return in the response to a ListServices request. If you don't specify a value for MaxResults , Cloud Map returns up to 100 services.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "A complex type that contains specifications for the namespaces that you want to list services for.\nIf you specify more than one filter, an operation must match all filters to be returned by ListServices .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_tags_for_resource": {
        "ResourceARN": {
            "Description": "The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.",
            "Type": "string",
            "Required": true
        }
    },
    "register_instance": {
        "ServiceId": {
            "Description": "The ID of the service that you want to use for settings for the instance.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "An identifier that you want to associate with the instance. Note the following:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "CreatorRequestId": {
            "Description": "A unique string that identifies the request and that allows failed RegisterInstance requests to be retried without the risk of executing the operation twice. You must use a unique CreatorRequestId string every time you submit a RegisterInstance request if you're registering additional instances for the same namespace and service. CreatorRequestId can be any unique string (for example, a date/time stamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Attributes": {
            "Description": "A string map that contains the following information for the service that you specify in ServiceId :\nSupported attribute keys include the following:\nIf you want Cloud Map to create an Amazon Route 53 alias record that routes traffic to an Elastic Load Balancing load balancer, specify the DNS name that's associated with the load balancer. For information about how to get the DNS name, see \"DNSName\" in the topic AliasTarget in the Route 53 API Reference .\nNote the following:\nIf the service configuration includes HealthCheckCustomConfig, you can optionally use AWS_INIT_HEALTH_STATUS to specify the initial status of the custom health check, HEALTHY or UNHEALTHY. If you don't specify a value for AWS_INIT_HEALTH_STATUS, the initial status is HEALTHY .\nIf the service configuration includes a CNAME record, the domain name that you want Route 53 to return in response to DNS queries (for example, example.com ).\nThis value is required if the service specified by ServiceId includes settings for an CNAME record.\nIf the service configuration includes an A record, the IPv4 address that you want Route 53 to return in response to DNS queries (for example, 192.0.2.44 ).\nThis value is required if the service specified by ServiceId includes settings for an A record. If the service includes settings for an SRV record, you must specify a value for AWS_INSTANCE_IPV4, AWS_INSTANCE_IPV6, or both.\nIf the service configuration includes an AAAA record, the IPv6 address that you want Route 53 to return in response to DNS queries (for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 ).\nThis value is required if the service specified by ServiceId includes settings for an AAAA record. If the service includes settings for an SRV record, you must specify a value for AWS_INSTANCE_IPV4, AWS_INSTANCE_IPV6, or both.\nIf the service includes an SRV record, the value that you want Route 53 to return for the port.\nIf the service includes HealthCheckConfig, the port on the endpoint that you want Route 53 to send requests to.\nThis value is required if you specified settings for an SRV record or a Route 53 health check when you created the service.\nYou can add up to 30 custom attributes. For each key-value pair, the maximum length of the attribute name is 255 characters, and the maximum length of the attribute value is 1,024 characters. The total size of all provided attributes (sum of all keys and values) must not exceed 5,000 characters.",
            "Type": "dict",
            "Required": true,
            "dict variables": [
                {},
                {},
                {}
            ]
        }
    },
    "tag_resource": {
        "ResourceARN": {
            "Description": "The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to add to the specified resource. Specifying the tag key is required. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "ResourceARN": {
            "Description": "The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "The tag keys to remove from the specified resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_http_namespace": {
        "Id": {
            "Description": "The ID of the namespace that you want to update.",
            "Type": "string",
            "Required": true
        },
        "UpdaterRequestId": {
            "Description": "A unique string that identifies the request and that allows failed UpdateHttpNamespace requests to be retried without the risk of running the operation twice. UpdaterRequestId can be any unique string (for example, a date/timestamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Namespace": {
            "Description": "Updated properties for the the HTTP namespace.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_instance_custom_health_status": {
        "ServiceId": {
            "Description": "The ID of the service that includes the configuration for the custom health check that you want to change the status for.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "The ID of the instance that you want to change the health status for.",
            "Type": "string",
            "Required": true
        },
        "Status": {
            "Description": "The new status of the instance, HEALTHY or UNHEALTHY .",
            "Type": "string",
            "Required": true
        }
    },
    "update_private_dns_namespace": {
        "Id": {
            "Description": "The ID of the namespace that you want to update.",
            "Type": "string",
            "Required": true
        },
        "UpdaterRequestId": {
            "Description": "A unique string that identifies the request and that allows failed UpdatePrivateDnsNamespace requests to be retried without the risk of running the operation twice. UpdaterRequestId can be any unique string (for example, a date/timestamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Namespace": {
            "Description": "Updated properties for the private DNS namespace.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_public_dns_namespace": {
        "Id": {
            "Description": "The ID of the namespace being updated.",
            "Type": "string",
            "Required": true
        },
        "UpdaterRequestId": {
            "Description": "A unique string that identifies the request and that allows failed UpdatePublicDnsNamespace requests to be retried without the risk of running the operation twice. UpdaterRequestId can be any unique string (for example, a date/timestamp).\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Namespace": {
            "Description": "Updated properties for the public DNS namespace.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_service": {
        "Id": {
            "Description": "The ID of the service that you want to update.",
            "Type": "string",
            "Required": true
        },
        "Service": {
            "Description": "A complex type that contains the new settings for the service.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "paginate": {
        "Filters": {
            "Description": "A complex type that contains specifications for the namespaces that you want to list services for.\nIf you specify more than one filter, an operation must match all filters to be returned by ListServices .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}