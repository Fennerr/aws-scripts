{
    "get_application_component_details": {
        "applicationComponentId": {
            "Description": "The ID of the application component. The ID is unique within an AWS account.",
            "Type": "string",
            "Required": true
        }
    },
    "get_application_component_strategies": {
        "applicationComponentId": {
            "Description": "The ID of the application component. The ID is unique within an AWS account.",
            "Type": "string",
            "Required": true
        }
    },
    "get_assessment": {
        "id": {
            "Description": "The assessmentid returned by  StartAssessment .",
            "Type": "string",
            "Required": true
        }
    },
    "get_import_file_task": {
        "id": {
            "Description": "The ID of the import file task. This ID is returned in the response of  StartImportFileTask .",
            "Type": "string",
            "Required": true
        }
    },
    "get_portfolio_preferences": "No parameters defined",
    "get_portfolio_summary": "No parameters defined",
    "get_recommendation_report_details": {
        "id": {
            "Description": "The recommendation report generation task id returned by  StartRecommendationReportGeneration .",
            "Type": "string",
            "Required": true
        }
    },
    "get_server_details": {
        "maxResults": {
            "Description": "The maximum number of items to include in the response. The maximum value is 100.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set maxResults to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10.",
            "Type": "string",
            "Required": false
        },
        "serverId": {
            "Description": "The ID of the server.",
            "Type": "string",
            "Required": true
        }
    },
    "get_server_strategies": {
        "serverId": {
            "Description": "The ID of the server.",
            "Type": "string",
            "Required": true
        }
    },
    "list_application_components": {
        "applicationComponentCriteria": {
            "Description": "Criteria for filtering the list of application components.",
            "Type": "string",
            "Required": false
        },
        "filterValue": {
            "Description": "Specify the value based on the application component criteria type. For example, if applicationComponentCriteria is set to SERVER_ID and filterValue is set to server1 , then  ListApplicationComponents returns all the application components running on server1.",
            "Type": "string",
            "Required": false
        },
        "groupIdFilter": {
            "Description": "The group ID specified in to filter on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "maxResults": {
            "Description": "The maximum number of items to include in the response. The maximum value is 100.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set maxResults to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10.",
            "Type": "string",
            "Required": false
        },
        "sort": {
            "Description": "Specifies whether to sort by ascending (ASC ) or descending (DESC ) order.",
            "Type": "string",
            "Required": false
        }
    },
    "list_collectors": {
        "maxResults": {
            "Description": "The maximum number of items to include in the response. The maximum value is 100.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set maxResults to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10.",
            "Type": "string",
            "Required": false
        }
    },
    "list_import_file_task": {
        "maxResults": {
            "Description": "The total number of items to return. The maximum value is 100.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set maxResults to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10.",
            "Type": "string",
            "Required": false
        }
    },
    "list_servers": {
        "filterValue": {
            "Description": "Specifies the filter value, which is based on the type of server criteria. For example, if serverCriteria is OS_NAME , and the filterValue is equal to WindowsServer , then ListServers returns all of the servers matching the OS name WindowsServer .",
            "Type": "string",
            "Required": false
        },
        "groupIdFilter": {
            "Description": "Specifies the group ID to filter on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "maxResults": {
            "Description": "The maximum number of items to include in the response. The maximum value is 100.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set maxResults to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10.",
            "Type": "string",
            "Required": false
        },
        "serverCriteria": {
            "Description": "Criteria for filtering servers.",
            "Type": "string",
            "Required": false
        },
        "sort": {
            "Description": "Specifies whether to sort by ascending (ASC ) or descending (DESC ) order.",
            "Type": "string",
            "Required": false
        }
    },
    "put_portfolio_preferences": {
        "applicationPreferences": {
            "Description": "The transformation preferences for non-database applications.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "databasePreferences": {
            "Description": "The transformation preferences for database applications.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "prioritizeBusinessGoals": {
            "Description": "The rank of the business goals based on priority.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "start_assessment": {
        "s3bucketForAnalysisData": {
            "Description": "The S3 bucket used by the collectors to send analysis data to the service. The bucket name must begin with migrationhub-strategy- .",
            "Type": "string",
            "Required": false
        },
        "s3bucketForReportData": {
            "Description": "The S3 bucket where all the reports generated by the service are stored. The bucket name must begin with migrationhub-strategy- .",
            "Type": "string",
            "Required": false
        }
    },
    "start_import_file_task": {
        "S3Bucket": {
            "Description": "The S3 bucket where the import file is located. The bucket name is required to begin with migrationhub-strategy- .",
            "Type": "string",
            "Required": true
        },
        "dataSourceType": {
            "Description": "Specifies the source that the servers are coming from. By default, Strategy Recommendations assumes that the servers specified in the import file are available in AWS Application Discovery Service.",
            "Type": "string",
            "Required": false
        },
        "groupId": {
            "Description": "Groups the resources in the import file together with a unique name. This ID can be as filter in ListApplicationComponents and ListServers .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "name": {
            "Description": "A descriptive name for the request.",
            "Type": "string",
            "Required": true
        },
        "s3bucketForReportData": {
            "Description": "The S3 bucket where Strategy Recommendations uploads import results. The bucket name is required to begin with migrationhub-strategy-.",
            "Type": "string",
            "Required": false
        },
        "s3key": {
            "Description": "The Amazon S3 key name of the import file.",
            "Type": "string",
            "Required": true
        }
    },
    "start_recommendation_report_generation": {
        "groupIdFilter": {
            "Description": "Groups the resources in the recommendation report with a unique name.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "outputFormat": {
            "Description": "The output format for the recommendation report file. The default format is Microsoft Excel.",
            "Type": "string",
            "Required": false
        }
    },
    "stop_assessment": {
        "assessmentId": {
            "Description": "The assessmentId returned by  StartAssessment .",
            "Type": "string",
            "Required": true
        }
    },
    "update_application_component_config": {
        "applicationComponentId": {
            "Description": "The ID of the application component. The ID is unique within an AWS account.",
            "Type": "string",
            "Required": true
        },
        "inclusionStatus": {
            "Description": "Indicates whether the application component has been included for server recommendation or not.",
            "Type": "string",
            "Required": false
        },
        "secretsManagerKey": {
            "Description": "Database credentials.",
            "Type": "string",
            "Required": false
        },
        "sourceCodeList": {
            "Description": "The list of source code configurations to update for the application component.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "strategyOption": {
            "Description": "The preferred strategy options for the application component. Use values from the  GetApplicationComponentStrategies response.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_server_config": {
        "serverId": {
            "Description": "The ID of the server.",
            "Type": "string",
            "Required": true
        },
        "strategyOption": {
            "Description": "The preferred strategy options for the application component. See the response from  GetServerStrategies .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "paginate": {
        "filterValue": {
            "Description": "Specifies the filter value, which is based on the type of server criteria. For example, if serverCriteria is OS_NAME , and the filterValue is equal to WindowsServer , then ListServers returns all of the servers matching the OS name WindowsServer .",
            "Type": "string",
            "Required": false
        },
        "groupIdFilter": {
            "Description": "Specifies the group ID to filter on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "serverCriteria": {
            "Description": "Criteria for filtering servers.",
            "Type": "string",
            "Required": false
        },
        "sort": {
            "Description": "Specifies whether to sort by ascending (ASC ) or descending (DESC ) order.",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}