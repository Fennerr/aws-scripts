{
    "associate_browser_settings": {
        "browserSettingsArn": {
            "Description": "The ARN of the browser settings.",
            "Type": "string",
            "Required": true
        },
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_network_settings": {
        "networkSettingsArn": {
            "Description": "The ARN of the network settings.",
            "Type": "string",
            "Required": true
        },
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_trust_store": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        },
        "trustStoreArn": {
            "Description": "The ARN of the trust store.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_user_settings": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        },
        "userSettingsArn": {
            "Description": "The ARN of the user settings.",
            "Type": "string",
            "Required": true
        }
    },
    "create_browser_settings": {
        "additionalEncryptionContext": {
            "Description": "Additional encryption context of the browser settings.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "browserPolicy": {
            "Description": "A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "customerManagedKey": {
            "Description": "The custom managed key of the browser settings.",
            "Type": "string",
            "Required": false
        },
        "tags": {
            "Description": "The tags to add to the browser settings resource. A tag is a key-value pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_identity_provider": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "identityProviderDetails": {
            "Description": "The identity provider details. The following list describes the provider detail keys for each identity provider type.",
            "Type": "dict",
            "Required": true,
            "dict variables": [
                {},
                {}
            ]
        },
        "identityProviderName": {
            "Description": "The identity provider name.",
            "Type": "string",
            "Required": true
        },
        "identityProviderType": {
            "Description": "The identity provider type.",
            "Type": "string",
            "Required": true
        },
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "create_network_settings": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "securityGroupIds": {
            "Description": "One or more security groups used to control access from streaming instances to your VPC.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "subnetIds": {
            "Description": "The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "tags": {
            "Description": "The tags to add to the network settings resource. A tag is a key-value pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "vpcId": {
            "Description": "The VPC that streaming instances will connect to.",
            "Type": "string",
            "Required": true
        }
    },
    "create_portal": {
        "additionalEncryptionContext": {
            "Description": "The additional encryption context of the portal.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "customerManagedKey": {
            "Description": "The customer managed key of the web portal.",
            "Type": "string",
            "Required": false
        },
        "displayName": {
            "Description": "The name of the web portal. This is not visible to users who log into the web portal.",
            "Type": "string",
            "Required": false
        },
        "tags": {
            "Description": "The tags to add to the web portal. A tag is a key-value pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_trust_store": {
        "certificateList": {
            "Description": "A list of CA certificates to be added to the trust store.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "tags": {
            "Description": "The tags to add to the trust store. A tag is a key-value pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_user_settings": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "copyAllowed": {
            "Description": "Specifies whether the user can copy text from the streaming session to the local device.",
            "Type": "string",
            "Required": true
        },
        "disconnectTimeoutInMinutes": {
            "Description": "The amount of time that a streaming session remains active after users disconnect.",
            "Type": "integer",
            "Required": false
        },
        "downloadAllowed": {
            "Description": "Specifies whether the user can download files from the streaming session to the local device.",
            "Type": "string",
            "Required": true
        },
        "idleDisconnectTimeoutInMinutes": {
            "Description": "The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.",
            "Type": "integer",
            "Required": false
        },
        "pasteAllowed": {
            "Description": "Specifies whether the user can paste text from the local device to the streaming session.",
            "Type": "string",
            "Required": true
        },
        "printAllowed": {
            "Description": "Specifies whether the user can print to the local device.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "The tags to add to the user settings resource. A tag is a key-value pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "uploadAllowed": {
            "Description": "Specifies whether the user can upload files from the local device to the streaming session.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_browser_settings": {
        "browserSettingsArn": {
            "Description": "The ARN of the browser settings.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_identity_provider": {
        "identityProviderArn": {
            "Description": "The ARN of the identity provider.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_settings": {
        "networkSettingsArn": {
            "Description": "The ARN of the network settings.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_portal": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_trust_store": {
        "trustStoreArn": {
            "Description": "The ARN of the trust store.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_user_settings": {
        "userSettingsArn": {
            "Description": "The ARN of the user settings.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_browser_settings": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_network_settings": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_trust_store": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_user_settings": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "get_browser_settings": {
        "browserSettingsArn": {
            "Description": "The ARN of the browser settings.",
            "Type": "string",
            "Required": true
        }
    },
    "get_identity_provider": {
        "identityProviderArn": {
            "Description": "The ARN of the identity provider.",
            "Type": "string",
            "Required": true
        }
    },
    "get_network_settings": {
        "networkSettingsArn": {
            "Description": "The ARN of the network settings.",
            "Type": "string",
            "Required": true
        }
    },
    "get_portal": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "get_portal_service_provider_metadata": {
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "get_trust_store": {
        "trustStoreArn": {
            "Description": "The ARN of the trust store.",
            "Type": "string",
            "Required": true
        }
    },
    "get_trust_store_certificate": {
        "thumbprint": {
            "Description": "The thumbprint of the trust store certificate.",
            "Type": "string",
            "Required": true
        },
        "trustStoreArn": {
            "Description": "The ARN of the trust store certificate.",
            "Type": "string",
            "Required": true
        }
    },
    "get_user_settings": {
        "userSettingsArn": {
            "Description": "The ARN of the user settings.",
            "Type": "string",
            "Required": true
        }
    },
    "list_browser_settings": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        }
    },
    "list_identity_providers": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        },
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "list_network_settings": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        }
    },
    "list_portals": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        }
    },
    "list_trust_store_certificates": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        },
        "trustStoreArn": {
            "Description": "The ARN of the trust store",
            "Type": "string",
            "Required": true
        }
    },
    "list_trust_stores": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        }
    },
    "list_user_settings": {
        "maxResults": {
            "Description": "The maximum number of results to be included in the next page.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        }
    },
    "tag_resource": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "The tags of the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource.",
            "Type": "string",
            "Required": true
        },
        "tagKeys": {
            "Description": "The list of tag keys to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_browser_settings": {
        "browserPolicy": {
            "Description": "A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.",
            "Type": "string",
            "Required": false
        },
        "browserSettingsArn": {
            "Description": "The ARN of the browser settings.",
            "Type": "string",
            "Required": true
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "update_identity_provider": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "identityProviderArn": {
            "Description": "The ARN of the identity provider.",
            "Type": "string",
            "Required": true
        },
        "identityProviderDetails": {
            "Description": "The details of the identity provider. The following list describes the provider detail keys for each identity provider type.",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        },
        "identityProviderName": {
            "Description": "The name of the identity provider.",
            "Type": "string",
            "Required": false
        },
        "identityProviderType": {
            "Description": "The type of the identity provider.",
            "Type": "string",
            "Required": false
        }
    },
    "update_network_settings": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "networkSettingsArn": {
            "Description": "The ARN of the network settings.",
            "Type": "string",
            "Required": true
        },
        "securityGroupIds": {
            "Description": "One or more security groups used to control access from streaming instances to your VPC.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "subnetIds": {
            "Description": "The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "vpcId": {
            "Description": "The VPC that streaming instances will connect to.",
            "Type": "string",
            "Required": false
        }
    },
    "update_portal": {
        "displayName": {
            "Description": "The name of the web portal. This is not visible to users who log into the web portal.",
            "Type": "string",
            "Required": false
        },
        "portalArn": {
            "Description": "The ARN of the web portal.",
            "Type": "string",
            "Required": true
        }
    },
    "update_trust_store": {
        "certificatesToAdd": {
            "Description": "A list of CA certificates to add to the trust store.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "certificatesToDelete": {
            "Description": "A list of CA certificates to delete from a trust store.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "trustStoreArn": {
            "Description": "The ARN of the trust store.",
            "Type": "string",
            "Required": true
        }
    },
    "update_user_settings": {
        "clientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.\nIf you do not specify a client token, one is automatically generated by the AWS SDK.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "copyAllowed": {
            "Description": "Specifies whether the user can copy text from the streaming session to the local device.",
            "Type": "string",
            "Required": false
        },
        "disconnectTimeoutInMinutes": {
            "Description": "The amount of time that a streaming session remains active after users disconnect.",
            "Type": "integer",
            "Required": false
        },
        "downloadAllowed": {
            "Description": "Specifies whether the user can download files from the streaming session to the local device.",
            "Type": "string",
            "Required": false
        },
        "idleDisconnectTimeoutInMinutes": {
            "Description": "The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.",
            "Type": "integer",
            "Required": false
        },
        "pasteAllowed": {
            "Description": "Specifies whether the user can paste text from the local device to the streaming session.",
            "Type": "string",
            "Required": false
        },
        "printAllowed": {
            "Description": "Specifies whether the user can print to the local device.",
            "Type": "string",
            "Required": false
        },
        "uploadAllowed": {
            "Description": "Specifies whether the user can upload files from the local device to the streaming session.",
            "Type": "string",
            "Required": false
        },
        "userSettingsArn": {
            "Description": "The ARN of the user settings.",
            "Type": "string",
            "Required": true
        }
    }
}