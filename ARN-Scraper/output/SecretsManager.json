{
    "cancel_rotate_secret": {
        "SecretId": {
            "Description": "The ARN or name of the secret.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        }
    },
    "create_secret": {
        "Name": {
            "Description": "The name of the new secret.\nThe secret name can contain ASCII letters, numbers, and the following characters: /_+=.@-\nDo not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters after the secret name at the end of the ARN.",
            "Type": "string",
            "Required": true
        },
        "ClientRequestToken": {
            "Description": "If you include SecretString or SecretBinary, then Secrets Manager creates an initial version for the secret, and this parameter specifies the unique identifier for the new version.\nThis value helps ensure idempotency. Secrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during a rotation. We recommend that you generate a UUID-type value to ensure uniqueness of your versions within the specified secret.\nThis value becomes the VersionId of the new version.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Description": {
            "Description": "The description of the secret.",
            "Type": "string",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt the secret value in the secret. An alias is always prefixed by alias/, for example alias/aws/secretsmanager. For more information, see About aliases .\nTo use a KMS key in a different account, use the key ARN or the alias ARN.\nIf you don't specify this value, then Secrets Manager uses the key aws/secretsmanager. If that key doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.\nIf the secret is in a different Amazon Web Services account from the credentials calling the API, then you can't use aws/secretsmanager to encrypt the secret, and you must create and use a customer managed KMS key.",
            "Type": "string",
            "Required": false
        },
        "SecretBinary": {
            "Description": "The binary data to encrypt and store in the new version of the secret. We recommend that you store your binary data in a file and then pass the contents of the file as a parameter.\nEither SecretString or SecretBinary must have a value, but not both.\nThis parameter is not available in the Secrets Manager console.",
            "Type": "bytes",
            "Required": false
        },
        "SecretString": {
            "Description": "The text data to encrypt and store in this new version of the secret. We recommend you use a JSON structure of key/value pairs for your secret value.\nEither SecretString or SecretBinary must have a value, but not both.\nIf you create a secret by using the Secrets Manager console then Secrets Manager puts the protected secret text in only the SecretString parameter. The Secrets Manager console stores the information as a JSON structure of key/value pairs that a Lambda rotation function can parse.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string, for example:\nSecrets Manager tag key names are case sensitive. A tag with the key \"ABC\" is a different tag from one with key \"abc\".\nIf you check tags in permissions policies as part of your security strategy, then adding or removing a tag can change permissions. If the completion of this operation would result in you losing your permissions for this secret, then Secrets Manager blocks the operation and returns an Access Denied error. For more information, see Control access to secrets using tags and Limit access to identities with tags that match secrets' tags .\nFor information about how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters. If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text.\nThe following restrictions apply to tags:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "AddReplicaRegions": {
            "Description": "A list of Regions and KMS keys to replicate secrets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ForceOverwriteReplicaSecret": {
            "Description": "Specifies whether to overwrite a secret with the same name in the destination Region.",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_resource_policy": {
        "SecretId": {
            "Description": "The ARN or name of the secret to delete the attached resource-based policy for.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        }
    },
    "delete_secret": {
        "SecretId": {
            "Description": "The ARN or name of the secret to delete.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "RecoveryWindowInDays": {
            "Description": "The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can't use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don't use either, then Secrets Manager defaults to a 30 day recovery window.",
            "Type": "integer",
            "Required": false
        },
        "ForceDeleteWithoutRecovery": {
            "Description": "Specifies whether to delete the secret without any recovery window. You can't use both this parameter and RecoveryWindowInDays in the same call. If you don't use either, then Secrets Manager defaults to a 30 day recovery window.\nSecrets Manager performs the actual deletion with an asynchronous background process, so there might be a short delay before the secret is permanently deleted. If you delete a secret and then immediately create a secret with the same name, use appropriate back off and retry logic.",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_secret": {
        "SecretId": {
            "Description": "The ARN or name of the secret.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        }
    },
    "get_random_password": {
        "PasswordLength": {
            "Description": "The length of the password. If you don't include this parameter, the default length is 32 characters.",
            "Type": "integer",
            "Required": false
        },
        "ExcludeCharacters": {
            "Description": "A string of the characters that you don't want in the password.",
            "Type": "string",
            "Required": false
        },
        "ExcludeNumbers": {
            "Description": "Specifies whether to exclude numbers from the password. If you don't include this switch, the password can contain numbers.",
            "Type": "boolean",
            "Required": false
        },
        "ExcludePunctuation": {
            "Description": "Specifies whether to exclude the following punctuation characters from the password: ! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~ . If you don't include this switch, the password can contain punctuation.",
            "Type": "boolean",
            "Required": false
        },
        "ExcludeUppercase": {
            "Description": "Specifies whether to exclude uppercase letters from the password. If you don't include this switch, the password can contain uppercase letters.",
            "Type": "boolean",
            "Required": false
        },
        "ExcludeLowercase": {
            "Description": "Specifies whether to exclude lowercase letters from the password. If you don't include this switch, the password can contain lowercase letters.",
            "Type": "boolean",
            "Required": false
        },
        "IncludeSpace": {
            "Description": "Specifies whether to include the space character. If you include this switch, the password can contain space characters.",
            "Type": "boolean",
            "Required": false
        },
        "RequireEachIncludedType": {
            "Description": "Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation. If you don't include this switch, the password contains at least one of every character type.",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_resource_policy": {
        "SecretId": {
            "Description": "The ARN or name of the secret to retrieve the attached resource-based policy for.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        }
    },
    "get_secret_value": {
        "SecretId": {
            "Description": "The ARN or name of the secret to retrieve.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The unique identifier of the version of the secret to retrieve. If you include both this parameter and VersionStage, the two parameters must refer to the same secret version. If you don't specify either a VersionStage or VersionId, then Secrets Manager returns the AWSCURRENT version.\nThis value is typically a UUID-type value with 32 hexadecimal digits.",
            "Type": "string",
            "Required": false
        },
        "VersionStage": {
            "Description": "The staging label of the version of the secret to retrieve.\nSecrets Manager uses staging labels to keep track of different versions during the rotation process. If you include both this parameter and VersionId, the two parameters must refer to the same secret version. If you don't specify either a VersionStage or VersionId, Secrets Manager returns the AWSCURRENT version.",
            "Type": "string",
            "Required": false
        }
    },
    "list_secret_version_ids": {
        "SecretId": {
            "Description": "The ARN or name of the secret whose versions you want to list.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The number of results to include in the response.\nIf there are more results available, in the response, Secrets Manager includes NextToken. To get the next results, call ListSecretVersionIds again with the value from NextToken .",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token that indicates where the output should continue from, if a previous call did not show all results. To get the next results, call ListSecretVersionIds again with this value.",
            "Type": "string",
            "Required": false
        },
        "IncludeDeprecated": {
            "Description": "Specifies whether to include versions of secrets that don't have any staging labels attached to them. Versions without staging labels are considered deprecated and are subject to deletion by Secrets Manager.",
            "Type": "boolean",
            "Required": false
        }
    },
    "list_secrets": {
        "MaxResults": {
            "Description": "The number of results to include in the response.\nIf there are more results available, in the response, Secrets Manager includes NextToken. To get the next results, call ListSecrets again with the value from NextToken .",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token that indicates where the output should continue from, if a previous call did not show all results. To get the next results, call ListSecrets again with this value.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "The filters to apply to the list of secrets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SortOrder": {
            "Description": "Lists secrets in the requested order.",
            "Type": "string",
            "Required": false
        }
    },
    "put_resource_policy": {
        "SecretId": {
            "Description": "The ARN or name of the secret to attach the resource-based policy.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "ResourcePolicy": {
            "Description": "A JSON-formatted string for an Amazon Web Services resource-based policy. For example policies, see Permissions policy examples .",
            "Type": "string",
            "Required": true
        },
        "BlockPublicPolicy": {
            "Description": "Specifies whether to block resource-based policies that allow broad access to the secret, for example those that use a wildcard for the principal.",
            "Type": "boolean",
            "Required": false
        }
    },
    "put_secret_value": {
        "SecretId": {
            "Description": "The ARN or name of the secret to add a new version to.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .\nIf the secret doesn't already exist, use CreateSecret instead.",
            "Type": "string",
            "Required": true
        },
        "ClientRequestToken": {
            "Description": "A unique identifier for the new version of the secret.\nThis value helps ensure idempotency. Secrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during the Lambda rotation function processing. We recommend that you generate a UUID-type value to ensure uniqueness within the specified secret.\nThis value becomes the VersionId of the new version.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "SecretBinary": {
            "Description": "The binary data to encrypt and store in the new version of the secret. To use this parameter in the command-line tools, we recommend that you store your binary data in a file and then pass the contents of the file as a parameter.\nYou must include SecretBinary or SecretString, but not both.\nYou can't access this value from the Secrets Manager console.",
            "Type": "bytes",
            "Required": false
        },
        "SecretString": {
            "Description": "The text to encrypt and store in the new version of the secret.\nYou must include SecretBinary or SecretString, but not both.\nWe recommend you create the secret string as JSON key/value pairs, as shown in the example.",
            "Type": "string",
            "Required": false
        },
        "VersionStages": {
            "Description": "A list of staging labels to attach to this version of the secret. Secrets Manager uses staging labels to track versions of a secret through the rotation process.\nIf you specify a staging label that's already associated with a different version of the same secret, then Secrets Manager removes the label from the other version and attaches it to this version. If you specify AWSCURRENT, and it is already attached to another version, then Secrets Manager also moves the staging label AWSPREVIOUS to the version that AWSCURRENT was removed from.\nIf you don't include VersionStages, then Secrets Manager automatically moves the staging label AWSCURRENT to this version.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "remove_regions_from_replication": {
        "SecretId": {
            "Description": "The ARN or name of the secret.",
            "Type": "string",
            "Required": true
        },
        "RemoveReplicaRegions": {
            "Description": "The Regions of the replicas to remove.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "replicate_secret_to_regions": {
        "SecretId": {
            "Description": "The ARN or name of the secret to replicate.",
            "Type": "string",
            "Required": true
        },
        "AddReplicaRegions": {
            "Description": "A list of Regions in which to replicate the secret.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ForceOverwriteReplicaSecret": {
            "Description": "Specifies whether to overwrite a secret with the same name in the destination Region.",
            "Type": "boolean",
            "Required": false
        }
    },
    "restore_secret": {
        "SecretId": {
            "Description": "The ARN or name of the secret to restore.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        }
    },
    "rotate_secret": {
        "SecretId": {
            "Description": "The ARN or name of the secret to rotate.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "ClientRequestToken": {
            "Description": "A unique identifier for the new version of the secret that helps ensure idempotency. Secrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during rotation. This value becomes the VersionId of the new version.\nIf you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call this operation, then you can leave this parameter empty. The CLI or SDK generates a random UUID for you and includes that in the request for this parameter. If you don't use the SDK and instead generate a raw HTTP request to the Secrets Manager service endpoint, then you must generate a ClientRequestToken yourself for new versions and include that value in the request.\nYou only need to specify this value if you implement your own retry logic and you want to ensure that Secrets Manager doesn't attempt to create a secret version twice. We recommend that you generate a UUID-type value to ensure uniqueness within the specified secret.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "RotationLambdaARN": {
            "Description": "The ARN of the Lambda rotation function that can rotate the secret.",
            "Type": "string",
            "Required": false
        },
        "RotationRules": {
            "Description": "A structure that defines the rotation configuration for this secret.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RotateImmediately": {
            "Description": "Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window. The rotation schedule is defined in  RotateSecretRequest$RotationRules .\nIf you don't immediately rotate the secret, Secrets Manager tests the rotation configuration by running the ` testSecret step &lt;https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html&gt;`__ of the Lambda rotation function. The test creates an AWSPENDING version of the secret and then removes it.\nIf you don't specify this value, then by default, Secrets Manager rotates the secret immediately.",
            "Type": "boolean",
            "Required": false
        }
    },
    "stop_replication_to_replica": {
        "SecretId": {
            "Description": "The ARN of the primary secret.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "SecretId": {
            "Description": "The identifier for the secret to attach tags to. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to attach to the secret as a JSON text string argument. Each element in the list consists of a Key and a Value .\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "SecretId": {
            "Description": "The ARN or name of the secret.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of tag key names to remove from the secret. You don't specify the value. Both the key and its associated value are removed.\nThis parameter requires a JSON text string argument.\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_secret": {
        "SecretId": {
            "Description": "The ARN or name of the secret.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "ClientRequestToken": {
            "Description": "If you include SecretString or SecretBinary, then Secrets Manager creates a new version for the secret, and this parameter specifies the unique identifier for the new version.\nThis value becomes the VersionId of the new version.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the secret.",
            "Type": "string",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt new secret versions as well as any existing versions with the staging labels AWSCURRENT, AWSPENDING, or AWSPREVIOUS. For more information about versions and staging labels, see Concepts: Version .\nA key alias is always prefixed by alias/, for example alias/aws/secretsmanager. For more information, see About aliases .\nIf you set this to an empty string, Secrets Manager uses the Amazon Web Services managed key aws/secretsmanager. If this key doesn't already exist in your account, then Secrets Manager creates it for you automatically. All users and roles in the Amazon Web Services account automatically have access to use aws/secretsmanager. Creating aws/secretsmanager can result in a one-time significant delay in returning the result.",
            "Type": "string",
            "Required": false
        },
        "SecretBinary": {
            "Description": "The binary data to encrypt and store in the new version of the secret. We recommend that you store your binary data in a file and then pass the contents of the file as a parameter.\nEither SecretBinary or SecretString must have a value, but not both.\nYou can't access this parameter in the Secrets Manager console.",
            "Type": "bytes",
            "Required": false
        },
        "SecretString": {
            "Description": "The text data to encrypt and store in the new version of the secret. We recommend you use a JSON structure of key/value pairs for your secret value.\nEither SecretBinary or SecretString must have a value, but not both.",
            "Type": "string",
            "Required": false
        }
    },
    "update_secret_version_stage": {
        "SecretId": {
            "Description": "The ARN or the name of the secret with the version and staging labelsto modify.\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN. See Finding a secret from a partial ARN .",
            "Type": "string",
            "Required": true
        },
        "VersionStage": {
            "Description": "The staging label to add to this version.",
            "Type": "string",
            "Required": true
        },
        "RemoveFromVersionId": {
            "Description": "The ID of the version that the staging label is to be removed from. If the staging label you are trying to attach to one version is already attached to a different version, then you must include this parameter and specify the version that the label is to be removed from. If the label is attached and you either do not specify this parameter, or the version ID does not match, then the operation fails.",
            "Type": "string",
            "Required": false
        },
        "MoveToVersionId": {
            "Description": "The ID of the version to add the staging label to. To remove a label from a version, then do not specify this parameter.\nIf the staging label is already attached to a different version of the secret, then you must also specify the RemoveFromVersionId parameter.",
            "Type": "string",
            "Required": false
        }
    },
    "validate_resource_policy": {
        "SecretId": {
            "Description": "This field is reserved for internal use.",
            "Type": "string",
            "Required": false
        },
        "ResourcePolicy": {
            "Description": "A JSON-formatted string that contains an Amazon Web Services resource-based policy. The policy in the string identifies who can access or manage this secret and its versions. For example policies, see Permissions policy examples .",
            "Type": "string",
            "Required": true
        }
    },
    "paginate": {
        "Filters": {
            "Description": "The filters to apply to the list of secrets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SortOrder": {
            "Description": "Lists secrets in the requested order.",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}