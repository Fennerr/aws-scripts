{
    "abort_multipart_upload": {
        "Bucket": {
            "Description": "The bucket name to which the upload was taking place.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Key of the object for which the multipart upload was initiated.",
            "Type": "string",
            "Required": true
        },
        "UploadId": {
            "Description": "Upload ID that identifies the multipart upload.",
            "Type": "string",
            "Required": true
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "complete_multipart_upload": {
        "Bucket": {
            "Description": "Name of the bucket to which the multipart upload was initiated.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Object key for which the multipart upload was initiated.",
            "Type": "string",
            "Required": true
        },
        "MultipartUpload": {
            "Description": "The container for the multipart upload request information.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "UploadId": {
            "Description": "ID for the initiated multipart upload.",
            "Type": "string",
            "Required": true
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "copy": {
        "null": {
            "Description": "The name of the source bucket, key name of the\nsource object, and optional version ID of the source object. The\ndictionary format is:\n{'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}. Note\nthat the VersionId key is optional and may be omitted.\nExtraArgs (dict)Extra arguments that may be passed to the\nclient operation. For allowed download arguments see\nboto3.s3.transfer.S3Transfer.ALLOWED_DOWNLOAD_ARGS.\nCallback (function)A method which takes a number of bytes transferred to\nbe periodically called during the copy.\nSourceClient (botocore or boto3 Client)The client to be used for operation that\nmay happen at the source object. For example, this client is\nused for the head_object that determines the size of the copy.\nIf no client is provided, the current client is used as the client\nfor the source object.\nConfig (boto3.s3.transfer.TransferConfig)The transfer configuration to be used when performing the\ncopy.\n\n",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "copy_object": {
        "ACL": {
            "Description": "The canned ACL to apply to the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Bucket": {
            "Description": "The name of the destination bucket.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "CacheControl": {
            "Description": "Specifies caching behavior along the request/reply chain.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object.",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the object data.",
            "Type": "string",
            "Required": false
        },
        "CopySource": {
            "Description": "[REQUIRED] The name of the source bucket, key name of the source object, and optional version ID of the source object.  You can either provide this value as a string or a dictionary.  The string form is {bucket}/{key} or {bucket}/{key}?versionId={versionId} if you want to copy a specific version.  You can also provide this value as a dictionary.  The dictionary format is recommended over the string format because it is more explicit.  The dictionary format is: {'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}.  Note that the VersionId key is optional and may be omitted. To specify an S3 access point, provide the access point ARN for the Bucket key in the copy source dictionary. If you want to provide the copy source for an S3 access point as a string instead of a dictionary, the ARN provided must be the full S3 access point object ARN (i.e. {accesspoint_arn}/object/{key})",
            "Type": "str or dict",
            "Required": true
        },
        "CopySourceIfMatch": {
            "Description": "Copies the object if its entity tag (ETag) matches the specified tag.",
            "Type": "string",
            "Required": false
        },
        "CopySourceIfModifiedSince": {
            "Description": "Copies the object if it has been modified since the specified time.",
            "Type": "datetime",
            "Required": false
        },
        "CopySourceIfNoneMatch": {
            "Description": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
            "Type": "string",
            "Required": false
        },
        "CopySourceIfUnmodifiedSince": {
            "Description": "Copies the object if it hasn't been modified since the specified time.",
            "Type": "datetime",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable.",
            "Type": "datetime",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to read the object data and its metadata.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the object ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "The key of the destination object.",
            "Type": "string",
            "Required": true
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MetadataDirective": {
            "Description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
            "Type": "string",
            "Required": false
        },
        "TaggingDirective": {
            "Description": "Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.",
            "Type": "string",
            "Required": false
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see Storage Classes in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "WebsiteRedirectLocation": {
            "Description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "Specifies the Amazon Web Services KMS key ID to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see Specifying the Signature Version in Request Authentication in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSEKMSEncryptionContext": {
            "Description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.\nSpecifying this header with a COPY action doesn\u2019t affect bucket-level settings for S3 Bucket Key.",
            "Type": "boolean",
            "Required": false
        },
        "CopySourceSSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use when decrypting the source object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective . The tag-set must be encoded as URL Query parameters.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockMode": {
            "Description": "The Object Lock mode that you want to apply to the copied object.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "The date and time when you want the copied object's Object Lock to expire.",
            "Type": "datetime",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Specifies whether you want to apply a legal hold to the copied object.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ExpectedSourceBucketOwner": {
            "Description": "The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "create_bucket": {
        "ACL": {
            "Description": "The canned ACL to apply to the bucket.",
            "Type": "string",
            "Required": false
        },
        "Bucket": {
            "Description": "The name of the bucket to create.",
            "Type": "string",
            "Required": true
        },
        "CreateBucketConfiguration": {
            "Description": "The configuration information for the bucket.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "GrantFullControl": {
            "Description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to list the objects in the bucket.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the bucket ACL.",
            "Type": "string",
            "Required": false
        },
        "GrantWrite": {
            "Description": "Allows grantee to create new objects in the bucket.\nFor the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable bucket.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockEnabledForBucket": {
            "Description": "Specifies whether you want S3 Object Lock to be enabled for the new bucket.",
            "Type": "boolean",
            "Required": false
        },
        "ObjectOwnership": {
            "Description": "The container element for object ownership for a bucket's ownership controls.\nBucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL.\nObjectWriter - The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL.\nBucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer affect permissions. The bucket owner automatically owns and has full control over every object in the bucket. The bucket only accepts PUT requests that don't specify an ACL or bucket owner full control ACLs, such as the bucket-owner-full-control canned ACL or an equivalent form of this ACL expressed in the XML format.",
            "Type": "string",
            "Required": false
        }
    },
    "create_multipart_upload": {
        "ACL": {
            "Description": "The canned ACL to apply to the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Bucket": {
            "Description": "The name of the bucket to which to initiate the upload\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "CacheControl": {
            "Description": "Specifies caching behavior along the request/reply chain.",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object.",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the object data.",
            "Type": "string",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable.",
            "Type": "datetime",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to read the object data and its metadata.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the object ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "Object key for which the multipart upload is to be initiated.",
            "Type": "string",
            "Required": true
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see Storage Classes in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "WebsiteRedirectLocation": {
            "Description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "Specifies the ID of the symmetric customer managed key to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see Specifying the Signature Version in Request Authentication in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSEKMSEncryptionContext": {
            "Description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.\nSpecifying this header with an object action doesn\u2019t affect bucket-level settings for S3 Bucket Key.",
            "Type": "boolean",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockMode": {
            "Description": "Specifies the Object Lock mode that you want to apply to the uploaded object.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "Specifies the date and time when you want the Object Lock to expire.",
            "Type": "datetime",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Specifies whether you want to apply a legal hold to the uploaded object.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket": {
        "Bucket": {
            "Description": "Specifies the bucket being deleted.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_analytics_configuration": {
        "Bucket": {
            "Description": "The name of the bucket from which an analytics configuration is deleted.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID that identifies the analytics configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_cors": {
        "Bucket": {
            "Description": "Specifies the bucket whose cors configuration is being deleted.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_encryption": {
        "Bucket": {
            "Description": "The name of the bucket containing the server-side encryption configuration to delete.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_intelligent_tiering_configuration": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the S3 Intelligent-Tiering configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_bucket_inventory_configuration": {
        "Bucket": {
            "Description": "The name of the bucket containing the inventory configuration to delete.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the inventory configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_lifecycle": {
        "Bucket": {
            "Description": "The bucket name of the lifecycle to delete.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_metrics_configuration": {
        "Bucket": {
            "Description": "The name of the bucket containing the metrics configuration to delete.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the metrics configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_ownership_controls": {
        "Bucket": {
            "Description": "The Amazon S3 bucket whose OwnershipControls you want to delete.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_policy": {
        "Bucket": {
            "Description": "The bucket name.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_replication": {
        "Bucket": {
            "Description": "The bucket name.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_tagging": {
        "Bucket": {
            "Description": "The bucket that has the tag set to be removed.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_bucket_website": {
        "Bucket": {
            "Description": "The bucket name for which you want to remove the website configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_object": {
        "Bucket": {
            "Description": "The bucket name of the bucket containing the object.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Key name of the object to delete.",
            "Type": "string",
            "Required": true
        },
        "MFA": {
            "Description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "BypassGovernanceRetention": {
            "Description": "Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation. To use this header, you must have the s3:BypassGovernanceRetention permission.",
            "Type": "boolean",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_object_tagging": {
        "Bucket": {
            "Description": "The bucket name containing the objects from which to remove the tags.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The key that identifies the object in the bucket from which to remove all tags.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The versionId of the object that the tag-set will be removed from.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "delete_objects": {
        "Delete": {
            "Description": "Container for the request.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "MFA": {
            "Description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "BypassGovernanceRetention": {
            "Description": "Specifies whether you want to delete this object even if it has a Governance-type Object Lock in place. To use this header, you must have the s3:BypassGovernanceRetention permission.",
            "Type": "boolean",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.\nThis checksum algorithm must be the same for all parts and it match the checksum value supplied in the CreateMultipartUpload request.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_public_access_block": {
        "Bucket": {
            "Description": "The Amazon S3 bucket whose PublicAccessBlock configuration you want to delete.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "download_file": {
        "null": {
            "Description": "The path to the file to download to.\nExtraArgs (dict)Extra arguments that may be passed to the\nclient operation. For allowed download arguments see\nboto3.s3.transfer.S3Transfer.ALLOWED_DOWNLOAD_ARGS.\nCallback (function)A method which takes a number of bytes transferred to\nbe periodically called during the download.\nConfig (boto3.s3.transfer.TransferConfig)The transfer configuration to be used when performing the\ntransfer.\n\n",
            "Type": "str",
            "Required": false,
            "str variables": {}
        }
    },
    "download_fileobj": {
        "null": {
            "Description": "A file-like object to download into. At a minimum, it must\nimplement the write method and must accept bytes.\nExtraArgs (dict)Extra arguments that may be passed to the\nclient operation. For allowed download arguments see\nboto3.s3.transfer.S3Transfer.ALLOWED_DOWNLOAD_ARGS.\nCallback (function)A method which takes a number of bytes transferred to\nbe periodically called during the download.\nConfig (boto3.s3.transfer.TransferConfig)The transfer configuration to be used when performing the\ndownload.\n\n",
            "Type": "a file-like object",
            "Required": false,
            "a file-like object variables": {}
        }
    },
    "generate_presigned_post": {
        "Bucket": {
            "Description": "The name of the bucket to presign the post to. Note that\nbucket related conditions should not be included in the\nconditions parameter.",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "Key name, optionally add ${filename} to the end to\nattach the submitted filename. Note that key related conditions and\nfields are filled out for you and should not be included in the\nFields or Conditions parameter.",
            "Type": "string",
            "Required": false
        },
        "Fields": {
            "Description": "A dictionary of prefilled form fields to build on top\nof. Elements that may be included are acl, Cache-Control,\nContent-Type, Content-Disposition, Content-Encoding, Expires,\nsuccess_action_redirect, redirect, success_action_status,\nand x-amz-meta-.\nNote that if a particular element is included in the fields\ndictionary it will not be automatically added to the conditions\nlist. You must specify a condition for the element as well.",
            "Type": "dict",
            "Required": false
        },
        "Conditions": {
            "Description": "A list of conditions to include in the policy. Each\nelement can be either a list or a structure. For example:\n]\nConditions that are included may pertain to acl,\ncontent-length-range, Cache-Control, Content-Type,\nContent-Disposition, Content-Encoding, Expires,\nsuccess_action_redirect, redirect, success_action_status,\nand/or x-amz-meta-.\nNote that if you include a condition, you must specify\nthe a valid value in the fields dictionary as well. A value will\nnot be added automatically to the fields dictionary based on the\nconditions.",
            "Type": "list",
            "Required": false
        },
        "ExpiresIn": {
            "Description": "The number of seconds the presigned post\nis valid for.",
            "Type": "int",
            "Required": false
        }
    },
    "generate_presigned_url": {
        "ClientMethod": {
            "Description": "The client method to presign for",
            "Type": "string",
            "Required": false
        },
        "Params": {
            "Description": "The parameters normally passed to\nClientMethod.",
            "Type": "dict",
            "Required": false
        },
        "ExpiresIn": {
            "Description": "The number of seconds the presigned url is valid\nfor. By default it expires in an hour (3600 seconds)",
            "Type": "int",
            "Required": false
        },
        "HttpMethod": {
            "Description": "The http method to use on the generated url. By\ndefault, the http method is whatever is used in the method's model.",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_accelerate_configuration": {
        "Bucket": {
            "Description": "The name of the bucket for which the accelerate configuration is retrieved.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_acl": {
        "Bucket": {
            "Description": "Specifies the S3 bucket whose ACL is being requested.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_analytics_configuration": {
        "Bucket": {
            "Description": "The name of the bucket from which an analytics configuration is retrieved.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID that identifies the analytics configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_cors": {
        "Bucket": {
            "Description": "The bucket name for which to get the cors configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_encryption": {
        "Bucket": {
            "Description": "The name of the bucket from which the server-side encryption configuration is retrieved.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_intelligent_tiering_configuration": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the S3 Intelligent-Tiering configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "get_bucket_inventory_configuration": {
        "Bucket": {
            "Description": "The name of the bucket containing the inventory configuration to retrieve.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the inventory configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_lifecycle": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the lifecycle information.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_lifecycle_configuration": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the lifecycle information.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_location": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the location.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_logging": {
        "Bucket": {
            "Description": "The bucket name for which to get the logging information.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_metrics_configuration": {
        "Bucket": {
            "Description": "The name of the bucket containing the metrics configuration to retrieve.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the metrics configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_notification": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the notification configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_notification_configuration": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the notification configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_ownership_controls": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose OwnershipControls you want to retrieve.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_policy": {
        "Bucket": {
            "Description": "The bucket name for which to get the bucket policy.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_policy_status": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose policy status you want to retrieve.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_replication": {
        "Bucket": {
            "Description": "The bucket name for which to get the replication information.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_request_payment": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the payment request configuration",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_tagging": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the tagging information.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_versioning": {
        "Bucket": {
            "Description": "The name of the bucket for which to get the versioning information.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_bucket_website": {
        "Bucket": {
            "Description": "The bucket name for which to get the website configuration.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_object": {
        "Bucket": {
            "Description": "The bucket name containing the object.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using an Object Lambda access point the hostname takes the form AccessPointName -AccountId .s3-object-lambda.*Region* .amazonaws.com.\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Key": {
            "Description": "Key of the object to get.",
            "Type": "string",
            "Required": true
        },
        "Range": {
            "Description": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35 .",
            "Type": "string",
            "Required": false
        },
        "ResponseCacheControl": {
            "Description": "Sets the Cache-Control header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseContentDisposition": {
            "Description": "Sets the Content-Disposition header of the response",
            "Type": "string",
            "Required": false
        },
        "ResponseContentEncoding": {
            "Description": "Sets the Content-Encoding header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseContentLanguage": {
            "Description": "Sets the Content-Language header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseContentType": {
            "Description": "Sets the Content-Type header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseExpires": {
            "Description": "Sets the Expires header of the response.",
            "Type": "datetime",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when decrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this mode must be enabled.",
            "Type": "string",
            "Required": false
        }
    },
    "get_object_acl": {
        "Bucket": {
            "Description": "The bucket name that contains the object for which to get the ACL information.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The key of the object for which to get the ACL information.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_object_attributes": {
        "Bucket": {
            "Description": "The name of the bucket that contains the object.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The object key.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The version ID used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "MaxParts": {
            "Description": "Sets the maximum number of parts to return.",
            "Type": "integer",
            "Required": false
        },
        "PartNumberMarker": {
            "Description": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
            "Type": "integer",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ObjectAttributes": {
            "Description": "An XML header that specifies the fields at the root level that you want returned in the response. Fields that you do not specify are not returned.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "get_object_legal_hold": {
        "Bucket": {
            "Description": "The bucket name containing the object whose legal hold status you want to retrieve.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The key name for the object whose legal hold status you want to retrieve.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The version ID of the object whose legal hold status you want to retrieve.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_object_lock_configuration": {
        "Bucket": {
            "Description": "The bucket whose Object Lock configuration you want to retrieve.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_object_retention": {
        "Bucket": {
            "Description": "The bucket name containing the object whose retention settings you want to retrieve.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The key name for the object whose retention settings you want to retrieve.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The version ID for the object whose retention settings you want to retrieve.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_object_tagging": {
        "Bucket": {
            "Description": "The bucket name containing the object for which to get the tagging information.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Object key for which to get the tagging information.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The versionId of the object for which to get the tagging information.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "get_object_torrent": {
        "Bucket": {
            "Description": "The name of the bucket containing the object for which to get the torrent files.",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The object key for which to get the information.",
            "Type": "string",
            "Required": true
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get_public_access_block": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose PublicAccessBlock configuration you want to retrieve.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "head_bucket": {
        "Bucket": {
            "Description": "The bucket name.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "head_object": {
        "Bucket": {
            "Description": "The name of the bucket containing the object.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Key": {
            "Description": "The object key.",
            "Type": "string",
            "Required": true
        },
        "Range": {
            "Description": "Because HeadObject returns only the metadata for an object, this parameter has no effect.",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this parameter must be enabled.\nIn addition, if you enable ChecksumMode and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the kms:Decrypt action for the request to succeed.",
            "Type": "string",
            "Required": false
        }
    },
    "list_bucket_analytics_configurations": {
        "Bucket": {
            "Description": "The name of the bucket from which analytics configurations are retrieved.",
            "Type": "string",
            "Required": true
        },
        "ContinuationToken": {
            "Description": "The ContinuationToken that represents a placeholder from where this request should begin.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_bucket_intelligent_tiering_configurations": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.",
            "Type": "string",
            "Required": true
        },
        "ContinuationToken": {
            "Description": "The ContinuationToken that represents a placeholder from where this request should begin.",
            "Type": "string",
            "Required": false
        }
    },
    "list_bucket_inventory_configurations": {
        "Bucket": {
            "Description": "The name of the bucket containing the inventory configurations to retrieve.",
            "Type": "string",
            "Required": true
        },
        "ContinuationToken": {
            "Description": "The marker used to continue an inventory configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_bucket_metrics_configurations": {
        "Bucket": {
            "Description": "The name of the bucket containing the metrics configurations to retrieve.",
            "Type": "string",
            "Required": true
        },
        "ContinuationToken": {
            "Description": "The marker that is used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_buckets": "No parameters defined",
    "list_multipart_uploads": {
        "Bucket": {
            "Description": "The name of the bucket to which the multipart upload was initiated.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Delimiter": {
            "Description": "Character you use to group keys.\nAll keys that contain the same string between the prefix, if specified, and the first occurrence of the delimiter after the prefix are grouped under a single result element, CommonPrefixes. If you don't specify the prefix parameter, then the substring starts at the beginning of the key. The keys that are grouped under CommonPrefixes result element are not returned elsewhere in the response.",
            "Type": "string",
            "Required": false
        },
        "EncodingType": {
            "Description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.",
            "Type": "string",
            "Required": false
        },
        "KeyMarker": {
            "Description": "Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.\nIf upload-id-marker is not specified, only the keys lexicographically greater than the specified key-marker will be included in the list.\nIf upload-id-marker is specified, any multipart uploads for a key equal to the key-marker might also be included, provided those multipart uploads have upload IDs lexicographically greater than the specified upload-id-marker .",
            "Type": "string",
            "Required": false
        },
        "MaxUploads": {
            "Description": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.",
            "Type": "integer",
            "Required": false
        },
        "Prefix": {
            "Description": "Lists in-progress uploads only for those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different grouping of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.)",
            "Type": "string",
            "Required": false
        },
        "UploadIdMarker": {
            "Description": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored. Otherwise, any multipart uploads for a key equal to the key-marker might be included in the list only if they have an upload ID lexicographically greater than the specified upload-id-marker .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_object_versions": {
        "Bucket": {
            "Description": "The bucket name that contains the objects.",
            "Type": "string",
            "Required": true
        },
        "Delimiter": {
            "Description": "A delimiter is a character that you specify to group keys. All keys that contain the same string between the prefix and the first occurrence of the delimiter are grouped under a single result element in CommonPrefixes. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response.",
            "Type": "string",
            "Required": false
        },
        "EncodingType": {
            "Description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.",
            "Type": "string",
            "Required": false
        },
        "KeyMarker": {
            "Description": "Specifies the key to start with when listing objects in a bucket.",
            "Type": "string",
            "Required": false
        },
        "MaxKeys": {
            "Description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. If additional keys satisfy the search criteria, but were not returned because max-keys was exceeded, the response contains <isTruncated>true</isTruncated>. To return the additional keys, see key-marker and version-id-marker.",
            "Type": "integer",
            "Required": false
        },
        "Prefix": {
            "Description": "Use this parameter to select only those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different groupings of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.) You can use prefix with delimiter to roll up numerous objects into a single result under CommonPrefixes.",
            "Type": "string",
            "Required": false
        },
        "VersionIdMarker": {
            "Description": "Specifies the object version you want to start listing from.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_objects": {
        "Bucket": {
            "Description": "The name of the bucket containing the objects.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Delimiter": {
            "Description": "A delimiter is a character you use to group keys.",
            "Type": "string",
            "Required": false
        },
        "EncodingType": {
            "Description": "Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.",
            "Type": "string",
            "Required": false
        },
        "MaxKeys": {
            "Description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.",
            "Type": "integer",
            "Required": false
        },
        "Prefix": {
            "Description": "Limits the response to keys that begin with the specified prefix.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that she or he will be charged for the list objects request. Bucket owners need not specify this parameter in their requests.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_objects_v2": {
        "Bucket": {
            "Description": "Bucket name to list.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Delimiter": {
            "Description": "A delimiter is a character you use to group keys.",
            "Type": "string",
            "Required": false
        },
        "EncodingType": {
            "Description": "Encoding type used by Amazon S3 to encode object keys in the response.",
            "Type": "string",
            "Required": false
        },
        "MaxKeys": {
            "Description": "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.",
            "Type": "integer",
            "Required": false
        },
        "Prefix": {
            "Description": "Limits the response to keys that begin with the specified prefix.",
            "Type": "string",
            "Required": false
        },
        "ContinuationToken": {
            "Description": "ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key.",
            "Type": "string",
            "Required": false
        },
        "FetchOwner": {
            "Description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true.",
            "Type": "boolean",
            "Required": false
        },
        "StartAfter": {
            "Description": "StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that she or he will be charged for the list objects request in V2 style. Bucket owners need not specify this parameter in their requests.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "list_parts": {
        "Bucket": {
            "Description": "The name of the bucket to which the parts are being uploaded.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Object key for which the multipart upload was initiated.",
            "Type": "string",
            "Required": true
        },
        "MaxParts": {
            "Description": "Sets the maximum number of parts to return.",
            "Type": "integer",
            "Required": false
        },
        "PartNumberMarker": {
            "Description": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
            "Type": "integer",
            "Required": false
        },
        "UploadId": {
            "Description": "Upload ID identifying the multipart upload whose parts are being listed.",
            "Type": "string",
            "Required": true
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_accelerate_configuration": {
        "Bucket": {
            "Description": "The name of the bucket for which the accelerate configuration is set.",
            "Type": "string",
            "Required": true
        },
        "AccelerateConfiguration": {
            "Description": "Container for setting the transfer acceleration state.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_acl": {
        "ACL": {
            "Description": "The canned ACL to apply to the bucket.",
            "Type": "string",
            "Required": false
        },
        "AccessControlPolicy": {
            "Description": "Contains the elements that set the ACL permissions for an object per grantee.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Bucket": {
            "Description": "The bucket to which to apply the ACL.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to list the objects in the bucket.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the bucket ACL.",
            "Type": "string",
            "Required": false
        },
        "GrantWrite": {
            "Description": "Allows grantee to create new objects in the bucket.\nFor the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable bucket.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_analytics_configuration": {
        "Bucket": {
            "Description": "The name of the bucket to which an analytics configuration is stored.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID that identifies the analytics configuration.",
            "Type": "string",
            "Required": true
        },
        "AnalyticsConfiguration": {
            "Description": "The configuration and any analyses for the analytics filter.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_cors": {
        "Bucket": {
            "Description": "Specifies the bucket impacted by the cors configuration.",
            "Type": "string",
            "Required": true
        },
        "CORSConfiguration": {
            "Description": "Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing in the Amazon S3 User Guide .",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_encryption": {
        "Bucket": {
            "Description": "Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or customer managed keys (SSE-KMS). For information about the Amazon S3 default encryption feature, see Amazon S3 Default Bucket Encryption in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "ContentMD5": {
            "Description": "The base64-encoded 128-bit MD5 digest of the server-side encryption configuration.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ServerSideEncryptionConfiguration": {
            "Description": "Specifies the default server-side-encryption configuration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_intelligent_tiering_configuration": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the S3 Intelligent-Tiering configuration.",
            "Type": "string",
            "Required": true
        },
        "IntelligentTieringConfiguration": {
            "Description": "Container for S3 Intelligent-Tiering configuration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "put_bucket_inventory_configuration": {
        "Bucket": {
            "Description": "The name of the bucket where the inventory configuration will be stored.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the inventory configuration.",
            "Type": "string",
            "Required": true
        },
        "InventoryConfiguration": {
            "Description": "Specifies the inventory configuration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_lifecycle": {
        "Bucket": {
            "Description": "[REQUIRED]",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "LifecycleConfiguration": {
            "Description": "\nRules (list)[REQUIRED]Specifies lifecycle configuration rules for an Amazon S3 bucket.\n\n(dict) --Specifies lifecycle rules for an Amazon S3 bucket. For more information, see Put Bucket Lifecycle Configuration in the Amazon S3 API Reference . For examples, see Put Bucket Lifecycle Configuration Examples .\n\nExpiration (dict) --Specifies the expiration for the lifecycle of the object.\n\nDate (datetime) --Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.\n\nDays (integer) --Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.\n\nExpiredObjectDeleteMarker (boolean) --Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.\n\n\n\nID (string) --Unique identifier for the rule. The value can't be longer than 255 characters.\n\nPrefix (string)[REQUIRED]Object key prefix that identifies one or more objects to which this rule applies.\n\nWarning\nReplacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see XML related object key constraints .\n\n\nStatus (string)[REQUIRED]If Enabled , the rule is currently being applied. If Disabled , the rule is not currently being applied.\n\nTransition (dict) --Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see Transitioning Objects Using Amazon S3 Lifecycle in the Amazon S3 User Guide .\n\nDate (datetime) --Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.\n\nDays (integer) --Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.\n\nStorageClass (string) --The storage class to which you want the object to transition.\n\n\n\nNoncurrentVersionTransition (dict) --Container for the transition rule that describes when noncurrent objects transition to the STANDARD_IA , ONEZONE_IA , INTELLIGENT_TIERING , GLACIER_IR , GLACIER , or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the STANDARD_IA , ONEZONE_IA , INTELLIGENT_TIERING , GLACIER_IR , GLACIER , or DEEP_ARCHIVE storage class at a specific period in the object's lifetime.\n\nNoncurrentDays (integer) --Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see How Amazon S3 Calculates How Long an Object Has Been Noncurrent in the Amazon S3 User Guide .\n\nStorageClass (string) --The class of storage used to store the object.\n\nNewerNoncurrentVersions (integer) --Specifies how many noncurrent versions Amazon S3 will retain. If there are this many more recent noncurrent versions, Amazon S3 will take the associated action. For more information about noncurrent versions, see Lifecycle configuration elements in the Amazon S3 User Guide .\n\n\n\nNoncurrentVersionExpiration (dict) --Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object's lifetime.\n\nNoncurrentDays (integer) --Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. The value must be a non-zero positive integer. For information about the noncurrent days calculations, see How Amazon S3 Calculates When an Object Became Noncurrent in the Amazon S3 User Guide .\n\nNewerNoncurrentVersions (integer) --Specifies how many noncurrent versions Amazon S3 will retain. If there are this many more recent noncurrent versions, Amazon S3 will take the associated action. For more information about noncurrent versions, see Lifecycle configuration elements in the Amazon S3 User Guide .\n\n\n\nAbortIncompleteMultipartUpload (dict) --Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy in the Amazon S3 User Guide .\n\nDaysAfterInitiation (integer) --Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.\n\n\n\n\n\n\n\n\n",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_lifecycle_configuration": {
        "Bucket": {
            "Description": "The name of the bucket for which to set the configuration.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "LifecycleConfiguration": {
            "Description": "Container for lifecycle rules. You can add as many as 1,000 rules.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_logging": {
        "Bucket": {
            "Description": "The name of the bucket for which to set the logging parameters.",
            "Type": "string",
            "Required": true
        },
        "BucketLoggingStatus": {
            "Description": "Container for logging status information.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_metrics_configuration": {
        "Bucket": {
            "Description": "The name of the bucket for which the metrics configuration is set.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID used to identify the metrics configuration.",
            "Type": "string",
            "Required": true
        },
        "MetricsConfiguration": {
            "Description": "Specifies the metrics configuration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_notification": {
        "Bucket": {
            "Description": "The name of the bucket.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "NotificationConfiguration": {
            "Description": "The container for the configuration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_notification_configuration": {
        "Bucket": {
            "Description": "The name of the bucket.",
            "Type": "string",
            "Required": true
        },
        "NotificationConfiguration": {
            "Description": "A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "SkipDestinationValidation": {
            "Description": "Skips validation of Amazon SQS, Amazon SNS, and Lambda destinations. True or false value.",
            "Type": "boolean",
            "Required": false
        }
    },
    "put_bucket_ownership_controls": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose OwnershipControls you want to set.",
            "Type": "string",
            "Required": true
        },
        "ContentMD5": {
            "Description": "The MD5 hash of the OwnershipControls request body.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "OwnershipControls": {
            "Description": "The OwnershipControls (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter) that you want to apply to this Amazon S3 bucket.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "put_bucket_policy": {
        "Bucket": {
            "Description": "The name of the bucket.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ConfirmRemoveSelfBucketAccess": {
            "Description": "Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.",
            "Type": "boolean",
            "Required": false
        },
        "Policy": {
            "Description": "The bucket policy as a JSON document.",
            "Type": "string",
            "Required": true
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_replication": {
        "Bucket": {
            "Description": "The name of the bucket",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ReplicationConfiguration": {
            "Description": "A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Token": {
            "Description": "A token to allow Object Lock to be enabled for an existing bucket.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_request_payment": {
        "Bucket": {
            "Description": "The bucket name.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "RequestPaymentConfiguration": {
            "Description": "Container for Payer.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_tagging": {
        "Bucket": {
            "Description": "The bucket name.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "Container for the TagSet and Tag elements.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_versioning": {
        "Bucket": {
            "Description": "The bucket name.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "MFA": {
            "Description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
            "Type": "string",
            "Required": false
        },
        "VersioningConfiguration": {
            "Description": "Container for setting the versioning state.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_bucket_website": {
        "Bucket": {
            "Description": "The bucket name.",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "WebsiteConfiguration": {
            "Description": "Container for the request.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_object": {
        "ACL": {
            "Description": "The canned ACL to apply to the object. For more information, see Canned ACL .\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Body": {
            "Description": "Object data.",
            "Type": "bytes or seekable file-like object",
            "Required": false
        },
        "CacheControl": {
            "Description": "Can be used to specify caching behavior along the request/reply chain. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1 .",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11 .",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentLength": {
            "Description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13 .",
            "Type": "integer",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This header can be used as a message integrity check to verify that the data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. For more information about REST request authentication, see REST Authentication .",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the contents. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17 .",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21 .",
            "Type": "datetime",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to read the object data and its metadata.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the object ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "Object key for which the PUT action was initiated.",
            "Type": "string",
            "Required": true
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see Storage Classes in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "WebsiteRedirectLocation": {
            "Description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata. For information about object metadata, see Object Key and Metadata .\nIn the following example, the request header sets the redirect to an object (anotherPage.html) in the same bucket:\nIn the following example, the request header sets the object redirect to another website:\nFor more information about website hosting in Amazon S3, see Hosting Websites on Amazon S3 and How to Configure Website Page Redirects .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "If x-amz-server-side-encryption is present and has the value of aws:kms , this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetrical customer managed key that was used for the object. If you specify x-amz-server-side-encryption:aws:kms , but do not provide``x-amz-server-side-encryption-aws-kms-key-id`` , Amazon S3 uses the Amazon Web Services managed key to protect the data. If the KMS key does not exist in the same account issuing the command, you must use the full ARN and not just the ID.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSEncryptionContext": {
            "Description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.\nSpecifying this header with a PUT action doesn\u2019t affect bucket-level settings for S3 Bucket Key.",
            "Type": "boolean",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, \"Key1=Value1\")",
            "Type": "string",
            "Required": false
        },
        "ObjectLockMode": {
            "Description": "The Object Lock mode that you want to apply to this object.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.",
            "Type": "datetime",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Specifies whether a legal hold will be applied to this object. For more information about S3 Object Lock, see Object Lock .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_object_acl": {
        "ACL": {
            "Description": "The canned ACL to apply to the object. For more information, see Canned ACL .",
            "Type": "string",
            "Required": false
        },
        "AccessControlPolicy": {
            "Description": "Contains the elements that set the ACL permissions for an object per grantee.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Bucket": {
            "Description": "The bucket name that contains the object to which you want to attach the ACL.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to list the objects in the bucket.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the bucket ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWrite": {
            "Description": "Allows grantee to create new objects in the bucket.\nFor the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable bucket.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "Key for which the PUT action was initiated.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_object_legal_hold": {
        "Bucket": {
            "Description": "The bucket name containing the object that you want to place a legal hold on.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The key name for the object that you want to place a legal hold on.",
            "Type": "string",
            "Required": true
        },
        "LegalHold": {
            "Description": "Container element for the legal hold configuration you want to apply to the specified object.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "The version ID of the object that you want to place a legal hold on.",
            "Type": "string",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The MD5 hash for the request body.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_object_lock_configuration": {
        "Bucket": {
            "Description": "The bucket whose Object Lock configuration you want to create or replace.",
            "Type": "string",
            "Required": true
        },
        "ObjectLockConfiguration": {
            "Description": "The Object Lock configuration that you want to apply to the specified bucket.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Token": {
            "Description": "A token to allow Object Lock to be enabled for an existing bucket.",
            "Type": "string",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The MD5 hash for the request body.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_object_retention": {
        "Bucket": {
            "Description": "The bucket name that contains the object you want to apply this Object Retention configuration to.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The key name for the object that you want to apply this Object Retention configuration to.",
            "Type": "string",
            "Required": true
        },
        "Retention": {
            "Description": "The container element for the Object Retention configuration.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "The version ID for the object that you want to apply this Object Retention configuration to.",
            "Type": "string",
            "Required": false
        },
        "BypassGovernanceRetention": {
            "Description": "Indicates whether this action should bypass Governance-mode restrictions.",
            "Type": "boolean",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The MD5 hash for the request body.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "put_object_tagging": {
        "Bucket": {
            "Description": "The bucket name containing the object.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Name of the object key.",
            "Type": "string",
            "Required": true
        },
        "VersionId": {
            "Description": "The versionId of the object that the tag-set will be added to.",
            "Type": "string",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The MD5 hash for the request body.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "Container for the TagSet and Tag elements",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "put_public_access_block": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket whose PublicAccessBlock configuration you want to set.",
            "Type": "string",
            "Required": true
        },
        "ContentMD5": {
            "Description": "The MD5 hash of the PutPublicAccessBlock request body.\nFor requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "PublicAccessBlockConfiguration": {
            "Description": "The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see The Meaning of \"Public\" in the Amazon S3 User Guide .",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "restore_object": {
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "RestoreRequest": {
            "Description": "Container for restore job parameters.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "select_object_content": {
        "Bucket": {
            "Description": "The S3 bucket.",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "The object key.",
            "Type": "string",
            "Required": true
        },
        "SSECustomerAlgorithm": {
            "Description": "The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Expression": {
            "Description": "The expression that is used to query the object.",
            "Type": "string",
            "Required": true
        },
        "ExpressionType": {
            "Description": "The type of the provided expression (for example, SQL).",
            "Type": "string",
            "Required": true
        },
        "RequestProgress": {
            "Description": "Specifies if periodic request progress information should be enabled.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InputSerialization": {
            "Description": "Describes the format of the data in the object that is being queried.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "OutputSerialization": {
            "Description": "Describes the format of the data that you want Amazon S3 to return in response.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ScanRange": {
            "Description": "Specifies the byte range of the object to get the records from. A record is processed when its first byte is contained by the range. This parameter is optional, but when specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the start and end of the range.",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "upload_file": {
        "null": {
            "Description": "The path to the file to upload.\nExtraArgs (dict)Extra arguments that may be passed to the\nclient operation. For allowed upload arguments see\nboto3.s3.transfer.S3Transfer.ALLOWED_UPLOAD_ARGS.\nCallback (function)A method which takes a number of bytes transferred to\nbe periodically called during the upload.\nConfig (boto3.s3.transfer.TransferConfig)The transfer configuration to be used when performing the\ntransfer.\n\n",
            "Type": "str",
            "Required": false,
            "str variables": {}
        }
    },
    "upload_fileobj": {
        "null": {
            "Description": "A file-like object to upload. At a minimum, it must\nimplement the read method, and must return bytes.\nExtraArgs (dict)Extra arguments that may be passed to the\nclient operation. For allowed upload arguments see\nboto3.s3.transfer.S3Transfer.ALLOWED_UPLOAD_ARGS.\nCallback (function)A method which takes a number of bytes transferred to\nbe periodically called during the upload.\nConfig (boto3.s3.transfer.TransferConfig)The transfer configuration to be used when performing the\nupload.\n\n",
            "Type": "a file-like object",
            "Required": false,
            "a file-like object variables": {}
        }
    },
    "upload_part": {
        "Body": {
            "Description": "Object data.",
            "Type": "bytes or seekable file-like object",
            "Required": false
        },
        "Bucket": {
            "Description": "The name of the bucket to which the multipart upload was initiated.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "ContentLength": {
            "Description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
            "Type": "integer",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameter is required if object lock parameters are specified.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.\nThis checksum algorithm must be the same for all parts and it match the checksum value supplied in the CreateMultipartUpload request.",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "Object key for which the multipart upload was initiated.",
            "Type": "string",
            "Required": true
        },
        "PartNumber": {
            "Description": "Part number of part being uploaded. This is a positive integer between 1 and 10,000.",
            "Type": "integer",
            "Required": true
        },
        "UploadId": {
            "Description": "Upload ID identifying the multipart upload whose part is being uploaded.",
            "Type": "string",
            "Required": true
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header . This must be the same encryption key specified in the initiate multipart upload request.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "upload_part_copy": {
        "Bucket": {
            "Description": "The bucket name.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "CopySource": {
            "Description": "[REQUIRED] The name of the source bucket, key name of the source object, and optional version ID of the source object.  You can either provide this value as a string or a dictionary.  The string form is {bucket}/{key} or {bucket}/{key}?versionId={versionId} if you want to copy a specific version.  You can also provide this value as a dictionary.  The dictionary format is recommended over the string format because it is more explicit.  The dictionary format is: {'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}.  Note that the VersionId key is optional and may be omitted. To specify an S3 access point, provide the access point ARN for the Bucket key in the copy source dictionary. If you want to provide the copy source for an S3 access point as a string instead of a dictionary, the ARN provided must be the full S3 access point object ARN (i.e. {accesspoint_arn}/object/{key})",
            "Type": "str or dict",
            "Required": true
        },
        "CopySourceIfMatch": {
            "Description": "Copies the object if its entity tag (ETag) matches the specified tag.",
            "Type": "string",
            "Required": false
        },
        "CopySourceIfModifiedSince": {
            "Description": "Copies the object if it has been modified since the specified time.",
            "Type": "datetime",
            "Required": false
        },
        "CopySourceIfNoneMatch": {
            "Description": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
            "Type": "string",
            "Required": false
        },
        "CopySourceIfUnmodifiedSince": {
            "Description": "Copies the object if it hasn't been modified since the specified time.",
            "Type": "datetime",
            "Required": false
        },
        "CopySourceRange": {
            "Description": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first 10 bytes of the source. You can copy a range only if the source object is greater than 5 MB.",
            "Type": "string",
            "Required": false
        },
        "Key": {
            "Description": "Object key for which the multipart upload was initiated.",
            "Type": "string",
            "Required": true
        },
        "PartNumber": {
            "Description": "Part number of part being copied. This is a positive integer between 1 and 10,000.",
            "Type": "integer",
            "Required": true
        },
        "UploadId": {
            "Description": "Upload ID identifying the multipart upload whose part is being copied.",
            "Type": "string",
            "Required": true
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use when decrypting the source object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ExpectedSourceBucketOwner": {
            "Description": "The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "write_get_object_response": {
        "RequestRoute": {
            "Description": "Route prefix to the HTTP URL generated.",
            "Type": "string",
            "Required": true
        },
        "RequestToken": {
            "Description": "A single use encrypted token that maps WriteGetObjectResponse to the end user GetObject request.",
            "Type": "string",
            "Required": true
        },
        "Body": {
            "Description": "The object data.",
            "Type": "bytes or seekable file-like object",
            "Required": false
        },
        "StatusCode": {
            "Description": "The integer status code for an HTTP response of a corresponding GetObject request.",
            "Type": "integer",
            "Required": false,
            "integer variables": {}
        },
        "ErrorCode": {
            "Description": "A string that uniquely identifies an error condition. Returned in the <Code> tag of the error XML response for a corresponding GetObject call. Cannot be used with a successful StatusCode header or when the transformed object is provided in the body. All error codes from S3 are sentence-cased. The regular expression (regex) value is \"^[A-Z][a-zA-Z]+$\" .",
            "Type": "string",
            "Required": false
        },
        "ErrorMessage": {
            "Description": "Contains a generic description of the error condition. Returned in the <Message> tag of the error XML response for a corresponding GetObject call. Cannot be used with a successful StatusCode header or when the transformed object is provided in body.",
            "Type": "string",
            "Required": false
        },
        "AcceptRanges": {
            "Description": "Indicates that a range of bytes was specified.",
            "Type": "string",
            "Required": false
        },
        "CacheControl": {
            "Description": "Specifies caching behavior along the request/reply chain.",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object.",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentLength": {
            "Description": "The size of the content body in bytes.",
            "Type": "integer",
            "Required": false
        },
        "ContentRange": {
            "Description": "The portion of the object returned in the response.",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the object data.",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32 checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see Checking object integrity in the Amazon S3 User Guide .\nOnly one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32C checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see Checking object integrity in the Amazon S3 User Guide .\nOnly one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 160-bit SHA-1 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see Checking object integrity in the Amazon S3 User Guide .\nOnly one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 256-bit SHA-256 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see Checking object integrity in the Amazon S3 User Guide .\nOnly one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.",
            "Type": "string",
            "Required": false
        },
        "DeleteMarker": {
            "Description": "Specifies whether an object stored in Amazon S3 is (true ) or is not (false ) a delete marker.",
            "Type": "boolean",
            "Required": false
        },
        "ETag": {
            "Description": "An opaque identifier assigned by a web server to a specific version of a resource found at a URL.",
            "Type": "string",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable.",
            "Type": "datetime",
            "Required": false
        },
        "Expiration": {
            "Description": "If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key-value pairs that provide the object expiration information. The value of the rule-id is URL-encoded.",
            "Type": "string",
            "Required": false
        },
        "LastModified": {
            "Description": "The date and time that the object was last modified.",
            "Type": "datetime",
            "Required": false
        },
        "MissingMeta": {
            "Description": "Set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.",
            "Type": "integer",
            "Required": false
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ObjectLockMode": {
            "Description": "Indicates whether an object stored in Amazon S3 has Object Lock enabled. For more information about S3 Object Lock, see Object Lock .",
            "Type": "string",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Indicates whether an object stored in Amazon S3 has an active legal hold.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "The date and time when Object Lock is configured to expire.",
            "Type": "datetime",
            "Required": false
        },
        "PartsCount": {
            "Description": "The count of parts this object has.",
            "Type": "integer",
            "Required": false
        },
        "ReplicationStatus": {
            "Description": "Indicates if request involves bucket that is either a source or destination in a Replication rule. For more information about S3 Replication, see Replication .",
            "Type": "string",
            "Required": false
        },
        "RequestCharged": {
            "Description": "If present, indicates that the requester was successfully charged for the request.",
            "Type": "string",
            "Required": false
        },
        "Restore": {
            "Description": "Provides information about object restoration operation and expiration time of the restored object copy.",
            "Type": "string",
            "Required": false
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing requested object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Encryption algorithm used if server-side encryption with a customer-provided encryption key was specified for object stored in Amazon S3.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for stored in Amazon S3 object.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "128-bit MD5 digest of customer-provided encryption key used in Amazon S3 to encrypt data stored in S3. For more information, see Protecting data using server-side encryption with customer-provided encryption keys (SSE-C) .",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.\nFor more information, see Storage Classes .",
            "Type": "string",
            "Required": false
        },
        "TagCount": {
            "Description": "The number of tags, if any, on the object.",
            "Type": "integer",
            "Required": false
        },
        "VersionId": {
            "Description": "An ID used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Indicates whether the object stored in Amazon S3 uses an S3 bucket key for server-side encryption with Amazon Web Services KMS (SSE-KMS).",
            "Type": "boolean",
            "Required": false
        }
    },
    "paginate": {
        "Bucket": {
            "Description": "The name of the bucket to which the parts are being uploaded.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "Key": {
            "Description": "Object key for which the multipart upload was initiated.",
            "Type": "string",
            "Required": true
        },
        "UploadId": {
            "Description": "Upload ID identifying the multipart upload whose parts are being listed.",
            "Type": "string",
            "Required": true
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "Bucket": {
            "Description": "The name of the bucket containing the object.\nWhen using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName -AccountId .s3-accesspoint.*Region* .amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see Using access points in the Amazon S3 User Guide .\nWhen using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form `` AccessPointName -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see Using Amazon S3 on Outposts in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": true
        },
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Key": {
            "Description": "The object key.",
            "Type": "string",
            "Required": true
        },
        "Range": {
            "Description": "Because HeadObject returns only the metadata for an object, this parameter has no effect.",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this parameter must be enabled.\nIn addition, if you enable ChecksumMode and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the kms:Decrypt action for the request to succeed.",
            "Type": "string",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "get_available_subresources": "No parameters defined",
    "Bucket": "No parameters defined",
    "BucketAcl": {
        "bucket_name": {
            "Description": "The BucketAcl's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketCors": {
        "bucket_name": {
            "Description": "The BucketCors's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketLifecycle": {
        "bucket_name": {
            "Description": "The BucketLifecycle's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketLifecycleConfiguration": {
        "bucket_name": {
            "Description": "The BucketLifecycleConfiguration's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketLogging": {
        "bucket_name": {
            "Description": "The BucketLogging's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketNotification": {
        "bucket_name": {
            "Description": "The BucketNotification's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketPolicy": {
        "bucket_name": {
            "Description": "The BucketPolicy's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketRequestPayment": {
        "bucket_name": {
            "Description": "The BucketRequestPayment's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketTagging": {
        "bucket_name": {
            "Description": "The BucketTagging's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketVersioning": {
        "bucket_name": {
            "Description": "The BucketVersioning's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "BucketWebsite": {
        "bucket_name": {
            "Description": "The BucketWebsite's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "MultipartUpload": {
        "id": {
            "Description": "The MultipartUpload's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "MultipartUploadPart": {
        "bucket_name": {
            "Description": "The MultipartUploadPart's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "object_key": {
            "Description": "The MultipartUploadPart's object_key identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "multipart_upload_id": {
            "Description": "The MultipartUploadPart's multipart_upload_id identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "part_number": {
            "Description": "The MultipartUploadPart's part_number identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Object": "No parameters defined",
    "ObjectAcl": {
        "bucket_name": {
            "Description": "The ObjectAcl's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "object_key": {
            "Description": "The ObjectAcl's object_key identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "ObjectSummary": {
        "bucket_name": {
            "Description": "The ObjectSummary's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "key": {
            "Description": "The ObjectSummary's key identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "ObjectVersion": {
        "bucket_name": {
            "Description": "The ObjectVersion's bucket_name identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "object_key": {
            "Description": "The ObjectVersion's object_key identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "id": {
            "Description": "The ObjectVersion's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "all": "No parameters defined",
    "filter": {
        "MaxParts": {
            "Description": "Sets the maximum number of parts to return.",
            "Type": "integer",
            "Required": false
        },
        "PartNumberMarker": {
            "Description": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.",
            "Type": "integer",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "limit": {
        "count": {
            "Description": "The limit to the number of resources in the iterable.",
            "Type": "integer",
            "Required": false
        }
    },
    "page_size": {
        "count": {
            "Description": "The number of items returned by each service call",
            "Type": "integer",
            "Required": false
        }
    },
    "create": {
        "ACL": {
            "Description": "The canned ACL to apply to the bucket.",
            "Type": "string",
            "Required": false
        },
        "CreateBucketConfiguration": {
            "Description": "The configuration information for the bucket.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "GrantFullControl": {
            "Description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to list the objects in the bucket.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the bucket ACL.",
            "Type": "string",
            "Required": false
        },
        "GrantWrite": {
            "Description": "Allows grantee to create new objects in the bucket.\nFor the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable bucket.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockEnabledForBucket": {
            "Description": "Specifies whether you want S3 Object Lock to be enabled for the new bucket.",
            "Type": "boolean",
            "Required": false
        },
        "ObjectOwnership": {
            "Description": "The container element for object ownership for a bucket's ownership controls.\nBucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL.\nObjectWriter - The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL.\nBucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer affect permissions. The bucket owner automatically owns and has full control over every object in the bucket. The bucket only accepts PUT requests that don't specify an ACL or bucket owner full control ACLs, such as the bucket-owner-full-control canned ACL or an equivalent form of this ACL expressed in the XML format.",
            "Type": "string",
            "Required": false
        }
    },
    "delete": {
        "MFA": {
            "Description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "BypassGovernanceRetention": {
            "Description": "Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation. To use this header, you must have the s3:BypassGovernanceRetention permission.",
            "Type": "boolean",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "load": "No parameters defined",
    "Acl": "No parameters defined",
    "Cors": "No parameters defined",
    "Lifecycle": "No parameters defined",
    "LifecycleConfiguration": "No parameters defined",
    "Logging": "No parameters defined",
    "Notification": "No parameters defined",
    "Policy": "No parameters defined",
    "RequestPayment": "No parameters defined",
    "Tagging": "No parameters defined",
    "Versioning": "No parameters defined",
    "Website": "No parameters defined",
    "wait_until_exists": {
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Range": {
            "Description": "Because HeadObject returns only the metadata for an object, this parameter has no effect.",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this parameter must be enabled.\nIn addition, if you enable ChecksumMode and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the kms:Decrypt action for the request to succeed.",
            "Type": "string",
            "Required": false
        }
    },
    "wait_until_not_exists": {
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Range": {
            "Description": "Because HeadObject returns only the metadata for an object, this parameter has no effect.",
            "Type": "string",
            "Required": false
        },
        "VersionId": {
            "Description": "VersionId used to reference a specific version of the object.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this parameter must be enabled.\nIn addition, if you enable ChecksumMode and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the kms:Decrypt action for the request to succeed.",
            "Type": "string",
            "Required": false
        }
    },
    "put": {
        "ACL": {
            "Description": "The canned ACL to apply to the object. For more information, see Canned ACL .\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Body": {
            "Description": "Object data.",
            "Type": "bytes or seekable file-like object",
            "Required": false
        },
        "CacheControl": {
            "Description": "Can be used to specify caching behavior along the request/reply chain. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1 .",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11 .",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentLength": {
            "Description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13 .",
            "Type": "integer",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This header can be used as a message integrity check to verify that the data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. For more information about REST request authentication, see REST Authentication .",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the contents. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17 .",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21 .",
            "Type": "datetime",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to read the object data and its metadata.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the object ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see Storage Classes in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "WebsiteRedirectLocation": {
            "Description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata. For information about object metadata, see Object Key and Metadata .\nIn the following example, the request header sets the redirect to an object (anotherPage.html) in the same bucket:\nIn the following example, the request header sets the object redirect to another website:\nFor more information about website hosting in Amazon S3, see Hosting Websites on Amazon S3 and How to Configure Website Page Redirects .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "If x-amz-server-side-encryption is present and has the value of aws:kms , this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetrical customer managed key that was used for the object. If you specify x-amz-server-side-encryption:aws:kms , but do not provide``x-amz-server-side-encryption-aws-kms-key-id`` , Amazon S3 uses the Amazon Web Services managed key to protect the data. If the KMS key does not exist in the same account issuing the command, you must use the full ARN and not just the ID.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSEncryptionContext": {
            "Description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.\nSpecifying this header with a PUT action doesn\u2019t affect bucket-level settings for S3 Bucket Key.",
            "Type": "boolean",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, \"Key1=Value1\")",
            "Type": "string",
            "Required": false
        },
        "ObjectLockMode": {
            "Description": "The Object Lock mode that you want to apply to this object.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.",
            "Type": "datetime",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Specifies whether a legal hold will be applied to this object. For more information about S3 Object Lock, see Object Lock .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "reload": "No parameters defined",
    "enable": {
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "MFA": {
            "Description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "suspend": {
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.",
            "Type": "string",
            "Required": false
        },
        "MFA": {
            "Description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "abort": {
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "complete": {
        "MultipartUpload": {
            "Description": "The container for the multipart upload request information.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see Protecting data using SSE-C keys in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "Part": {
        "part_number": {
            "Description": "The Part's part_number identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "copy_from": {
        "ACL": {
            "Description": "The canned ACL to apply to the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "CacheControl": {
            "Description": "Specifies caching behavior along the request/reply chain.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object.",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the object data.",
            "Type": "string",
            "Required": false
        },
        "CopySource": {
            "Description": "[REQUIRED] The name of the source bucket, key name of the source object, and optional version ID of the source object.  You can either provide this value as a string or a dictionary.  The string form is {bucket}/{key} or {bucket}/{key}?versionId={versionId} if you want to copy a specific version.  You can also provide this value as a dictionary.  The dictionary format is recommended over the string format because it is more explicit.  The dictionary format is: {'Bucket': 'bucket', 'Key': 'key', 'VersionId': 'id'}.  Note that the VersionId key is optional and may be omitted. To specify an S3 access point, provide the access point ARN for the Bucket key in the copy source dictionary. If you want to provide the copy source for an S3 access point as a string instead of a dictionary, the ARN provided must be the full S3 access point object ARN (i.e. {accesspoint_arn}/object/{key})",
            "Type": "str or dict",
            "Required": true
        },
        "CopySourceIfMatch": {
            "Description": "Copies the object if its entity tag (ETag) matches the specified tag.",
            "Type": "string",
            "Required": false
        },
        "CopySourceIfModifiedSince": {
            "Description": "Copies the object if it has been modified since the specified time.",
            "Type": "datetime",
            "Required": false
        },
        "CopySourceIfNoneMatch": {
            "Description": "Copies the object if its entity tag (ETag) is different than the specified ETag.",
            "Type": "string",
            "Required": false
        },
        "CopySourceIfUnmodifiedSince": {
            "Description": "Copies the object if it hasn't been modified since the specified time.",
            "Type": "datetime",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable.",
            "Type": "datetime",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to read the object data and its metadata.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the object ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MetadataDirective": {
            "Description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
            "Type": "string",
            "Required": false
        },
        "TaggingDirective": {
            "Description": "Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.",
            "Type": "string",
            "Required": false
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see Storage Classes in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "WebsiteRedirectLocation": {
            "Description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "Specifies the Amazon Web Services KMS key ID to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see Specifying the Signature Version in Request Authentication in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSEKMSEncryptionContext": {
            "Description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.\nSpecifying this header with a COPY action doesn\u2019t affect bucket-level settings for S3 Bucket Key.",
            "Type": "boolean",
            "Required": false
        },
        "CopySourceSSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use when decrypting the source object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.",
            "Type": "string",
            "Required": false
        },
        "CopySourceSSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective . The tag-set must be encoded as URL Query parameters.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockMode": {
            "Description": "The Object Lock mode that you want to apply to the copied object.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "The date and time when you want the copied object's Object Lock to expire.",
            "Type": "datetime",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Specifies whether you want to apply a legal hold to the copied object.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ExpectedSourceBucketOwner": {
            "Description": "The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "upload": {
        "Body": {
            "Description": "Object data.",
            "Type": "bytes or seekable file-like object",
            "Required": false
        },
        "ContentLength": {
            "Description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.",
            "Type": "integer",
            "Required": false
        },
        "ContentMD5": {
            "Description": "The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameter is required if object lock parameters are specified.",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see Checking object integrity in the Amazon S3 User Guide .\nIf you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.\nThis checksum algorithm must be the same for all parts and it match the checksum value supplied in the CreateMultipartUpload request.",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumCRC32C": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA1": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ChecksumSHA256": {
            "Description": "This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header . This must be the same encryption key specified in the initiate multipart upload request.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        }
    },
    "get": {
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Range": {
            "Description": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35 .",
            "Type": "string",
            "Required": false
        },
        "ResponseCacheControl": {
            "Description": "Sets the Cache-Control header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseContentDisposition": {
            "Description": "Sets the Content-Disposition header of the response",
            "Type": "string",
            "Required": false
        },
        "ResponseContentEncoding": {
            "Description": "Sets the Content-Encoding header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseContentLanguage": {
            "Description": "Sets the Content-Language header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseContentType": {
            "Description": "Sets the Content-Type header of the response.",
            "Type": "string",
            "Required": false
        },
        "ResponseExpires": {
            "Description": "Sets the Expires header of the response.",
            "Type": "datetime",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when decrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this mode must be enabled.",
            "Type": "string",
            "Required": false
        }
    },
    "initiate_multipart_upload": {
        "ACL": {
            "Description": "The canned ACL to apply to the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "CacheControl": {
            "Description": "Specifies caching behavior along the request/reply chain.",
            "Type": "string",
            "Required": false
        },
        "ContentDisposition": {
            "Description": "Specifies presentational information for the object.",
            "Type": "string",
            "Required": false
        },
        "ContentEncoding": {
            "Description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
            "Type": "string",
            "Required": false
        },
        "ContentLanguage": {
            "Description": "The language the content is in.",
            "Type": "string",
            "Required": false
        },
        "ContentType": {
            "Description": "A standard MIME type describing the format of the object data.",
            "Type": "string",
            "Required": false
        },
        "Expires": {
            "Description": "The date and time at which the object is no longer cacheable.",
            "Type": "datetime",
            "Required": false
        },
        "GrantFullControl": {
            "Description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantRead": {
            "Description": "Allows grantee to read the object data and its metadata.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantReadACP": {
            "Description": "Allows grantee to read the object ACL.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "GrantWriteACP": {
            "Description": "Allows grantee to write the ACL for the applicable object.\nThis action is not supported by Amazon S3 on Outposts.",
            "Type": "string",
            "Required": false
        },
        "Metadata": {
            "Description": "A map of metadata to store with the object in S3.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ServerSideEncryption": {
            "Description": "The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).",
            "Type": "string",
            "Required": false
        },
        "StorageClass": {
            "Description": "By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see Storage Classes in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "WebsiteRedirectLocation": {
            "Description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "SSEKMSKeyId": {
            "Description": "Specifies the ID of the symmetric customer managed key to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see Specifying the Signature Version in Request Authentication in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "SSEKMSEncryptionContext": {
            "Description": "Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.",
            "Type": "string",
            "Required": false
        },
        "BucketKeyEnabled": {
            "Description": "Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to true causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.\nSpecifying this header with an object action doesn\u2019t affect bucket-level settings for S3 Bucket Key.",
            "Type": "boolean",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tagging": {
            "Description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockMode": {
            "Description": "Specifies the Object Lock mode that you want to apply to the uploaded object.",
            "Type": "string",
            "Required": false
        },
        "ObjectLockRetainUntilDate": {
            "Description": "Specifies the date and time when you want the Object Lock to expire.",
            "Type": "datetime",
            "Required": false
        },
        "ObjectLockLegalHoldStatus": {
            "Description": "Specifies whether you want to apply a legal hold to the uploaded object.",
            "Type": "string",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumAlgorithm": {
            "Description": "Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see Checking object integrity in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "Version": {
        "id": {
            "Description": "The Version's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "head": {
        "IfMatch": {
            "Description": "Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.",
            "Type": "string",
            "Required": false
        },
        "IfModifiedSince": {
            "Description": "Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.",
            "Type": "datetime",
            "Required": false
        },
        "IfNoneMatch": {
            "Description": "Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.",
            "Type": "string",
            "Required": false
        },
        "IfUnmodifiedSince": {
            "Description": "Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.",
            "Type": "datetime",
            "Required": false
        },
        "Range": {
            "Description": "Because HeadObject returns only the metadata for an object, this parameter has no effect.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerAlgorithm": {
            "Description": "Specifies the algorithm to use to when encrypting the object (for example, AES256).",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKey": {
            "Description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.",
            "Type": "string",
            "Required": false
        },
        "SSECustomerKeyMD5": {
            "Description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.",
            "Type": "string",
            "Required": false
        },
        "RequestPayer": {
            "Description": "Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see Downloading Objects in Requester Pays Buckets in the Amazon S3 User Guide .",
            "Type": "string",
            "Required": false
        },
        "PartNumber": {
            "Description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.",
            "Type": "integer",
            "Required": false
        },
        "ExpectedBucketOwner": {
            "Description": "The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).",
            "Type": "string",
            "Required": false
        },
        "ChecksumMode": {
            "Description": "To retrieve the checksum, this parameter must be enabled.\nIn addition, if you enable ChecksumMode and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the kms:Decrypt action for the request to succeed.",
            "Type": "string",
            "Required": false
        }
    }
}