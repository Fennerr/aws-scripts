{
    "accept_reserved_instances_exchange_quote": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ReservedInstanceIds": {
            "Description": "The IDs of the Convertible Reserved Instances to exchange for another Convertible Reserved Instance of the same or higher value.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TargetConfigurations": {
            "Description": "The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "accept_transit_gateway_multicast_domain_associations": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "The IDs of the subnets to associate with the transit gateway multicast domain.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "accept_transit_gateway_peering_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "accept_transit_gateway_vpc_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "accept_vpc_endpoint_connections": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the VPC endpoint service.",
            "Type": "string",
            "Required": true
        },
        "VpcEndpointIds": {
            "Description": "The IDs of one or more interface VPC endpoints.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "accept_vpc_peering_connection": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of the VPC peering connection. You must specify this parameter in the request.",
            "Type": "string",
            "Required": false
        }
    },
    "advertise_byoip_cidr": {
        "Cidr": {
            "Description": "The address range, in CIDR notation. This must be the exact range that you provisioned. You can't advertise only a portion of the provisioned range.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "allocate_address": {
        "Domain": {
            "Description": "Indicates whether the Elastic IP address is for use with instances in a VPC or instances in EC2-Classic.\nDefault: If the Region supports EC2-Classic, the default is standard. Otherwise, the default is vpc .",
            "Type": "string",
            "Required": false
        },
        "Address": {
            "Description": "[EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.",
            "Type": "string",
            "Required": false
        },
        "PublicIpv4Pool": {
            "Description": "The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.",
            "Type": "string",
            "Required": false
        },
        "NetworkBorderGroup": {
            "Description": "A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.\nUse DescribeAvailabilityZones to view the network border groups.\nYou cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 Classic, you receive an InvalidParameterCombination error.",
            "Type": "string",
            "Required": false
        },
        "CustomerOwnedIpv4Pool": {
            "Description": "The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the Elastic IP address.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "allocate_hosts": {
        "AutoPlacement": {
            "Description": "Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see Understanding auto-placement and affinity in the Amazon EC2 User Guide .\nDefault: on",
            "Type": "string",
            "Required": false
        },
        "AvailabilityZone": {
            "Description": "The Availability Zone in which to allocate the Dedicated Host.",
            "Type": "string",
            "Required": true
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.\nIf you want the Dedicated Hosts to support multiple instance types in a specific instance family, omit this parameter and specify InstanceFamily instead. You cannot specify InstanceType and InstanceFamily in the same request.",
            "Type": "string",
            "Required": false
        },
        "InstanceFamily": {
            "Description": "Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.\nIf you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify InstanceType instead. You cannot specify InstanceFamily and InstanceType in the same request.",
            "Type": "string",
            "Required": false
        },
        "Quantity": {
            "Description": "The number of Dedicated Hosts to allocate to your account with these parameters.",
            "Type": "integer",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the Dedicated Host during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "HostRecovery": {
            "Description": "Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see Host recovery in the Amazon EC2 User Guide .\nDefault: off",
            "Type": "string",
            "Required": false
        },
        "OutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which to allocate the Dedicated Host.",
            "Type": "string",
            "Required": false
        }
    },
    "allocate_ipam_pool_cidr": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool from which you would like to allocate a CIDR.",
            "Type": "string",
            "Required": true
        },
        "Cidr": {
            "Description": "The CIDR you would like to allocate from the IPAM pool. Note the following:\nPossible values: Any available IPv4 or IPv6 CIDR.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "NetmaskLength": {
            "Description": "The netmask length of the CIDR you would like to allocate from the IPAM pool. Note the following:\nPossible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "Type": "integer",
            "Required": false,
            "integer variables": {}
        },
        "ClientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the allocation.",
            "Type": "string",
            "Required": false
        },
        "PreviewNextCidr": {
            "Description": "A preview of the next available CIDR in a pool.",
            "Type": "boolean",
            "Required": false
        },
        "DisallowedCidrs": {
            "Description": "Exclude a particular CIDR range from being returned by the pool.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "apply_security_groups_to_client_vpn_target_network": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The ID of the VPC in which the associated target network is located.",
            "Type": "string",
            "Required": true
        },
        "SecurityGroupIds": {
            "Description": "The IDs of the security groups to apply to the associated target network. Up to 5 security groups can be applied to an associated target network.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "assign_ipv6_addresses": {
        "Ipv6AddressCount": {
            "Description": "The number of additional IPv6 addresses to assign to the network interface. The specified number of IPv6 addresses are assigned in addition to the existing IPv6 addresses that are already assigned to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.",
            "Type": "integer",
            "Required": false
        },
        "Ipv6Addresses": {
            "Description": "One or more specific IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv6PrefixCount": {
            "Description": "The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the Ipv6Prefixes option.",
            "Type": "integer",
            "Required": false
        },
        "Ipv6Prefixes": {
            "Description": "One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the Ipv6PrefixCount option.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        }
    },
    "assign_private_ip_addresses": {
        "AllowReassignment": {
            "Description": "Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.",
            "Type": "boolean",
            "Required": false
        },
        "PrivateIpAddresses": {
            "Description": "One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.\nIf you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecondaryPrivateIpAddressCount": {
            "Description": "The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.",
            "Type": "integer",
            "Required": false
        },
        "Ipv4Prefixes": {
            "Description": "One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the Ipv4PrefixCount option.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv4PrefixCount": {
            "Description": "The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the Ipv4 Prefixes option.",
            "Type": "integer",
            "Required": false
        }
    },
    "associate_address": {
        "AllocationId": {
            "Description": "[EC2-VPC] The allocation ID. This is required for EC2-VPC.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.",
            "Type": "string",
            "Required": false
        },
        "PublicIp": {
            "Description": "[EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.",
            "Type": "string",
            "Required": false
        },
        "AllowReassociation": {
            "Description": "[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\nFor EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.",
            "Type": "string",
            "Required": false
        },
        "PrivateIpAddress": {
            "Description": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.",
            "Type": "string",
            "Required": false
        }
    },
    "associate_client_vpn_target_network": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "SubnetId": {
            "Description": "The ID of the subnet to associate with the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_dhcp_options": {
        "DhcpOptionsId": {
            "Description": "The ID of the DHCP options set, or default to associate no DHCP options with the VPC.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_enclave_certificate_iam_role": {
        "CertificateArn": {
            "Description": "The ARN of the ACM certificate with which to associate the IAM role.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_iam_instance_profile": {
        "IamInstanceProfile": {
            "Description": "The IAM instance profile.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_instance_event_window": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceEventWindowId": {
            "Description": "The ID of the event window.",
            "Type": "string",
            "Required": true
        },
        "AssociationTarget": {
            "Description": "One or more targets associated with the specified event window.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "associate_route_table": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        },
        "SubnetId": {
            "Description": "The ID of the subnet.",
            "Type": "string",
            "Required": false
        },
        "GatewayId": {
            "Description": "The ID of the internet gateway or virtual private gateway.",
            "Type": "string",
            "Required": false
        }
    },
    "associate_subnet_cidr_block": {
        "Ipv6CidrBlock": {
            "Description": "The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.",
            "Type": "string",
            "Required": true
        },
        "SubnetId": {
            "Description": "The ID of your subnet.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_transit_gateway_multicast_domain": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment to associate with the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "The IDs of the subnets to associate with the transit gateway multicast domain.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_transit_gateway_policy_table": {
        "TransitGatewayPolicyTableId": {
            "Description": "The ID of the transit gateway policy table to associate with the transit gateway attachment.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment to associate with the policy table.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_transit_gateway_route_table": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_trunk_interface": {
        "BranchInterfaceId": {
            "Description": "The ID of the branch network interface.",
            "Type": "string",
            "Required": true
        },
        "TrunkInterfaceId": {
            "Description": "The ID of the trunk network interface.",
            "Type": "string",
            "Required": true
        },
        "VlanId": {
            "Description": "The ID of the VLAN. This applies to the VLAN protocol.",
            "Type": "integer",
            "Required": false
        },
        "GreKey": {
            "Description": "The application key. This applies to the GRE protocol.",
            "Type": "integer",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate_vpc_cidr_block": {
        "AmazonProvidedIpv6CidrBlock": {
            "Description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.",
            "Type": "boolean",
            "Required": false
        },
        "CidrBlock": {
            "Description": "An IPv4 CIDR block to associate with the VPC.",
            "Type": "string",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "Ipv6CidrBlockNetworkBorderGroup": {
            "Description": "The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CIDR block to this location.\nYou must set AmazonProvidedIpv6CidrBlock to true to use this parameter.\nYou can have one IPv6 CIDR block association per network border group.",
            "Type": "string",
            "Required": false
        },
        "Ipv6Pool": {
            "Description": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.",
            "Type": "string",
            "Required": false
        },
        "Ipv6CidrBlock": {
            "Description": "An IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.\nTo let Amazon choose the IPv6 CIDR block for you, omit this parameter.",
            "Type": "string",
            "Required": false
        },
        "Ipv4IpamPoolId": {
            "Description": "Associate a CIDR allocated from an IPv4 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "string",
            "Required": false
        },
        "Ipv4NetmaskLength": {
            "Description": "The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "integer",
            "Required": false
        },
        "Ipv6IpamPoolId": {
            "Description": "Associates a CIDR allocated from an IPv6 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "string",
            "Required": false
        },
        "Ipv6NetmaskLength": {
            "Description": "The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "integer",
            "Required": false
        }
    },
    "attach_classic_link_vpc": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Groups": {
            "Description": "The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "VpcId": {
            "Description": "The ID of a ClassicLink-enabled VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "attach_internet_gateway": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InternetGatewayId": {
            "Description": "The ID of the internet gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "attach_network_interface": {
        "DeviceIndex": {
            "Description": "The index of the device for the network interface attachment.",
            "Type": "integer",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        },
        "NetworkCardIndex": {
            "Description": "The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.",
            "Type": "integer",
            "Required": false
        }
    },
    "attach_volume": {
        "Device": {
            "Description": "The device name (for example, /dev/sdh or xvdh ).",
            "Type": "string",
            "Required": true
        },
        "VolumeId": {
            "Description": "The ID of the EBS volume. The volume and instance must be within the same Availability Zone.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "attach_vpn_gateway": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "VpnGatewayId": {
            "Description": "The ID of the virtual private gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "authorize_client_vpn_ingress": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "TargetNetworkCidr": {
            "Description": "The IPv4 address range, in CIDR notation, of the network for which access is being authorized.",
            "Type": "string",
            "Required": true
        },
        "AccessGroupId": {
            "Description": "The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if AuthorizeAllGroups is false or not specified.",
            "Type": "string",
            "Required": false
        },
        "AuthorizeAllGroups": {
            "Description": "Indicates whether to grant access to all clients. Specify true to grant all clients who successfully establish a VPN connection access to the network. Must be set to true if AccessGroupId is not specified.",
            "Type": "boolean",
            "Required": false
        },
        "Description": {
            "Description": "A brief description of the authorization rule.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "authorize_security_group_egress": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupId": {
            "Description": "The ID of the security group.",
            "Type": "string",
            "Required": true
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags applied to the security group rule.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "CidrIp": {
            "Description": "Not supported. Use a set of IP permissions to specify the CIDR.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "IpProtocol": {
            "Description": "Not supported. Use a set of IP permissions to specify the protocol name or number.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        }
    },
    "authorize_security_group_ingress": {
        "CidrIp": {
            "Description": "The IPv4 address range, in CIDR format. You can't specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all types. If you specify all ICMP types, you must specify all codes.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "integer",
            "Required": false
        },
        "GroupId": {
            "Description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
            "Type": "string",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IpProtocol": {
            "Description": "The IP protocol name (tcp, udp, icmp ) or number (see Protocol Numbers ). To specify icmpv6, use a set of IP permissions.\n[VPC only] Use -1 to specify all protocols. If you specify -1 or a protocol other than tcp, udp, or icmp, traffic on all ports is allowed, regardless of any ports you specify.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "[nondefault VPC] The Amazon Web Services account ID for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all codes. If you specify all ICMP types, you must specify all codes.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "[VPC Only] The tags applied to the security group rule.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "bundle_instance": {
        "InstanceId": {
            "Description": "The ID of the instance to bundle.\nType: String\nDefault: None\nRequired: Yes",
            "Type": "string",
            "Required": true
        },
        "Storage": {
            "Description": "The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "cancel_bundle_task": {
        "BundleId": {
            "Description": "The ID of the bundle task.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "cancel_capacity_reservation": {
        "CapacityReservationId": {
            "Description": "The ID of the Capacity Reservation to be cancelled.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "cancel_capacity_reservation_fleets": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "CapacityReservationFleetIds": {
            "Description": "The IDs of the Capacity Reservation Fleets to cancel.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "cancel_conversion_task": {
        "ConversionTaskId": {
            "Description": "The ID of the conversion task.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ReasonMessage": {
            "Description": "The reason for canceling the conversion task.",
            "Type": "string",
            "Required": false
        }
    },
    "cancel_export_task": {
        "ExportTaskId": {
            "Description": "The ID of the export task. This is the ID returned by CreateInstanceExportTask .",
            "Type": "string",
            "Required": true
        }
    },
    "cancel_import_task": {
        "CancelReason": {
            "Description": "The reason for canceling the task.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ImportTaskId": {
            "Description": "The ID of the import image or import snapshot task to be canceled.",
            "Type": "string",
            "Required": false
        }
    },
    "cancel_reserved_instances_listing": {
        "ReservedInstancesListingId": {
            "Description": "The ID of the Reserved Instance listing.",
            "Type": "string",
            "Required": true
        }
    },
    "cancel_spot_fleet_requests": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SpotFleetRequestIds": {
            "Description": "The IDs of the Spot Fleet requests.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TerminateInstances": {
            "Description": "Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.",
            "Type": "boolean",
            "Required": true
        }
    },
    "cancel_spot_instance_requests": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SpotInstanceRequestIds": {
            "Description": "One or more Spot Instance request IDs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "confirm_product_instance": {
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "ProductCode": {
            "Description": "The product code. This must be a product code that you own.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "copy_fpga_image": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SourceFpgaImageId": {
            "Description": "The ID of the source AFI.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description for the new AFI.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "The name for the new AFI. The default is the name of the source AFI.",
            "Type": "string",
            "Required": false
        },
        "SourceRegion": {
            "Description": "The Region that contains the source AFI.",
            "Type": "string",
            "Required": true
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring idempotency .",
            "Type": "string",
            "Required": false
        }
    },
    "copy_image": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see Ensuring idempotency in the Amazon EC2 API Reference .",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the new AMI in the destination Region.",
            "Type": "string",
            "Required": false
        },
        "Encrypted": {
            "Description": "Specifies whether the destination snapshots of the copied image should be encrypted. You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted copy of an encrypted snapshot. The default KMS key for Amazon EBS is used unless you specify a non-default Key Management Service (KMS) KMS key using KmsKeyId . For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The identifier of the symmetric Key Management Service (KMS) KMS key to use when creating encrypted volumes. If this parameter is not specified, your Amazon Web Services managed KMS key for Amazon EBS is used. If you specify a KMS key, you must also set the encrypted state to true .\nYou can specify a KMS key using any of the following:\nAmazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an identifier that is not valid, the action can appear to complete, but eventually fails.\nThe specified KMS key must exist in the destination Region.\nAmazon EBS does not support asymmetric KMS keys.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Name": {
            "Description": "The name of the new AMI in the destination Region.",
            "Type": "string",
            "Required": true
        },
        "SourceImageId": {
            "Description": "The ID of the AMI to copy.",
            "Type": "string",
            "Required": true
        },
        "SourceRegion": {
            "Description": "The name of the Region that contains the AMI to copy.",
            "Type": "string",
            "Required": true
        },
        "DestinationOutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost to which to copy the AMI. Only specify this parameter when copying an AMI from an Amazon Web Services Region to an Outpost. The AMI must be in the Region of the destination Outpost. You cannot copy an AMI from an Outpost to a Region, from one Outpost to another, or within the same Outpost.\nFor more information, see Copying AMIs from an Amazon Web Services Region to an Outpost in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "copy_snapshot": {
        "Description": {
            "Description": "A description for the EBS snapshot.",
            "Type": "string",
            "Required": false
        },
        "DestinationOutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost. The snapshot must be in the Region for the destination Outpost. You cannot copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.\nFor more information, see Copy snapshots from an Amazon Web Services Region to an Outpost in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false
        },
        "DestinationRegion": {
            "Description": "The destination Region to use in the PresignedUrl parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a PresignedUrl parameter, where it is required.\nThe snapshot copy is sent to the regional endpoint that you sent the HTTP request to (for example, ec2.us-east-1.amazonaws.com ). With the CLI, this is specified using the --region parameter or the default Region in your Amazon Web Services configuration file.",
            "Type": "string",
            "Required": false
        },
        "Encrypted": {
            "Description": "To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see Amazon EBS encryption in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the KMS key using any of the following:\nAmazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "PresignedUrl": {
            "Description": "When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a pre-signed URL. This parameter is optional for unencrypted snapshots. For more information, see Query requests .\nThe PresignedUrl should use the snapshot source endpoint, the CopySnapshot action, and include the SourceRegion, SourceSnapshotId, and DestinationRegion parameters. The PresignedUrl must be signed using Amazon Web Services Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4) in the Amazon Simple Storage Service API Reference. An invalid or improperly signed PresignedUrl will cause the copy operation to fail asynchronously, and the snapshot will move to an error state.",
            "Type": "string",
            "Required": false
        },
        "SourceRegion": {
            "Description": "The ID of the Region that contains the snapshot to be copied.",
            "Type": "string",
            "Required": true
        },
        "SourceSnapshotId": {
            "Description": "The ID of the EBS snapshot to copy.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the new snapshot.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_capacity_reservation": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensure Idempotency .",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type for which to reserve capacity. For more information, see Instance types in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": true
        },
        "InstancePlatform": {
            "Description": "The type of operating system for which to reserve capacity.",
            "Type": "string",
            "Required": true
        },
        "AvailabilityZone": {
            "Description": "The Availability Zone in which to create the Capacity Reservation.",
            "Type": "string",
            "Required": false
        },
        "AvailabilityZoneId": {
            "Description": "The ID of the Availability Zone in which to create the Capacity Reservation.",
            "Type": "string",
            "Required": false
        },
        "Tenancy": {
            "Description": "Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "InstanceCount": {
            "Description": "The number of instances for which to reserve capacity.\nValid range: 1 - 1000",
            "Type": "integer",
            "Required": true
        },
        "EbsOptimized": {
            "Description": "Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.",
            "Type": "boolean",
            "Required": false
        },
        "EphemeralStorage": {
            "Description": "Deprecated.",
            "Type": "boolean",
            "Required": false
        },
        "EndDate": {
            "Description": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.\nYou must provide an EndDate value if EndDateType is limited. Omit EndDate if EndDateType is unlimited .\nIf the EndDateType is limited, the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.",
            "Type": "datetime",
            "Required": false
        },
        "EndDateType": {
            "Description": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "InstanceMatchCriteria": {
            "Description": "Indicates the type of instance launches that the Capacity Reservation accepts. The options include:\nDefault: open",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the Capacity Reservation during launch.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "OutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.",
            "Type": "string",
            "Required": false
        },
        "PlacementGroupArn": {
            "Description": "The Amazon Resource Name (ARN) of the cluster placement group in which to create the Capacity Reservation. For more information, see Capacity Reservations for cluster placement groups in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "create_capacity_reservation_fleet": {
        "AllocationStrategy": {
            "Description": "The strategy used by the Capacity Reservation Fleet to determine which of the specified instance types to use. Currently, only the prioritized allocation strategy is supported. For more information, see Allocation strategy in the Amazon EC2 User Guide.\nValid values: prioritized",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensure Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "InstanceTypeSpecifications": {
            "Description": "Information about the instance types for which to reserve the capacity.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Tenancy": {
            "Description": "Indicates the tenancy of the Capacity Reservation Fleet. All Capacity Reservations in the Fleet inherit this tenancy. The Capacity Reservation Fleet can have one of the following tenancy settings:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TotalTargetCapacity": {
            "Description": "The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see Total target capacity in the Amazon EC2 User Guide.",
            "Type": "integer",
            "Required": true
        },
        "EndDate": {
            "Description": "The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to expired and all of the Capacity Reservations in the Fleet expire.\nThe Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation Fleet is guaranteed to expire between 13:30:55 and 14:30:55 on 5/31/2019 .",
            "Type": "datetime",
            "Required": false
        },
        "InstanceMatchCriteria": {
            "Description": "Indicates the type of instance launches that the Capacity Reservation Fleet accepts. All Capacity Reservations in the Fleet inherit this instance matching criteria.\nCurrently, Capacity Reservation Fleets support open instance matching criteria only. This means that instances that have matching attributes (instance type, platform, and Availability Zone) run in the Capacity Reservations automatically. Instances do not need to explicitly target a Capacity Reservation Fleet to use its reserved capacity.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the Capacity Reservation Fleet. The tags are automatically assigned to the Capacity Reservations in the Fleet.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_carrier_gateway": {
        "VpcId": {
            "Description": "The ID of the VPC to associate with the carrier gateway.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to associate with the carrier gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_client_vpn_endpoint": {
        "ClientCidrBlock": {
            "Description": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.",
            "Type": "string",
            "Required": true
        },
        "ServerCertificateArn": {
            "Description": "The ARN of the server certificate. For more information, see the Certificate Manager User Guide .",
            "Type": "string",
            "Required": true
        },
        "AuthenticationOptions": {
            "Description": "Information about the authentication method to be used to authenticate clients.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ConnectionLogOptions": {
            "Description": "Information about the client connection logging options.\nIf you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:",
            "Type": "dict",
            "Required": true,
            "dict variables": [
                {},
                {}
            ]
        },
        "DnsServers": {
            "Description": "Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TransportProtocol": {
            "Description": "The transport protocol to be used by the VPN session.\nDefault value: udp",
            "Type": "string",
            "Required": false
        },
        "VpnPort": {
            "Description": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic.\nValid Values: 443 | 1194\nDefault Value: 443",
            "Type": "integer",
            "Required": false
        },
        "Description": {
            "Description": "A brief description of the Client VPN endpoint.",
            "Type": "string",
            "Required": false
        },
        "SplitTunnel": {
            "Description": "Indicates whether split-tunnel is enabled on the Client VPN endpoint.\nBy default, split-tunnel on a VPN endpoint is disabled.\nFor information about split-tunnel VPN endpoints, see Split-tunnel Client VPN endpoint in the Client VPN Administrator Guide .",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the Client VPN endpoint during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroupIds": {
            "Description": "The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "VpcId": {
            "Description": "The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.",
            "Type": "string",
            "Required": false
        },
        "SelfServicePortal": {
            "Description": "Specify whether to enable the self-service portal for the Client VPN endpoint.\nDefault Value: enabled",
            "Type": "string",
            "Required": false
        },
        "ClientConnectOptions": {
            "Description": "The options for managing connection authorization for new client connections.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SessionTimeoutHours": {
            "Description": "The maximum VPN session duration time in hours.\nValid values: 8 | 10 | 12 | 24\nDefault value: 24",
            "Type": "integer",
            "Required": false
        },
        "ClientLoginBannerOptions": {
            "Description": "Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_client_vpn_route": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint to which to add the route.",
            "Type": "string",
            "Required": true
        },
        "DestinationCidrBlock": {
            "Description": "The IPv4 address range, in CIDR notation, of the route destination. For example:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "TargetVpcSubnetId": {
            "Description": "The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.\nAlternatively, if you're adding a route for the local network, specify local .",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A brief description of the route.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_customer_gateway": {
        "BgpAsn": {
            "Description": "For devices that support BGP, the customer gateway's BGP ASN.\nDefault: 65000",
            "Type": "integer",
            "Required": true
        },
        "PublicIp": {
            "Description": "This member has been deprecated. The Internet-routable IP address for the customer gateway's outside interface. The address must be static.",
            "Type": "string",
            "Required": false
        },
        "CertificateArn": {
            "Description": "The Amazon Resource Name (ARN) for the customer gateway certificate.",
            "Type": "string",
            "Required": false
        },
        "Type": {
            "Description": "The type of VPN connection that this customer gateway supports (ipsec.1 ).",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the customer gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DeviceName": {
            "Description": "A name for the customer gateway device.\nLength Constraints: Up to 255 characters.",
            "Type": "string",
            "Required": false
        },
        "IpAddress": {
            "Description": "IPv4 address for the customer gateway device's outside interface. The address must be static.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_default_subnet": {
        "AvailabilityZone": {
            "Description": "The Availability Zone in which to create the default subnet.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Ipv6Native": {
            "Description": "Indicates whether to create an IPv6 only subnet. If you already have a default subnet for this Availability Zone, you must delete it before you can create an IPv6 only subnet.",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_default_vpc": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_dhcp_options": {
        "DhcpConfigurations": {
            "Description": "A DHCP configuration option.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the DHCP option.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_egress_only_internet_gateway": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC for which to create the egress-only internet gateway.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the egress-only internet gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_fleet": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring idempotency .",
            "Type": "string",
            "Required": false
        },
        "SpotOptions": {
            "Description": "Describes the configuration of Spot Instances in an EC2 Fleet.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "OnDemandOptions": {
            "Description": "Describes the configuration of On-Demand Instances in an EC2 Fleet.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ExcessCapacityTerminationPolicy": {
            "Description": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateConfigs": {
            "Description": "The configuration for the EC2 Fleet.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TargetCapacitySpecification": {
            "Description": "The number of units to request.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "TerminateInstancesWithExpiration": {
            "Description": "Indicates whether running instances should be terminated when the EC2 Fleet expires.",
            "Type": "boolean",
            "Required": false
        },
        "Type": {
            "Description": "The fleet type. The default value is maintain .\nFor more information, see EC2 Fleet request types in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "ValidFrom": {
            "Description": "The start date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). The default is to start fulfilling the request immediately.",
            "Type": "datetime",
            "Required": false
        },
        "ValidUntil": {
            "Description": "The end date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.",
            "Type": "datetime",
            "Required": false
        },
        "ReplaceUnhealthyInstances": {
            "Description": "Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type maintain . For more information, see EC2 Fleet health checks in the Amazon EC2 User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The key-value pair for tagging the EC2 Fleet request on creation. For more information, see Tagging your resources .\nIf the fleet type is instant, specify a resource type of fleet to tag the fleet or instance to tag the instances at launch.\nIf the fleet type is maintain or request, specify a resource type of fleet to tag the fleet. You cannot specify a resource type of instance. To tag instances at launch, specify the tags in a launch template .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Context": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        }
    },
    "create_flow_logs": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .",
            "Type": "string",
            "Required": false
        },
        "DeliverLogsPermissionArn": {
            "Description": "The ARN of the IAM role that allows Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.\nThis parameter is required if the destination type is cloud-watch-logs and unsupported otherwise.",
            "Type": "string",
            "Required": false
        },
        "DeliverCrossAccountRole": {
            "Description": "The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.",
            "Type": "string",
            "Required": false
        },
        "LogGroupName": {
            "Description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.\nThis parameter is valid only if the destination type is cloud-watch-logs .",
            "Type": "string",
            "Required": false
        },
        "ResourceIds": {
            "Description": "The IDs of the resources to monitor. For example, if the resource type is VPC, specify the IDs of the VPCs.\nConstraints: Maximum of 1000 resources",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ResourceType": {
            "Description": "The type of resource to monitor.",
            "Type": "string",
            "Required": true
        },
        "TrafficType": {
            "Description": "The type of traffic to monitor (accepted traffic, rejected traffic, or all traffic).",
            "Type": "string",
            "Required": false
        },
        "LogDestinationType": {
            "Description": "The type of destination for the flow log data.\nDefault: cloud-watch-logs",
            "Type": "string",
            "Required": false
        },
        "LogDestination": {
            "Description": "The destination for the flow log data. The meaning of this parameter depends on the destination type.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "LogFormat": {
            "Description": "The fields to include in the flow log record. List the fields in the order in which they should appear. For more information about the available fields, see Flow log records. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must include at least one field.\nSpecify the fields using the ${field-id} format, separated by spaces. For the CLI, surround this parameter value with single quotes on Linux or double quotes on Windows.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the flow logs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxAggregationInterval": {
            "Description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\nWhen a network interface is attached to a Nitro-based instance, the aggregation interval is always 60 seconds or less, regardless of the value that you specify.\nDefault: 600",
            "Type": "integer",
            "Required": false
        },
        "DestinationOptions": {
            "Description": "The destination options.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_fpga_image": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InputStorageLocation": {
            "Description": "The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "LogsStorageLocation": {
            "Description": "The location in Amazon S3 for the output logs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Description": {
            "Description": "A description for the AFI.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "A name for the AFI.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the FPGA image during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_image": {
        "BlockDeviceMappings": {
            "Description": "The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the  CopyImage action.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Description": {
            "Description": "A description for the new image.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Name": {
            "Description": "A name for the new image.\nConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)",
            "Type": "string",
            "Required": true
        },
        "NoReboot": {
            "Description": "By default, when Amazon EC2 creates the new AMI, it reboots the instance so that it can take snapshots of the attached volumes while data is at rest, in order to ensure a consistent state. You can set the NoReboot parameter to true in the API request, or use the --no-reboot option in the CLI to prevent Amazon EC2 from shutting down and rebooting the instance.\nDefault: false (follow standard reboot process)",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the AMI and snapshots on creation. You can tag the AMI, the snapshots, or both.\nIf you specify other values for ResourceType, the request fails.\nTo tag an AMI or snapshot after it has been created, see CreateTags .",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "create_instance_event_window": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Name": {
            "Description": "The name of the event window.",
            "Type": "string",
            "Required": false
        },
        "TimeRanges": {
            "Description": "The time range for the event window. If you specify a time range, you can't specify a cron expression.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "CronExpression": {
            "Description": "The cron expression for the event window, for example, * 0-4,20-23 * * 1,5. If you specify a cron expression, you can't specify a time range.\nConstraints:\nFor more information about cron expressions, see cron on the Wikipedia website .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the event window.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_instance_export_task": {
        "Description": {
            "Description": "A description for the conversion task or the resource being exported. The maximum length is 255 characters.",
            "Type": "string",
            "Required": false
        },
        "ExportToS3Task": {
            "Description": "The format and location for an export instance task.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "TargetEnvironment": {
            "Description": "The target virtualization environment.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the export instance task during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_internet_gateway": {
        "TagSpecifications": {
            "Description": "The tags to assign to the internet gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_ipam": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Description": {
            "Description": "A description for the IPAM.",
            "Type": "string",
            "Required": false
        },
        "OperatingRegions": {
            "Description": "The operating Regions for the IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.\nFor more information about operating Regions, see Create an IPAM in the Amazon VPC IPAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_ipam_pool": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamScopeId": {
            "Description": "The ID of the scope in which you would like to create the IPAM pool.",
            "Type": "string",
            "Required": true
        },
        "Locale": {
            "Description": "In IPAM, the locale is the Amazon Web Services Region where you want to make an IPAM pool available for allocations. Only resources in the same Region as the locale of the pool can get IP address allocations from the pool. You can only allocate a CIDR for a VPC, for example, from an IPAM pool that shares a locale with the VPC\u2019s Region. Note that once you choose a Locale for a pool, you cannot modify it. If you do not choose a locale, resources in Regions others than the IPAM's home region cannot use CIDRs from this pool.\nPossible values: Any Amazon Web Services Region, such as us-east-1.",
            "Type": "string",
            "Required": false
        },
        "SourceIpamPoolId": {
            "Description": "The ID of the source IPAM pool. Use this option to create a pool within an existing pool. Note that the CIDR you provision for the pool within the source pool must be available in the source pool's CIDR range.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description for the IPAM pool.",
            "Type": "string",
            "Required": false
        },
        "AddressFamily": {
            "Description": "The IP protocol assigned to this IPAM pool. You must choose either IPv4 or IPv6 protocol for a pool.",
            "Type": "string",
            "Required": true
        },
        "AutoImport": {
            "Description": "If selected, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\nA locale must be set on the pool for this feature to work.",
            "Type": "boolean",
            "Required": false
        },
        "PubliclyAdvertisable": {
            "Description": "Determines if the pool is publicly advertisable. This option is not available for pools with AddressFamily set to ipv4 .",
            "Type": "boolean",
            "Required": false
        },
        "AllocationMinNetmaskLength": {
            "Description": "The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. The minimum netmask length must be less than the maximum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "Type": "integer",
            "Required": false
        },
        "AllocationMaxNetmaskLength": {
            "Description": "The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. The maximum netmask length must be greater than the minimum netmask length. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.",
            "Type": "integer",
            "Required": false
        },
        "AllocationDefaultNetmaskLength": {
            "Description": "The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.",
            "Type": "integer",
            "Required": false
        },
        "AllocationResourceTags": {
            "Description": "Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "AwsService": {
            "Description": "Limits which service in Amazon Web Services that the pool can be used in. \"ec2\", for example, allows users to use space for Elastic IP addresses and VPCs.",
            "Type": "string",
            "Required": false
        }
    },
    "create_ipam_scope": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamId": {
            "Description": "The ID of the IPAM for which you're creating this scope.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description for the scope you're creating.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_key_pair": {
        "KeyName": {
            "Description": "A unique name for the key pair.\nConstraints: Up to 255 ASCII characters",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "KeyType": {
            "Description": "The type of key pair. Note that ED25519 keys are not supported for Windows instances.\nDefault: rsa",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the new key pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "KeyFormat": {
            "Description": "The format of the key pair.\nDefault: pem",
            "Type": "string",
            "Required": false
        }
    },
    "create_launch_template": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring idempotency .\nConstraint: Maximum 128 ASCII characters.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateName": {
            "Description": "A name for the launch template.",
            "Type": "string",
            "Required": true
        },
        "VersionDescription": {
            "Description": "A description for the first version of the launch template.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateData": {
            "Description": "The information for the launch template.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the launch template on creation. To tag the launch template, the resource type must be launch-template .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_launch_template_version": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring idempotency .\nConstraint: Maximum 128 ASCII characters.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateId": {
            "Description": "The ID of the launch template.\nYou must specify either the LaunchTemplateId or the LaunchTemplateName, but not both.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateName": {
            "Description": "The name of the launch template.\nYou must specify the LaunchTemplateName or the LaunchTemplateId, but not both.",
            "Type": "string",
            "Required": false
        },
        "SourceVersion": {
            "Description": "The version number of the launch template version on which to base the new version. The new version inherits the same launch parameters as the source version, except for parameters that you specify in LaunchTemplateData . Snapshots applied to the block device mapping are ignored when creating a new version unless they are explicitly included.",
            "Type": "string",
            "Required": false
        },
        "VersionDescription": {
            "Description": "A description for the version of the launch template.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateData": {
            "Description": "The information for the launch template.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "create_local_gateway_route": {
        "DestinationCidrBlock": {
            "Description": "The CIDR range used for destination matches. Routing decisions are based on the most specific match.",
            "Type": "string",
            "Required": true
        },
        "LocalGatewayRouteTableId": {
            "Description": "The ID of the local gateway route table.",
            "Type": "string",
            "Required": true
        },
        "LocalGatewayVirtualInterfaceGroupId": {
            "Description": "The ID of the virtual interface group.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_local_gateway_route_table_vpc_association": {
        "LocalGatewayRouteTableId": {
            "Description": "The ID of the local gateway route table.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the local gateway route table VPC association.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_managed_prefix_list": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PrefixListName": {
            "Description": "A name for the prefix list.\nConstraints: Up to 255 characters in length. The name cannot start with com.amazonaws .",
            "Type": "string",
            "Required": true
        },
        "Entries": {
            "Description": "One or more entries for the prefix list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxEntries": {
            "Description": "The maximum number of entries for the prefix list.",
            "Type": "integer",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the prefix list during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AddressFamily": {
            "Description": "The IP address type.\nValid Values: IPv4 | IPv6",
            "Type": "string",
            "Required": true
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nConstraints: Up to 255 UTF-8 characters in length.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_nat_gateway": {
        "AllocationId": {
            "Description": "[Public NAT gateways only] The allocation ID of an Elastic IP address to associate with the NAT gateway. You cannot specify an Elastic IP address with a private NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nConstraint: Maximum 64 ASCII characters.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SubnetId": {
            "Description": "The subnet in which to create the NAT gateway.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the NAT gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ConnectivityType": {
            "Description": "Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.",
            "Type": "string",
            "Required": false
        }
    },
    "create_network_acl": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the network ACL.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_network_acl_entry": {
        "CidrBlock": {
            "Description": "The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ). We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18 , we modify it to 100.68.0.0/18 .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Egress": {
            "Description": "Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).",
            "Type": "boolean",
            "Required": true
        },
        "IcmpTypeCode": {
            "Description": "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Ipv6CidrBlock": {
            "Description": "The IPv6 network range to allow or deny, in CIDR notation (for example 2001:db8:1234:1a00::/64 ).",
            "Type": "string",
            "Required": false
        },
        "NetworkAclId": {
            "Description": "The ID of the network ACL.",
            "Type": "string",
            "Required": true
        },
        "PortRange": {
            "Description": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Protocol": {
            "Description": "The protocol number. A value of \"-1\" means all protocols. If you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP), or \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.",
            "Type": "string",
            "Required": true
        },
        "RuleAction": {
            "Description": "Indicates whether to allow or deny the traffic that matches the rule.",
            "Type": "string",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.\nConstraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.",
            "Type": "integer",
            "Required": true
        }
    },
    "create_network_insights_access_scope": {
        "MatchPaths": {
            "Description": "The paths to match.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ExcludePaths": {
            "Description": "The paths to exclude.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_network_insights_path": {
        "SourceIp": {
            "Description": "The IP address of the Amazon Web Services resource that is the source of the path.",
            "Type": "string",
            "Required": false
        },
        "DestinationIp": {
            "Description": "The IP address of the Amazon Web Services resource that is the destination of the path.",
            "Type": "string",
            "Required": false
        },
        "Source": {
            "Description": "The Amazon Web Services resource that is the source of the path.",
            "Type": "string",
            "Required": true
        },
        "Destination": {
            "Description": "The Amazon Web Services resource that is the destination of the path.",
            "Type": "string",
            "Required": true
        },
        "Protocol": {
            "Description": "The protocol.",
            "Type": "string",
            "Required": true
        },
        "DestinationPort": {
            "Description": "The destination port.",
            "Type": "integer",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to add to the path.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        }
    },
    "create_network_interface": {
        "Description": {
            "Description": "A description for the network interface.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Groups": {
            "Description": "The IDs of one or more security groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv6AddressCount": {
            "Description": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true , you can specify 0 to override this setting.",
            "Type": "integer",
            "Required": false
        },
        "Ipv6Addresses": {
            "Description": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PrivateIpAddress": {
            "Description": "The primary private IPv4 address of the network interface. If you don't specify an IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in privateIpAddresses as primary (only one IP address can be designated as primary).",
            "Type": "string",
            "Required": false
        },
        "PrivateIpAddresses": {
            "Description": "One or more private IPv4 addresses.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecondaryPrivateIpAddressCount": {
            "Description": "The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses .\nThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide .",
            "Type": "integer",
            "Required": false
        },
        "Ipv4Prefixes": {
            "Description": "One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the Ipv4PrefixCount option.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv4PrefixCount": {
            "Description": "The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the Ipv4 Prefixes option.",
            "Type": "integer",
            "Required": false
        },
        "Ipv6Prefixes": {
            "Description": "One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the Ipv6PrefixCount option.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv6PrefixCount": {
            "Description": "The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the Ipv6Prefixes option.",
            "Type": "integer",
            "Required": false
        },
        "InterfaceType": {
            "Description": "The type of network interface. The default is interface .\nThe only supported values are efa and trunk .",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the new network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_network_interface_permission": {
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        },
        "AwsAccountId": {
            "Description": "The Amazon Web Services account ID.",
            "Type": "string",
            "Required": false
        },
        "AwsService": {
            "Description": "The Amazon Web Service. Currently not supported.",
            "Type": "string",
            "Required": false
        },
        "Permission": {
            "Description": "The type of permission to grant.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_placement_group": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupName": {
            "Description": "A name for the placement group. Must be unique within the scope of your account for the Region.\nConstraints: Up to 255 ASCII characters",
            "Type": "string",
            "Required": false
        },
        "Strategy": {
            "Description": "The placement strategy.",
            "Type": "string",
            "Required": false
        },
        "PartitionCount": {
            "Description": "The number of partitions. Valid only when Strategy is set to partition .",
            "Type": "integer",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the new placement group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SpreadLevel": {
            "Description": "Determines how placement groups spread instances.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "create_public_ipv4_pool": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_replace_root_volume_task": {
        "InstanceId": {
            "Description": "The ID of the instance for which to replace the root volume.",
            "Type": "string",
            "Required": true
        },
        "SnapshotId": {
            "Description": "The ID of the snapshot from which to restore the replacement root volume. If you want to restore the volume to the initial launch state, omit this parameter.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency. For more information, see Ensuring idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the root volume replacement task.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_reserved_instances_listing": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency .",
            "Type": "string",
            "Required": true
        },
        "InstanceCount": {
            "Description": "The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.",
            "Type": "integer",
            "Required": true
        },
        "PriceSchedules": {
            "Description": "A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ReservedInstancesId": {
            "Description": "The ID of the active Standard Reserved Instance.",
            "Type": "string",
            "Required": true
        }
    },
    "create_restore_image_task": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket that contains the stored AMI object.",
            "Type": "string",
            "Required": true
        },
        "ObjectKey": {
            "Description": "The name of the stored AMI object in the bucket.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name for the restored AMI. The name must be unique for AMIs in the Region for this account. If you do not provide a name, the new AMI gets the same name as the original AMI.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the AMI and snapshots on restoration. You can tag the AMI, the snapshots, or both.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_route": {
        "DestinationCidrBlock": {
            "Description": "The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18 , we modify it to 100.68.0.0/18 .",
            "Type": "string",
            "Required": false
        },
        "DestinationIpv6CidrBlock": {
            "Description": "The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.",
            "Type": "string",
            "Required": false
        },
        "DestinationPrefixListId": {
            "Description": "The ID of a prefix list used for the destination match.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointId": {
            "Description": "The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.",
            "Type": "string",
            "Required": false
        },
        "EgressOnlyInternetGatewayId": {
            "Description": "[IPv6 traffic only] The ID of an egress-only internet gateway.",
            "Type": "string",
            "Required": false
        },
        "GatewayId": {
            "Description": "The ID of an internet gateway or virtual private gateway attached to your VPC.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.",
            "Type": "string",
            "Required": false
        },
        "NatGatewayId": {
            "Description": "[IPv4 traffic only] The ID of a NAT gateway.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayId": {
            "Description": "The ID of a transit gateway.",
            "Type": "string",
            "Required": false
        },
        "LocalGatewayId": {
            "Description": "The ID of the local gateway.",
            "Type": "string",
            "Required": false
        },
        "CarrierGatewayId": {
            "Description": "The ID of the carrier gateway.\nYou can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "The ID of a network interface.",
            "Type": "string",
            "Required": false
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of a VPC peering connection.",
            "Type": "string",
            "Required": false
        },
        "CoreNetworkArn": {
            "Description": "The Amazon Resource Name (ARN) of the core network.",
            "Type": "string",
            "Required": false
        }
    },
    "create_route_table": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the route table.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_security_group": {
        "Description": {
            "Description": "A description for the security group. This is informational only.\nConstraints: Up to 255 characters in length\nConstraints for EC2-Classic: ASCII characters\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*",
            "Type": "string",
            "Required": true
        },
        "GroupName": {
            "Description": "The name of the security group.\nConstraints: Up to 255 characters in length. Cannot start with sg- .\nConstraints for EC2-Classic: ASCII characters\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the security group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_snapshot": {
        "Description": {
            "Description": "A description for the snapshot.",
            "Type": "string",
            "Required": false
        },
        "OutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.\nFor more information, see Create local snapshots from volumes on an Outpost in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the snapshot during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_snapshots": {
        "Description": {
            "Description": "A description propagated to every snapshot specified by the instance.",
            "Type": "string",
            "Required": false
        },
        "InstanceSpecification": {
            "Description": "The instance to specify which volumes should be included in the snapshots.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "OutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost on which to create the local snapshots.\nFor more information, see Create multi-volume local snapshots from instances on an Outpost in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TagSpecifications": {
            "Description": "Tags to apply to every snapshot specified by the instance.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "CopyTagsFromSource": {
            "Description": "Copies the tags from the specified volume to corresponding snapshot.",
            "Type": "string",
            "Required": false
        }
    },
    "create_spot_datafeed_subscription": {
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket in which to store the Spot Instance data feed. For more information about bucket names, see Rules for bucket naming in the Amazon S3 Developer Guide .",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Prefix": {
            "Description": "The prefix for the data feed file names.",
            "Type": "string",
            "Required": false
        }
    },
    "create_store_image_task": {
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "Bucket": {
            "Description": "The name of the Amazon S3 bucket in which the AMI object will be stored. The bucket must be in the Region in which the request is being made. The AMI object appears in the bucket only after the upload task has completed.",
            "Type": "string",
            "Required": true
        },
        "S3ObjectTags": {
            "Description": "The tags to apply to the AMI object that will be stored in the Amazon S3 bucket.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_subnet": {
        "TagSpecifications": {
            "Description": "The tags to assign to the subnet.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AvailabilityZone": {
            "Description": "The Availability Zone or Local Zone for the subnet.\nDefault: Amazon Web Services selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet.\nTo create a subnet in a Local Zone, set this value to the Local Zone ID, for example us-west-2-lax-1a. For information about the Regions that support Local Zones, see Available Regions in the Amazon Elastic Compute Cloud User Guide .\nTo create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.",
            "Type": "string",
            "Required": false
        },
        "AvailabilityZoneId": {
            "Description": "The AZ ID or the Local Zone ID of the subnet.",
            "Type": "string",
            "Required": false
        },
        "CidrBlock": {
            "Description": "The IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18 .\nThis parameter is not supported for an IPv6 only subnet.",
            "Type": "string",
            "Required": false
        },
        "Ipv6CidrBlock": {
            "Description": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.\nThis parameter is required for an IPv6 only subnet.",
            "Type": "string",
            "Required": false
        },
        "OutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Ipv6Native": {
            "Description": "Indicates whether to create an IPv6 only subnet.",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_subnet_cidr_reservation": {
        "SubnetId": {
            "Description": "The ID of the subnet.",
            "Type": "string",
            "Required": true
        },
        "Cidr": {
            "Description": "The IPv4 or IPV6 CIDR range to reserve.",
            "Type": "string",
            "Required": true
        },
        "ReservationType": {
            "Description": "The type of reservation.\nThe following are valid values:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Description": {
            "Description": "The description to assign to the subnet CIDR reservation.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the subnet CIDR reservation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_tags": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Tags": {
            "Description": "The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_traffic_mirror_filter": {
        "Description": {
            "Description": "The description of the Traffic Mirror filter.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to a Traffic Mirror filter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_traffic_mirror_filter_rule": {
        "TrafficMirrorFilterId": {
            "Description": "The ID of the filter that this rule is associated with.",
            "Type": "string",
            "Required": true
        },
        "TrafficDirection": {
            "Description": "The type of traffic.",
            "Type": "string",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
            "Type": "integer",
            "Required": true
        },
        "RuleAction": {
            "Description": "The action to take on the filtered traffic.",
            "Type": "string",
            "Required": true
        },
        "DestinationPortRange": {
            "Description": "The destination port range.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SourcePortRange": {
            "Description": "The source port range.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Protocol": {
            "Description": "The protocol, for example UDP, to assign to the Traffic Mirror rule.\nFor information about the protocol value, see Protocol Numbers on the Internet Assigned Numbers Authority (IANA) website.",
            "Type": "integer",
            "Required": false
        },
        "DestinationCidrBlock": {
            "Description": "The destination CIDR block to assign to the Traffic Mirror rule.",
            "Type": "string",
            "Required": true
        },
        "SourceCidrBlock": {
            "Description": "The source CIDR block to assign to the Traffic Mirror rule.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the Traffic Mirror rule.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_traffic_mirror_session": {
        "NetworkInterfaceId": {
            "Description": "The ID of the source network interface.",
            "Type": "string",
            "Required": true
        },
        "TrafficMirrorTargetId": {
            "Description": "The ID of the Traffic Mirror target.",
            "Type": "string",
            "Required": true
        },
        "TrafficMirrorFilterId": {
            "Description": "The ID of the Traffic Mirror filter.",
            "Type": "string",
            "Required": true
        },
        "PacketLength": {
            "Description": "The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.\nIf you do not want to mirror the entire packet, use the PacketLength parameter to specify the number of bytes in each packet to mirror.",
            "Type": "integer",
            "Required": false
        },
        "SessionNumber": {
            "Description": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.\nValid values are 1-32766.",
            "Type": "integer",
            "Required": true
        },
        "VirtualNetworkId": {
            "Description": "The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see RFC 7348 . If you do not specify a VirtualNetworkId , an account-wide unique id is chosen at random.",
            "Type": "integer",
            "Required": false
        },
        "Description": {
            "Description": "The description of the Traffic Mirror session.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to a Traffic Mirror session.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_traffic_mirror_target": {
        "NetworkInterfaceId": {
            "Description": "The network interface ID that is associated with the target.",
            "Type": "string",
            "Required": false
        },
        "NetworkLoadBalancerArn": {
            "Description": "The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the Traffic Mirror target.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the Traffic Mirror target.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "GatewayLoadBalancerEndpointId": {
            "Description": "The ID of the Gateway Load Balancer endpoint.",
            "Type": "string",
            "Required": false
        }
    },
    "create_transit_gateway": {
        "Description": {
            "Description": "A description of the transit gateway.",
            "Type": "string",
            "Required": false
        },
        "Options": {
            "Description": "The transit gateway options.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the transit gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_connect": {
        "TransportTransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment. You can specify a VPC attachment or Amazon Web Services Direct Connect attachment.",
            "Type": "string",
            "Required": true
        },
        "Options": {
            "Description": "The Connect attachment options.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the Connect attachment.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_connect_peer": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the Connect attachment.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAddress": {
            "Description": "The peer IP address (GRE outer IP address) on the transit gateway side of the Connect peer, which must be specified from a transit gateway CIDR block. If not specified, Amazon automatically assigns the first available IP address from the transit gateway CIDR block.",
            "Type": "string",
            "Required": false
        },
        "PeerAddress": {
            "Description": "The peer IP address (GRE outer IP address) on the appliance side of the Connect peer.",
            "Type": "string",
            "Required": true
        },
        "BgpOptions": {
            "Description": "The BGP options for the Connect peer.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InsideCidrBlocks": {
            "Description": "The range of inside IP addresses that are used for BGP peering. You must specify a size /29 IPv4 CIDR block from the 169.254.0.0/16 range. The first address from the range must be configured on the appliance as the BGP IP address. You can also optionally specify a size /125 IPv6 CIDR block from the fd00::/8 range.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the Connect peer.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_multicast_domain": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": true
        },
        "Options": {
            "Description": "The options for the transit gateway multicast domain.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags for the transit gateway multicast domain.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_peering_attachment": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": true
        },
        "PeerTransitGatewayId": {
            "Description": "The ID of the peer transit gateway with which to create the peering attachment.",
            "Type": "string",
            "Required": true
        },
        "PeerAccountId": {
            "Description": "The ID of the Amazon Web Services account that owns the peer transit gateway.",
            "Type": "string",
            "Required": true
        },
        "PeerRegion": {
            "Description": "The Region where the peer transit gateway is located.",
            "Type": "string",
            "Required": true
        },
        "Options": {
            "Description": "Requests a transit gateway peering attachment.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the transit gateway peering attachment.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_policy_table": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway used for the policy table.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags specification for the transit gateway policy table created during the request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_prefix_list_reference": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list that is used for destination matches.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment to which traffic is routed.",
            "Type": "string",
            "Required": false
        },
        "Blackhole": {
            "Description": "Indicates whether to drop traffic that matches this route.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_route": {
        "DestinationCidrBlock": {
            "Description": "The CIDR range used for destination matches. Routing decisions are based on the most specific match.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": false
        },
        "Blackhole": {
            "Description": "Indicates whether to drop traffic that matches this route.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_route_table": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the transit gateway route table.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_route_table_announcement": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "PeeringAttachmentId": {
            "Description": "The ID of the peering attachment.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags specifications applied to the transit gateway route table announcement.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_transit_gateway_vpc_attachment": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "SubnetIds": {
            "Description": "The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Options": {
            "Description": "The VPC attachment options.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the VPC attachment.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_volume": {
        "AvailabilityZone": {
            "Description": "The Availability Zone in which to create the volume.",
            "Type": "string",
            "Required": true
        },
        "Encrypted": {
            "Description": "Indicates whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by default in the Amazon Elastic Compute Cloud User Guide .\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see Supported instance types .",
            "Type": "boolean",
            "Required": false
        },
        "Iops": {
            "Description": "The number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\nThe following are the supported values for each volume type:\nThis parameter is required for io1 and io2 volumes. The default for gp3 volumes is 3,000 IOPS. This parameter is not supported for gp2, st1, sc1, or standard volumes.",
            "Type": "integer",
            "Required": false,
            "integer variables": {}
        },
        "KmsKeyId": {
            "Description": "The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the KMS key using any of the following:\nAmazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "OutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost.",
            "Type": "string",
            "Required": false
        },
        "Size": {
            "Description": "The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.\nThe following are the supported volumes sizes for each volume type:",
            "Type": "integer",
            "Required": false,
            "integer variables": {}
        },
        "SnapshotId": {
            "Description": "The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.",
            "Type": "string",
            "Required": false
        },
        "VolumeType": {
            "Description": "The volume type. This parameter can be one of the following values:\nFor more information, see Amazon EBS volume types in the Amazon Elastic Compute Cloud User Guide .\nDefault: gp2",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the volume during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MultiAttachEnabled": {
            "Description": "Indicates whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 Instances built on the Nitro System in the same Availability Zone. This parameter is supported with io1 and io2 volumes only. For more information, see Amazon EBS Multi-Attach in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "Throughput": {
            "Description": "The throughput to provision for a volume, with a maximum of 1,000 MiB/s.\nThis parameter is valid only for gp3 volumes.\nValid Range: Minimum value of 125. Maximum value of 1000.",
            "Type": "integer",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensure Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_vpc": {
        "CidrBlock": {
            "Description": "The IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16 . We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18 , we modify it to 100.68.0.0/18 .",
            "Type": "string",
            "Required": false
        },
        "AmazonProvidedIpv6CidrBlock": {
            "Description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
            "Type": "boolean",
            "Required": false
        },
        "Ipv6Pool": {
            "Description": "The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.",
            "Type": "string",
            "Required": false
        },
        "Ipv6CidrBlock": {
            "Description": "The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.\nTo let Amazon choose the IPv6 CIDR block for you, omit this parameter.",
            "Type": "string",
            "Required": false
        },
        "Ipv4IpamPoolId": {
            "Description": "The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "string",
            "Required": false
        },
        "Ipv4NetmaskLength": {
            "Description": "The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "integer",
            "Required": false
        },
        "Ipv6IpamPoolId": {
            "Description": "The ID of an IPv6 IPAM pool which will be used to allocate this VPC an IPv6 CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization. For more information, see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "string",
            "Required": false
        },
        "Ipv6NetmaskLength": {
            "Description": "The netmask length of the IPv6 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see What is IPAM? in the Amazon VPC IPAM User Guide .",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceTenancy": {
            "Description": "The tenancy options for instances launched into the VPC. For default, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For dedicated, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of dedicated or host into a dedicated tenancy VPC.\nDefault: default",
            "Type": "string",
            "Required": false
        },
        "Ipv6CidrBlockNetworkBorderGroup": {
            "Description": "The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.\nYou must set AmazonProvidedIpv6CidrBlock to true to use this parameter.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the VPC.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_vpc_endpoint": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointType": {
            "Description": "The type of endpoint.\nDefault: Gateway",
            "Type": "string",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC in which the endpoint will be used.",
            "Type": "string",
            "Required": true
        },
        "ServiceName": {
            "Description": "The service name. To get a list of available services, use the  DescribeVpcEndpointServices request, or get the name from the service provider.",
            "Type": "string",
            "Required": true
        },
        "PolicyDocument": {
            "Description": "(Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.",
            "Type": "string",
            "Required": false
        },
        "RouteTableIds": {
            "Description": "(Gateway endpoint) One or more route table IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SubnetIds": {
            "Description": "(Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an endpoint network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroupIds": {
            "Description": "(Interface endpoint) The ID of one or more security groups to associate with the endpoint network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IpAddressType": {
            "Description": "The IP address type for the endpoint.",
            "Type": "string",
            "Required": false
        },
        "DnsOptions": {
            "Description": "The DNS options for the endpoint.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .",
            "Type": "string",
            "Required": false
        },
        "PrivateDnsEnabled": {
            "Description": "(Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, kinesis.us-east-1.amazonaws.com ), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\nTo use a private hosted zone, you must set the following VPC attributes to true : enableDnsHostnames and enableDnsSupport. Use  ModifyVpcAttribute to set the VPC attributes.\nDefault: true",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to associate with the endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_vpc_endpoint_connection_notification": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the endpoint service.",
            "Type": "string",
            "Required": false
        },
        "VpcEndpointId": {
            "Description": "The ID of the endpoint.",
            "Type": "string",
            "Required": false
        },
        "ConnectionNotificationArn": {
            "Description": "The ARN of the SNS topic for the notifications.",
            "Type": "string",
            "Required": true
        },
        "ConnectionEvents": {
            "Description": "One or more endpoint events for which to receive notifications. Valid values are Accept, Connect, Delete, and Reject .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .",
            "Type": "string",
            "Required": false
        }
    },
    "create_vpc_endpoint_service_configuration": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "AcceptanceRequired": {
            "Description": "Indicates whether requests from service consumers to create an endpoint to your service must be accepted manually.",
            "Type": "boolean",
            "Required": false
        },
        "PrivateDnsName": {
            "Description": "(Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.",
            "Type": "string",
            "Required": false
        },
        "NetworkLoadBalancerArns": {
            "Description": "The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "GatewayLoadBalancerArns": {
            "Description": "The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SupportedIpAddressTypes": {
            "Description": "The supported IP address types. The possible values are ipv4 and ipv6 .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to associate with the service.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_vpc_peering_connection": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PeerOwnerId": {
            "Description": "The Amazon Web Services account ID of the owner of the accepter VPC.\nDefault: Your Amazon Web Services account ID",
            "Type": "string",
            "Required": false
        },
        "PeerVpcId": {
            "Description": "The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.",
            "Type": "string",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the requester VPC. You must specify this parameter in the request.",
            "Type": "string",
            "Required": false
        },
        "PeerRegion": {
            "Description": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.\nDefault: The Region in which you make the request.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the peering connection.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_vpn_connection": {
        "CustomerGatewayId": {
            "Description": "The ID of the customer gateway.",
            "Type": "string",
            "Required": true
        },
        "Type": {
            "Description": "The type of VPN connection (ipsec.1 ).",
            "Type": "string",
            "Required": true
        },
        "VpnGatewayId": {
            "Description": "The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Options": {
            "Description": "The options for the VPN connection.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the VPN connection.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_vpn_connection_route": {
        "DestinationCidrBlock": {
            "Description": "The CIDR block associated with the local subnet of the customer network.",
            "Type": "string",
            "Required": true
        },
        "VpnConnectionId": {
            "Description": "The ID of the VPN connection.",
            "Type": "string",
            "Required": true
        }
    },
    "create_vpn_gateway": {
        "AvailabilityZone": {
            "Description": "The Availability Zone for the virtual private gateway.",
            "Type": "string",
            "Required": false
        },
        "Type": {
            "Description": "The type of VPN connection this virtual private gateway supports.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the virtual private gateway.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AmazonSideAsn": {
            "Description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you're using a 16-bit ASN, it must be in the 64512 to 65534 range. If you're using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.\nDefault: 64512",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_carrier_gateway": {
        "CarrierGatewayId": {
            "Description": "The ID of the carrier gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_client_vpn_endpoint": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN to be deleted.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_client_vpn_route": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint from which the route is to be deleted.",
            "Type": "string",
            "Required": true
        },
        "TargetVpcSubnetId": {
            "Description": "The ID of the target subnet used by the route.",
            "Type": "string",
            "Required": false
        },
        "DestinationCidrBlock": {
            "Description": "The IPv4 address range, in CIDR notation, of the route to be deleted.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_customer_gateway": {
        "CustomerGatewayId": {
            "Description": "The ID of the customer gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_dhcp_options": {
        "DhcpOptionsId": {
            "Description": "The ID of the DHCP options set.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_egress_only_internet_gateway": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EgressOnlyInternetGatewayId": {
            "Description": "The ID of the egress-only internet gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_fleets": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FleetIds": {
            "Description": "The IDs of the EC2 Fleets.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TerminateInstances": {
            "Description": "Indicates whether to terminate the instances when the EC2 Fleet is deleted. The default is to terminate the instances.\nTo let the instances continue to run after the EC2 Fleet is deleted, specify NoTerminateInstances. Supported only for fleets of type maintain and request .\nFor instant fleets, you cannot specify NoTerminateInstances. A deleted instant fleet with running instances is not supported.",
            "Type": "boolean",
            "Required": true
        }
    },
    "delete_flow_logs": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FlowLogIds": {
            "Description": "One or more flow log IDs.\nConstraint: Maximum of 1000 flow log IDs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_fpga_image": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FpgaImageId": {
            "Description": "The ID of the AFI.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_instance_event_window": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ForceDelete": {
            "Description": "Specify true to force delete the event window. Use the force delete parameter if the event window is currently associated with targets.",
            "Type": "boolean",
            "Required": false
        },
        "InstanceEventWindowId": {
            "Description": "The ID of the event window.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_internet_gateway": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InternetGatewayId": {
            "Description": "The ID of the internet gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_ipam": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamId": {
            "Description": "The ID of the IPAM to delete.",
            "Type": "string",
            "Required": true
        },
        "Cascade": {
            "Description": "Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes. You cannot delete the IPAM with this option if there is a pool in your public scope. If you use this option, IPAM does the following:",
            "Type": "boolean",
            "Required": false,
            "boolean variables": [
                {},
                {}
            ]
        }
    },
    "delete_ipam_pool": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the pool to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_ipam_scope": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamScopeId": {
            "Description": "The ID of the scope to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_key_pair": {
        "KeyName": {
            "Description": "The name of the key pair.",
            "Type": "string",
            "Required": false
        },
        "KeyPairId": {
            "Description": "The ID of the key pair.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_launch_template": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LaunchTemplateId": {
            "Description": "The ID of the launch template.\nYou must specify either the LaunchTemplateId or the LaunchTemplateName, but not both.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateName": {
            "Description": "The name of the launch template.\nYou must specify either the LaunchTemplateName or the LaunchTemplateId, but not both.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_launch_template_versions": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LaunchTemplateId": {
            "Description": "The ID of the launch template.\nYou must specify either the LaunchTemplateId or the LaunchTemplateName, but not both.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateName": {
            "Description": "The name of the launch template.\nYou must specify either the LaunchTemplateName or the LaunchTemplateId, but not both.",
            "Type": "string",
            "Required": false
        },
        "Versions": {
            "Description": "The version numbers of one or more launch template versions to delete.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_local_gateway_route": {
        "DestinationCidrBlock": {
            "Description": "The CIDR range for the route. This must match the CIDR for the route exactly.",
            "Type": "string",
            "Required": true
        },
        "LocalGatewayRouteTableId": {
            "Description": "The ID of the local gateway route table.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_local_gateway_route_table_vpc_association": {
        "LocalGatewayRouteTableVpcAssociationId": {
            "Description": "The ID of the association.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_managed_prefix_list": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_nat_gateway": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NatGatewayId": {
            "Description": "The ID of the NAT gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_acl": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkAclId": {
            "Description": "The ID of the network ACL.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_acl_entry": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Egress": {
            "Description": "Indicates whether the rule is an egress rule.",
            "Type": "boolean",
            "Required": true
        },
        "NetworkAclId": {
            "Description": "The ID of the network ACL.",
            "Type": "string",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The rule number of the entry to delete.",
            "Type": "integer",
            "Required": true
        }
    },
    "delete_network_insights_access_scope": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInsightsAccessScopeId": {
            "Description": "The ID of the Network Access Scope.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_insights_access_scope_analysis": {
        "NetworkInsightsAccessScopeAnalysisId": {
            "Description": "The ID of the Network Access Scope analysis.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_network_insights_analysis": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInsightsAnalysisId": {
            "Description": "The ID of the network insights analysis.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_insights_path": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInsightsPathId": {
            "Description": "The ID of the path.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_interface": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_network_interface_permission": {
        "NetworkInterfacePermissionId": {
            "Description": "The ID of the network interface permission.",
            "Type": "string",
            "Required": true
        },
        "Force": {
            "Description": "Specify true to remove the permission even if the network interface is attached to an instance.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_placement_group": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupName": {
            "Description": "The name of the placement group.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_public_ipv4_pool": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PoolId": {
            "Description": "The ID of the public IPv4 pool you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_queued_reserved_instances": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ReservedInstancesIds": {
            "Description": "The IDs of the Reserved Instances.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_route": {
        "DestinationCidrBlock": {
            "Description": "The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.",
            "Type": "string",
            "Required": false
        },
        "DestinationIpv6CidrBlock": {
            "Description": "The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.",
            "Type": "string",
            "Required": false
        },
        "DestinationPrefixListId": {
            "Description": "The ID of the prefix list for the route.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_route_table": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_security_group": {
        "GroupId": {
            "Description": "The ID of the security group. Required for a nondefault VPC.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_snapshot": {
        "SnapshotId": {
            "Description": "The ID of the EBS snapshot.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_spot_datafeed_subscription": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_subnet": {
        "SubnetId": {
            "Description": "The ID of the subnet.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_subnet_cidr_reservation": {
        "SubnetCidrReservationId": {
            "Description": "The ID of the subnet CIDR reservation.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_tags": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to delete. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.\nIf you omit this parameter, we delete all user-defined tags for the specified resources. We do not delete Amazon Web Services-generated tags (tags that have the aws: prefix).\nConstraints: Up to 1000 tags.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "delete_traffic_mirror_filter": {
        "TrafficMirrorFilterId": {
            "Description": "The ID of the Traffic Mirror filter.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_traffic_mirror_filter_rule": {
        "TrafficMirrorFilterRuleId": {
            "Description": "The ID of the Traffic Mirror rule.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_traffic_mirror_session": {
        "TrafficMirrorSessionId": {
            "Description": "The ID of the Traffic Mirror session.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_traffic_mirror_target": {
        "TrafficMirrorTargetId": {
            "Description": "The ID of the Traffic Mirror target.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_connect": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the Connect attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_connect_peer": {
        "TransitGatewayConnectPeerId": {
            "Description": "The ID of the Connect peer.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_multicast_domain": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_peering_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway peering attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_policy_table": {
        "TransitGatewayPolicyTableId": {
            "Description": "The transit gateway policy table to delete.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_prefix_list_reference": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_route": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "DestinationCidrBlock": {
            "Description": "The CIDR range for the route. This must match the CIDR for the route exactly.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_route_table": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_route_table_announcement": {
        "TransitGatewayRouteTableAnnouncementId": {
            "Description": "The transit gateway route table ID that's being deleted.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_transit_gateway_vpc_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_volume": {
        "VolumeId": {
            "Description": "The ID of the volume.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_vpc": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_vpc_endpoint_connection_notifications": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ConnectionNotificationIds": {
            "Description": "One or more notification IDs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_vpc_endpoint_service_configurations": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceIds": {
            "Description": "The IDs of one or more services.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_vpc_endpoints": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointIds": {
            "Description": "One or more VPC endpoint IDs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_vpc_peering_connection": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of the VPC peering connection.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_vpn_connection": {
        "VpnConnectionId": {
            "Description": "The ID of the VPN connection.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_vpn_connection_route": {
        "DestinationCidrBlock": {
            "Description": "The CIDR block associated with the local subnet of the customer network.",
            "Type": "string",
            "Required": true
        },
        "VpnConnectionId": {
            "Description": "The ID of the VPN connection.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_vpn_gateway": {
        "VpnGatewayId": {
            "Description": "The ID of the virtual private gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "deprovision_byoip_cidr": {
        "Cidr": {
            "Description": "The address range, in CIDR notation. The prefix must be the same prefix that you specified when you provisioned the address range.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "deprovision_ipam_pool_cidr": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the pool that has the CIDR you want to deprovision.",
            "Type": "string",
            "Required": true
        },
        "Cidr": {
            "Description": "The CIDR which you want to deprovision from the pool.",
            "Type": "string",
            "Required": false
        }
    },
    "deprovision_public_ipv4_pool_cidr": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PoolId": {
            "Description": "The ID of the pool that you want to deprovision the CIDR from.",
            "Type": "string",
            "Required": true
        },
        "Cidr": {
            "Description": "The CIDR you want to deprovision from the pool.",
            "Type": "string",
            "Required": true
        }
    },
    "deregister_image": {
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "deregister_instance_event_notification_attributes": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceTagAttribute": {
            "Description": "Information about the tag keys to deregister.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "deregister_transit_gateway_multicast_group_members": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "GroupIpAddress": {
            "Description": "The IP address assigned to the transit gateway multicast group.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceIds": {
            "Description": "The IDs of the group members' network interfaces.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "deregister_transit_gateway_multicast_group_sources": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "GroupIpAddress": {
            "Description": "The IP address assigned to the transit gateway multicast group.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceIds": {
            "Description": "The IDs of the group sources' network interfaces.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_account_attributes": {
        "AttributeNames": {
            "Description": "The account attribute names.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_addresses": {
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "PublicIps": {
            "Description": "One or more Elastic IP addresses.\nDefault: Describes all your Elastic IP addresses.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AllocationIds": {
            "Description": "[EC2-VPC] Information about the allocation IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_addresses_attribute": {
        "AllocationIds": {
            "Description": "[EC2-VPC] The allocation IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Attribute": {
            "Description": "The attribute of the IP address.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_aggregate_id_format": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_availability_zones": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ZoneNames": {
            "Description": "The names of the Availability Zones, Local Zones, and Wavelength Zones.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ZoneIds": {
            "Description": "The IDs of the Availability Zones, Local Zones, and Wavelength Zones.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AllAvailabilityZones": {
            "Description": "Include all Availability Zones, Local Zones, and Wavelength Zones regardless of your opt-in status.\nIf you do not use this parameter, the results include only the zones for the Regions where you have chosen the option to opt in.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_bundle_tasks": {
        "BundleIds": {
            "Description": "The bundle task IDs.\nDefault: Describes all your bundle tasks.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_byoip_cidrs": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": true
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_capacity_reservation_fleets": {
        "CapacityReservationFleetIds": {
            "Description": "The IDs of the Capacity Reservation Fleets to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_capacity_reservations": {
        "CapacityReservationIds": {
            "Description": "The ID of the Capacity Reservation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_carrier_gateways": {
        "CarrierGatewayIds": {
            "Description": "One or more carrier gateway IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_classic_link_instances": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceIds": {
            "Description": "One or more instance IDs. Must be instances linked to a VPC through ClassicLink.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.\nConstraint: If the value is greater than 1000, we return only 1000 items.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_client_vpn_authorization_rules": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_client_vpn_connections": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_client_vpn_endpoints": {
        "ClientVpnEndpointIds": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_client_vpn_routes": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_client_vpn_target_networks": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "AssociationIds": {
            "Description": "The IDs of the target network associations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_coip_pools": {
        "PoolIds": {
            "Description": "The IDs of the address pools.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_conversion_tasks": {
        "ConversionTaskIds": {
            "Description": "The conversion task IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_customer_gateways": {
        "CustomerGatewayIds": {
            "Description": "One or more customer gateway IDs.\nDefault: Describes all your customer gateways.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_dhcp_options": {
        "DhcpOptionsIds": {
            "Description": "The IDs of one or more DHCP options sets.\nDefault: Describes all your DHCP options sets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_egress_only_internet_gateways": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EgressOnlyInternetGatewayIds": {
            "Description": "One or more egress-only internet gateway IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "describe_elastic_gpus": {
        "ElasticGpuIds": {
            "Description": "The Elastic Graphics accelerator IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_export_image_tasks": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "Filter tasks using the task-state filter and one of the following values: active, completed, deleting, or deleted .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ExportImageTaskIds": {
            "Description": "The IDs of the export image tasks.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token that indicates the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_export_tasks": {
        "ExportTaskIds": {
            "Description": "The export task IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "the filters for the export tasks.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_fast_launch_images": {
        "ImageIds": {
            "Description": "Details for one or more Windows AMI image IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "Use the following filters to streamline results.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value. If this parameter is not specified, then all results are returned.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_fast_snapshot_restores": {
        "Filters": {
            "Description": "The filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_fleet_history": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EventType": {
            "Description": "The type of events to describe. By default, all events are described.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "FleetId": {
            "Description": "The ID of the EC2 Fleet.",
            "Type": "string",
            "Required": true
        },
        "StartTime": {
            "Description": "The start date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).",
            "Type": "datetime",
            "Required": true
        }
    },
    "describe_fleet_instances": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "FleetId": {
            "Description": "The ID of the EC2 Fleet.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "describe_fleets": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "FleetIds": {
            "Description": "The IDs of the EC2 Fleets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "describe_flow_logs": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "FlowLogIds": {
            "Description": "One or more flow log IDs.\nConstraint: Maximum of 1000 flow log IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_fpga_image_attribute": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FpgaImageId": {
            "Description": "The ID of the AFI.",
            "Type": "string",
            "Required": true
        },
        "Attribute": {
            "Description": "The AFI attribute.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_fpga_images": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FpgaImageIds": {
            "Description": "The AFI IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Owners": {
            "Description": "Filters the AFI by owner. Specify an Amazon Web Services account ID, self (owner is the sender of the request), or an Amazon Web Services owner alias (valid values are amazon | aws-marketplace ).",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_host_reservation_offerings": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxDuration": {
            "Description": "This is the maximum duration of the reservation to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.",
            "Type": "integer",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
            "Type": "integer",
            "Required": false
        },
        "MinDuration": {
            "Description": "This is the minimum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "OfferingId": {
            "Description": "The ID of the reservation offering.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_host_reservations": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "HostReservationIdSet": {
            "Description": "The host reservation IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_hosts": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "HostIds": {
            "Description": "The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.\nYou cannot specify this parameter and the host IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_iam_instance_profile_associations": {
        "AssociationIds": {
            "Description": "The IAM instance profile associations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_id_format": {
        "Resource": {
            "Description": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Type": "string",
            "Required": false
        }
    },
    "describe_identity_id_format": {
        "PrincipalArn": {
            "Description": "The ARN of the principal, which can be an IAM role, IAM user, or the root user.",
            "Type": "string",
            "Required": true
        },
        "Resource": {
            "Description": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Type": "string",
            "Required": false
        }
    },
    "describe_image_attribute": {
        "Attribute": {
            "Description": "The AMI attribute.",
            "Type": "string",
            "Required": true
        },
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_images": {
        "ExecutableUsers": {
            "Description": "Scopes the images by users with explicit launch permissions. Specify an Amazon Web Services account ID, self (the sender of the request), or all (public AMIs).",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ImageIds": {
            "Description": "The image IDs.\nDefault: Describes all images available to you.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Owners": {
            "Description": "Scopes the results to images with the specified owners. You can specify a combination of Amazon Web Services account IDs, self, amazon, and aws-marketplace. If you omit this parameter, the results include all images for which you have launch permissions, regardless of ownership.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IncludeDeprecated": {
            "Description": "If true, all deprecated AMIs are included in the response. If false, no deprecated AMIs are included in the response. If no value is specified, the default value is false .",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_import_image_tasks": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "Filter tasks using the task-state filter and one of the following values: active, completed, deleting, or deleted .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ImportTaskIds": {
            "Description": "The IDs of the import image tasks.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token that indicates the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_import_snapshot_tasks": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ImportTaskIds": {
            "Description": "A list of import snapshot task IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token that indicates the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_attribute": {
        "Attribute": {
            "Description": "The instance attribute.\nNote: The enaSupport attribute is not supported at this time.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_instance_credit_specifications": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "InstanceIds": {
            "Description": "The instance IDs.\nDefault: Describes all your instances.\nConstraints: Maximum 1000 explicitly specified instance IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_event_notification_attributes": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_instance_event_windows": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceEventWindowIds": {
            "Description": "The IDs of the event windows.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 20 and 500. You cannot specify this parameter and the event window IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_status": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "InstanceIds": {
            "Description": "The instance IDs.\nDefault: Describes all your instances.\nConstraints: Maximum 100 explicitly specified instance IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IncludeAllInstances": {
            "Description": "When true, includes the health status for all instances. When false, includes the health status for running instances only.\nDefault: false",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_instance_type_offerings": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LocationType": {
            "Description": "The location type.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_types": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceTypes": {
            "Description": "The instance types. For more information, see Instance types in the Amazon EC2 User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. Filter names and values are case-sensitive.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instances": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "InstanceIds": {
            "Description": "The instance IDs.\nDefault: Describes all your instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_internet_gateways": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InternetGatewayIds": {
            "Description": "One or more internet gateway IDs.\nDefault: Describes all your internet gateways.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_ipam_pools": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters for the request. For more information about filtering, see Filtering CLI output .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "IpamPoolIds": {
            "Description": "The IDs of the IPAM pools you would like information on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_ipam_scopes": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters for the request. For more information about filtering, see Filtering CLI output .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "IpamScopeIds": {
            "Description": "The IDs of the scopes you want information on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_ipams": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters for the request. For more information about filtering, see Filtering CLI output .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "IpamIds": {
            "Description": "The IDs of the IPAMs you want information on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_ipv6_pools": {
        "PoolIds": {
            "Description": "The IDs of the IPv6 address pools.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "describe_key_pairs": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "KeyNames": {
            "Description": "The key pair names.\nDefault: Describes all of your key pairs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "KeyPairIds": {
            "Description": "The IDs of the key pairs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IncludePublicKey": {
            "Description": "If true, the public key material is included in the response.\nDefault: false",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_launch_template_versions": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LaunchTemplateId": {
            "Description": "The ID of the launch template.\nTo describe one or more versions of a specified launch template, you must specify either the LaunchTemplateId or the LaunchTemplateName, but not both.\nTo describe all the latest or default launch template versions in your account, you must omit this parameter.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateName": {
            "Description": "The name of the launch template.\nTo describe one or more versions of a specified launch template, you must specify either the LaunchTemplateName or the LaunchTemplateId, but not both.\nTo describe all the latest or default launch template versions in your account, you must omit this parameter.",
            "Type": "string",
            "Required": false
        },
        "Versions": {
            "Description": "One or more versions of the launch template. Valid values depend on whether you are describing a specified launch template (by ID or name) or all launch templates in your account.\nTo describe one or more versions of a specified launch template, valid values are $Latest, $Default, and numbers.\nTo describe all launch templates in your account that are defined as the latest version, the valid value is $Latest. To describe all launch templates in your account that are defined as the default version, the valid value is $Default. You can specify $Latest and $Default in the same request. You cannot specify numbers.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MinVersion": {
            "Description": "The version number after which to describe launch template versions.",
            "Type": "string",
            "Required": false
        },
        "MaxVersion": {
            "Description": "The version number up to which to describe launch template versions.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "describe_launch_templates": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LaunchTemplateIds": {
            "Description": "One or more launch template IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "LaunchTemplateNames": {
            "Description": "One or more launch template names.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_local_gateway_route_table_virtual_interface_group_associations": {
        "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds": {
            "Description": "The IDs of the associations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_local_gateway_route_table_vpc_associations": {
        "LocalGatewayRouteTableVpcAssociationIds": {
            "Description": "The IDs of the associations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_local_gateway_route_tables": {
        "LocalGatewayRouteTableIds": {
            "Description": "The IDs of the local gateway route tables.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_local_gateway_virtual_interface_groups": {
        "LocalGatewayVirtualInterfaceGroupIds": {
            "Description": "The IDs of the virtual interface groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_local_gateway_virtual_interfaces": {
        "LocalGatewayVirtualInterfaceIds": {
            "Description": "The IDs of the virtual interfaces.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_local_gateways": {
        "LocalGatewayIds": {
            "Description": "The IDs of the local gateways.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_managed_prefix_lists": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "PrefixListIds": {
            "Description": "One or more prefix list IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_moving_addresses": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value outside of this range, an error is returned.\nDefault: If no value is provided, the default is 1000.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "PublicIps": {
            "Description": "One or more Elastic IP addresses.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_nat_gateways": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NatGatewayIds": {
            "Description": "One or more NAT gateway IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_network_acls": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkAclIds": {
            "Description": "One or more network ACL IDs.\nDefault: Describes all your network ACLs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_network_insights_access_scope_analyses": {
        "NetworkInsightsAccessScopeAnalysisIds": {
            "Description": "The IDs of the Network Access Scope analyses.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NetworkInsightsAccessScopeId": {
            "Description": "The ID of the Network Access Scope.",
            "Type": "string",
            "Required": false
        },
        "AnalysisStartTimeBegin": {
            "Description": "Filters the results based on the start time. The analysis must have started on or after this time.",
            "Type": "datetime",
            "Required": false
        },
        "AnalysisStartTimeEnd": {
            "Description": "Filters the results based on the start time. The analysis must have started on or before this time.",
            "Type": "datetime",
            "Required": false
        },
        "Filters": {
            "Description": "There are no supported filters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_network_insights_access_scopes": {
        "NetworkInsightsAccessScopeIds": {
            "Description": "The IDs of the Network Access Scopes.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "There are no supported filters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_network_insights_analyses": {
        "NetworkInsightsAnalysisIds": {
            "Description": "The ID of the network insights analyses. You must specify either analysis IDs or a path ID.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NetworkInsightsPathId": {
            "Description": "The ID of the path. You must specify either a path ID or analysis IDs.",
            "Type": "string",
            "Required": false
        },
        "AnalysisStartTime": {
            "Description": "The time when the network insights analyses started.",
            "Type": "datetime",
            "Required": false
        },
        "AnalysisEndTime": {
            "Description": "The time when the network insights analyses ended.",
            "Type": "datetime",
            "Required": false
        },
        "Filters": {
            "Description": "The filters. The following are the possible values:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_network_insights_paths": {
        "NetworkInsightsPathIds": {
            "Description": "The IDs of the paths.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters. The following are the possible values:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_network_interface_attribute": {
        "Attribute": {
            "Description": "The attribute of the network interface. This parameter is required.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_network_interface_permissions": {
        "NetworkInterfacePermissionIds": {
            "Description": "One or more network interface permission IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. If this parameter is not specified, up to 50 results are returned by default.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_network_interfaces": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInterfaceIds": {
            "Description": "One or more network interface IDs.\nDefault: Describes all your network interfaces.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results. You cannot specify this parameter and the network interface IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_placement_groups": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupNames": {
            "Description": "The names of the placement groups.\nDefault: Describes all your placement groups, or only those otherwise specified.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "GroupIds": {
            "Description": "The IDs of the placement groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_prefix_lists": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "PrefixListIds": {
            "Description": "One or more prefix list IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_principal_id_format": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Resources": {
            "Description": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_public_ipv4_pools": {
        "PoolIds": {
            "Description": "The IDs of the address pools.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "describe_regions": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "RegionNames": {
            "Description": "The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "AllRegions": {
            "Description": "Indicates whether to display all Regions, including Regions that are disabled for your account.",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_replace_root_volume_tasks": {
        "ReplaceRootVolumeTaskIds": {
            "Description": "The ID of the root volume replacement task to view.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "Filter to use:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_reserved_instances": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "OfferingClass": {
            "Description": "Describes whether the Reserved Instance is Standard or Convertible.",
            "Type": "string",
            "Required": false
        },
        "ReservedInstancesIds": {
            "Description": "One or more Reserved Instance IDs.\nDefault: Describes all your Reserved Instances, or only those otherwise specified.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "OfferingType": {
            "Description": "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the Medium Utilization Reserved Instance offering type.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reserved_instances_listings": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ReservedInstancesId": {
            "Description": "One or more Reserved Instance IDs.",
            "Type": "string",
            "Required": false
        },
        "ReservedInstancesListingId": {
            "Description": "One or more Reserved Instance listing IDs.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reserved_instances_modifications": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ReservedInstancesModificationIds": {
            "Description": "IDs for the submitted modification request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reserved_instances_offerings": {
        "AvailabilityZone": {
            "Description": "The Availability Zone in which the Reserved Instance can be used.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "IncludeMarketplace": {
            "Description": "Include Reserved Instance Marketplace offerings in the response.",
            "Type": "boolean",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type that the reservation will cover (for example, m1.small ). For more information, see Instance types in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false
        },
        "MaxDuration": {
            "Description": "The maximum duration (in seconds) to filter when searching for offerings.\nDefault: 94608000 (3 years)",
            "Type": "integer",
            "Required": false
        },
        "MaxInstanceCount": {
            "Description": "The maximum number of instances to filter when searching for offerings.\nDefault: 20",
            "Type": "integer",
            "Required": false
        },
        "MinDuration": {
            "Description": "The minimum duration (in seconds) to filter when searching for offerings.\nDefault: 2592000 (1 month)",
            "Type": "integer",
            "Required": false
        },
        "OfferingClass": {
            "Description": "The offering class of the Reserved Instance. Can be standard or convertible .",
            "Type": "string",
            "Required": false
        },
        "ProductDescription": {
            "Description": "The Reserved Instance product platform description. Instances that include (Amazon VPC) in the description are for use with Amazon VPC.",
            "Type": "string",
            "Required": false
        },
        "ReservedInstancesOfferingIds": {
            "Description": "One or more Reserved Instances offering IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceTenancy": {
            "Description": "The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of dedicated is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).\nDefault: default",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. The maximum is 100.\nDefault: 100",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "OfferingType": {
            "Description": "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the Medium Utilization Reserved Instance offering type.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_route_tables": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RouteTableIds": {
            "Description": "One or more route table IDs.\nDefault: Describes all your route tables.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_scheduled_instance_availability": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "FirstSlotStartTimeRange": {
            "Description": "The time period for the first schedule to start.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "MaxSlotDurationInHours": {
            "Description": "The maximum available duration, in hours. This value must be greater than MinSlotDurationInHours and less than 1,720.",
            "Type": "integer",
            "Required": false
        },
        "MinSlotDurationInHours": {
            "Description": "The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "Recurrence": {
            "Description": "The schedule recurrence.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "describe_scheduled_instances": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "ScheduledInstanceIds": {
            "Description": "The Scheduled Instance IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SlotStartTimeRange": {
            "Description": "The time period for the first schedule to start.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "describe_security_group_references": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupId": {
            "Description": "The IDs of the security groups in your account.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "describe_security_group_rules": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "SecurityGroupRuleIds": {
            "Description": "The IDs of the security group rules.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_security_groups": {
        "Filters": {
            "Description": "The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "GroupIds": {
            "Description": "The IDs of the security groups. Required for security groups in a nondefault VPC.\nDefault: Describes all of your security groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "GroupNames": {
            "Description": "[EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the group-name filter to describe security groups by name.\nDefault: Describes all of your security groups.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_snapshot_attribute": {
        "Attribute": {
            "Description": "The snapshot attribute you would like to view.",
            "Type": "string",
            "Required": true
        },
        "SnapshotId": {
            "Description": "The ID of the EBS snapshot.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_snapshot_tier_status": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_snapshots": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of snapshot results returned by DescribeSnapshots in paginated output. When this parameter is used, DescribeSnapshots only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeSnapshots request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then DescribeSnapshots returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The NextToken value returned from a previous paginated DescribeSnapshots request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "OwnerIds": {
            "Description": "Scopes the results to snapshots with the specified owners. You can specify a combination of Amazon Web Services account IDs, self, and amazon .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RestorableByUserIds": {
            "Description": "The IDs of the Amazon Web Services accounts that can create volumes from the snapshot.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SnapshotIds": {
            "Description": "The snapshot IDs.\nDefault: Describes the snapshots for which you have create volume permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_spot_datafeed_subscription": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_spot_fleet_instances": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "SpotFleetRequestId": {
            "Description": "The ID of the Spot Fleet request.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_spot_fleet_request_history": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EventType": {
            "Description": "The type of events to describe. By default, all events are described.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "SpotFleetRequestId": {
            "Description": "The ID of the Spot Fleet request.",
            "Type": "string",
            "Required": true
        },
        "StartTime": {
            "Description": "The starting date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).",
            "Type": "datetime",
            "Required": true
        }
    },
    "describe_spot_fleet_requests": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "SpotFleetRequestIds": {
            "Description": "The IDs of the Spot Fleet requests.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_spot_instance_requests": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SpotInstanceRequestIds": {
            "Description": "One or more Spot Instance request IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token to request the next set of results. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 5 and 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_spot_price_history": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "AvailabilityZone": {
            "Description": "Filters the results by the specified Availability Zone.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EndTime": {
            "Description": "The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).",
            "Type": "datetime",
            "Required": false
        },
        "InstanceTypes": {
            "Description": "Filters the results by the specified instance types.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        },
        "ProductDescriptions": {
            "Description": "Filters the results by the specified basic product descriptions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StartTime": {
            "Description": "The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).",
            "Type": "datetime",
            "Required": false
        }
    },
    "describe_stale_security_groups": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a prior call.)",
            "Type": "string",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_store_image_tasks": {
        "ImageIds": {
            "Description": "The AMI IDs for which to show progress. Up to 20 AMI IDs can be included in a request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200. You cannot specify this parameter and the ImageIDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_subnets": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "SubnetIds": {
            "Description": "One or more subnet IDs.\nDefault: Describes all your subnets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_tags": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_traffic_mirror_filters": {
        "TrafficMirrorFilterIds": {
            "Description": "The ID of the Traffic Mirror filter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_traffic_mirror_sessions": {
        "TrafficMirrorSessionIds": {
            "Description": "The ID of the Traffic Mirror session.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_traffic_mirror_targets": {
        "TrafficMirrorTargetIds": {
            "Description": "The ID of the Traffic Mirror targets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_transit_gateway_attachments": {
        "TransitGatewayAttachmentIds": {
            "Description": "The IDs of the attachments.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_connect_peers": {
        "TransitGatewayConnectPeerIds": {
            "Description": "The IDs of the Connect peers.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_connects": {
        "TransitGatewayAttachmentIds": {
            "Description": "The IDs of the attachments.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_multicast_domains": {
        "TransitGatewayMulticastDomainIds": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_peering_attachments": {
        "TransitGatewayAttachmentIds": {
            "Description": "One or more IDs of the transit gateway peering attachments.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_policy_tables": {
        "TransitGatewayPolicyTableIds": {
            "Description": "The IDs of the transit gateway policy tables.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters associated with the transit gateway policy table.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_route_table_announcements": {
        "TransitGatewayRouteTableAnnouncementIds": {
            "Description": "The IDs of the transit gateway route tables that are being advertised.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters associated with the transit gateway policy table.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_route_tables": {
        "TransitGatewayRouteTableIds": {
            "Description": "The IDs of the transit gateway route tables.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateway_vpc_attachments": {
        "TransitGatewayAttachmentIds": {
            "Description": "The IDs of the attachments.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_transit_gateways": {
        "TransitGatewayIds": {
            "Description": "The IDs of the transit gateways.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_trunk_interface_associations": {
        "AssociationIds": {
            "Description": "The IDs of the associations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_volume_attribute": {
        "Attribute": {
            "Description": "The attribute of the volume. This parameter is required.",
            "Type": "string",
            "Required": true
        },
        "VolumeId": {
            "Description": "The ID of the volume.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_volume_status": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of volume results returned by DescribeVolumeStatus in paginated output. When this parameter is used, the request only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then DescribeVolumeStatus returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The NextToken value to include in a future DescribeVolumeStatus request. When the results of the request exceed MaxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "VolumeIds": {
            "Description": "The IDs of the volumes.\nDefault: Describes all your volumes.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_volumes": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "VolumeIds": {
            "Description": "The volume IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of volume results returned by DescribeVolumes in paginated output. When this parameter is used, DescribeVolumes only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeVolumes request with the returned NextToken value. This value can be between 5 and 500; if MaxResults is given a value larger than 500, only 500 results are returned. If this parameter is not used, then DescribeVolumes returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The NextToken value returned from a previous paginated DescribeVolumes request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_volumes_modifications": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VolumeIds": {
            "Description": "The IDs of the volumes.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The nextToken value returned by a previous paginated request.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results (up to a limit of 500) to be returned in a paginated request.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_vpc_attribute": {
        "Attribute": {
            "Description": "The VPC attribute.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_vpc_classic_link": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcIds": {
            "Description": "One or more VPCs for which you want to describe the ClassicLink status.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_vpc_classic_link_dns_support": {
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "VpcIds": {
            "Description": "One or more VPC IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_vpc_endpoint_connection_notifications": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ConnectionNotificationId": {
            "Description": "The ID of the notification.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_vpc_endpoint_connections": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_vpc_endpoint_service_configurations": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceIds": {
            "Description": "The IDs of one or more services.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_vpc_endpoint_service_permissions": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the service.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_vpc_endpoint_services": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceNames": {
            "Description": "One or more service names.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.\nConstraint: If the value is greater than 1,000, we return only 1,000 items.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a prior call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_vpc_endpoints": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointIds": {
            "Description": "One or more endpoint IDs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.\nConstraint: If the value is greater than 1,000, we return only 1,000 items.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a prior call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_vpc_peering_connections": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcPeeringConnectionIds": {
            "Description": "One or more VPC peering connection IDs.\nDefault: Describes all your VPC peering connections.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_vpcs": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "VpcIds": {
            "Description": "One or more VPC IDs.\nDefault: Describes all your VPCs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_vpn_connections": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "VpnConnectionIds": {
            "Description": "One or more VPN connection IDs.\nDefault: Describes your VPN connections.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_vpn_gateways": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "VpnGatewayIds": {
            "Description": "One or more virtual private gateway IDs.\nDefault: Describes all your virtual private gateways.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "detach_classic_link_vpc": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC to which the instance is linked.",
            "Type": "string",
            "Required": true
        }
    },
    "detach_internet_gateway": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InternetGatewayId": {
            "Description": "The ID of the internet gateway.",
            "Type": "string",
            "Required": true
        }
    },
    "detach_network_interface": {
        "AttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Force": {
            "Description": "Specifies whether to force a detachment.",
            "Type": "boolean",
            "Required": false
        }
    },
    "detach_volume": {
        "Device": {
            "Description": "The device name.",
            "Type": "string",
            "Required": false
        },
        "Force": {
            "Description": "Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.",
            "Type": "boolean",
            "Required": false
        },
        "VolumeId": {
            "Description": "The ID of the volume.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "detach_vpn_gateway": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "VpnGatewayId": {
            "Description": "The ID of the virtual private gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_ebs_encryption_by_default": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_fast_launch": {
        "ImageId": {
            "Description": "The ID of the image for which you\u2019re turning off faster launching, and removing pre-provisioned snapshots.",
            "Type": "string",
            "Required": true
        },
        "Force": {
            "Description": "Forces the image settings to turn off faster launching for your Windows AMI. This parameter overrides any errors that are encountered while cleaning up resources in your account.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_fast_snapshot_restores": {
        "AvailabilityZones": {
            "Description": "One or more Availability Zones. For example, us-east-2a .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "SourceSnapshotIds": {
            "Description": "The IDs of one or more snapshots. For example, snap-1234567890abcdef0 .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_image_deprecation": {
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_ipam_organization_admin_account": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "DelegatedAdminAccountId": {
            "Description": "The Organizations member account ID that you want to disable as IPAM account.",
            "Type": "string",
            "Required": true
        }
    },
    "disable_serial_console_access": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_transit_gateway_route_table_propagation": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the propagation route table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TransitGatewayRouteTableAnnouncementId": {
            "Description": "The ID of the route table announcement.",
            "Type": "string",
            "Required": false
        }
    },
    "disable_vgw_route_propagation": {
        "GatewayId": {
            "Description": "The ID of the virtual private gateway.",
            "Type": "string",
            "Required": true
        },
        "RouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disable_vpc_classic_link": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "disable_vpc_classic_link_dns_support": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": false
        }
    },
    "disassociate_address": {
        "AssociationId": {
            "Description": "[EC2-VPC] The association ID. Required for EC2-VPC.",
            "Type": "string",
            "Required": false
        },
        "PublicIp": {
            "Description": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_client_vpn_target_network": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint from which to disassociate the target network.",
            "Type": "string",
            "Required": true
        },
        "AssociationId": {
            "Description": "The ID of the target network association.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_enclave_certificate_iam_role": {
        "CertificateArn": {
            "Description": "The ARN of the ACM certificate from which to disassociate the IAM role.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The ARN of the IAM role to disassociate.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_iam_instance_profile": {
        "AssociationId": {
            "Description": "The ID of the IAM instance profile association.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_instance_event_window": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceEventWindowId": {
            "Description": "The ID of the event window.",
            "Type": "string",
            "Required": true
        },
        "AssociationTarget": {
            "Description": "One or more targets to disassociate from the specified event window.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "disassociate_route_table": {
        "AssociationId": {
            "Description": "The association ID representing the current association between the route table and subnet or gateway.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_subnet_cidr_block": {
        "AssociationId": {
            "Description": "The association ID for the CIDR block.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_transit_gateway_multicast_domain": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "The IDs of the subnets;",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_transit_gateway_policy_table": {
        "TransitGatewayPolicyTableId": {
            "Description": "The ID of the disassociated policy table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment to disassociate from the policy table.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_transit_gateway_route_table": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_trunk_interface": {
        "AssociationId": {
            "Description": "The ID of the association",
            "Type": "string",
            "Required": true
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "disassociate_vpc_cidr_block": {
        "AssociationId": {
            "Description": "The association ID for the CIDR block.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_ebs_encryption_by_default": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_fast_launch": {
        "ImageId": {
            "Description": "The ID of the image for which you\u2019re enabling faster launching.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "The type of resource to use for pre-provisioning the Windows AMI for faster launching. Supported values include: snapshot , which is the default value.",
            "Type": "string",
            "Required": false
        },
        "SnapshotConfiguration": {
            "Description": "Configuration settings for creating and managing the snapshots that are used for pre-provisioning the Windows AMI for faster launching. The associated ResourceType must be snapshot .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LaunchTemplate": {
            "Description": "The launch template to use when launching Windows instances from pre-provisioned snapshots. Launch template parameters can include either the name or ID of the launch template, but not both.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MaxParallelLaunches": {
            "Description": "The maximum number of parallel instances to launch for creating resources. Value must be 6 or greater.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_fast_snapshot_restores": {
        "AvailabilityZones": {
            "Description": "One or more Availability Zones. For example, us-east-2a .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "SourceSnapshotIds": {
            "Description": "The IDs of one or more snapshots. For example, snap-1234567890abcdef0. You can specify a snapshot that was shared with you from another Amazon Web Services account.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_image_deprecation": {
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "DeprecateAt": {
            "Description": "The date and time to deprecate the AMI, in UTC, in the following format: YYYY -MM -DD T*HH* :MM :SS Z. If you specify a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.\nYou can\u2019t specify a date in the past. The upper limit for DeprecateAt is 10 years from now.",
            "Type": "datetime",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_ipam_organization_admin_account": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "DelegatedAdminAccountId": {
            "Description": "The Organizations member account ID that you want to enable as the IPAM account.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_serial_console_access": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_transit_gateway_route_table_propagation": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the propagation route table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TransitGatewayRouteTableAnnouncementId": {
            "Description": "The ID of the transit gateway route table announcement.",
            "Type": "string",
            "Required": false
        }
    },
    "enable_vgw_route_propagation": {
        "GatewayId": {
            "Description": "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
            "Type": "string",
            "Required": true
        },
        "RouteTableId": {
            "Description": "The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_volume_io": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VolumeId": {
            "Description": "The ID of the volume.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_vpc_classic_link": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_vpc_classic_link_dns_support": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": false
        }
    },
    "export_client_vpn_client_certificate_revocation_list": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "export_client_vpn_client_configuration": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "export_image": {
        "ClientToken": {
            "Description": "Token to enable idempotency for export image requests.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description of the image being exported. The maximum length is 255 characters.",
            "Type": "string",
            "Required": false
        },
        "DiskImageFormat": {
            "Description": "The disk image format.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ImageId": {
            "Description": "The ID of the image.",
            "Type": "string",
            "Required": true
        },
        "S3ExportLocation": {
            "Description": "The Amazon S3 bucket for the destination image. The destination bucket must exist.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "RoleName": {
            "Description": "The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket. If this parameter is not specified, the default role is named 'vmimport'.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the export image task during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "export_transit_gateway_routes": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "S3Bucket": {
            "Description": "The name of the S3 bucket.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_associated_enclave_certificate_iam_roles": {
        "CertificateArn": {
            "Description": "The ARN of the ACM certificate for which to view the associated IAM roles, encryption keys, and Amazon S3 object information.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_associated_ipv6_pool_cidrs": {
        "PoolId": {
            "Description": "The ID of the IPv6 address pool.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_capacity_reservation_usage": {
        "CapacityReservationId": {
            "Description": "The ID of the Capacity Reservation.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.\nValid range: Minimum value of 1. Maximum value of 1000.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_coip_pool_usage": {
        "PoolId": {
            "Description": "The ID of the address pool.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_console_output": {
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Latest": {
            "Description": "When enabled, retrieves the latest console output for the instance.\nDefault: disabled (false )",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_console_screenshot": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "WakeUp": {
            "Description": "When set to true , acts as keystroke input and wakes up an instance that's in standby or \"sleep\" mode.",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_default_credit_specification": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceFamily": {
            "Description": "The instance family.",
            "Type": "string",
            "Required": true
        }
    },
    "get_ebs_default_kms_key_id": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_ebs_encryption_by_default": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_flow_logs_integration_template": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FlowLogId": {
            "Description": "The ID of the flow log.",
            "Type": "string",
            "Required": true
        },
        "ConfigDeliveryS3DestinationArn": {
            "Description": "To store the CloudFormation template in Amazon S3, specify the location in Amazon S3.",
            "Type": "string",
            "Required": true
        },
        "IntegrateServices": {
            "Description": "Information about the service integration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "get_groups_for_capacity_reservation": {
        "CapacityReservationId": {
            "Description": "The ID of the Capacity Reservation.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token to use to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_host_reservation_purchase_preview": {
        "HostIdSet": {
            "Description": "The IDs of the Dedicated Hosts with which the reservation is associated.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "OfferingId": {
            "Description": "The offering ID of the reservation.",
            "Type": "string",
            "Required": true
        }
    },
    "get_instance_types_from_instance_requirements": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ArchitectureTypes": {
            "Description": "The processor architecture type.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "VirtualizationTypes": {
            "Description": "The virtualization type.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "InstanceRequirements": {
            "Description": "The attributes required for the instance types.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_instance_uefi_data": {
        "InstanceId": {
            "Description": "The ID of the instance from which to retrieve the UEFI data.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_ipam_address_history": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Cidr": {
            "Description": "The CIDR you want the history of. The CIDR can be an IPv4 or IPv6 IP address range. If you enter a /16 IPv4 CIDR, you will get records that match it exactly. You will not get records for any subnets within the /16 CIDR.",
            "Type": "string",
            "Required": true
        },
        "IpamScopeId": {
            "Description": "The ID of the IPAM scope that the CIDR is in.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The ID of the VPC you want your history records filtered by.",
            "Type": "string",
            "Required": false
        },
        "StartTime": {
            "Description": "The start of the time period for which you are looking for history. If you omit this option, it will default to the value of EndTime.",
            "Type": "datetime",
            "Required": false
        },
        "EndTime": {
            "Description": "The end of the time period for which you are looking for history. If you omit this option, it will default to the current time.",
            "Type": "datetime",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of historical results you would like returned per page. Defaults to 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_ipam_pool_allocations": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool you want to see the allocations for.",
            "Type": "string",
            "Required": true
        },
        "IpamPoolAllocationId": {
            "Description": "The ID of the allocation.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters for the request. For more information about filtering, see Filtering CLI output .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results you would like returned per page.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_ipam_pool_cidrs": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool you want the CIDR for.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters for the request. For more information about filtering, see Filtering CLI output .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_ipam_resource_cidrs": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters for the request. For more information about filtering, see Filtering CLI output .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "IpamScopeId": {
            "Description": "The ID of the scope that the resource is in.",
            "Type": "string",
            "Required": true
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool that the resource is in.",
            "Type": "string",
            "Required": false
        },
        "ResourceId": {
            "Description": "The ID of the resource.",
            "Type": "string",
            "Required": false
        },
        "ResourceType": {
            "Description": "The resource type.",
            "Type": "string",
            "Required": false
        },
        "ResourceTag": {
            "Description": "A tag on an IPAM resource.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ResourceOwner": {
            "Description": "The ID of the Amazon Web Services account that owns the resource.",
            "Type": "string",
            "Required": false
        }
    },
    "get_launch_template_data": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        }
    },
    "get_managed_prefix_list_associations": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_managed_prefix_list_entries": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        },
        "TargetVersion": {
            "Description": "The version of the prefix list for which to return the entries. The default is the current version.",
            "Type": "integer",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_network_insights_access_scope_analysis_findings": {
        "NetworkInsightsAccessScopeAnalysisId": {
            "Description": "The ID of the Network Access Scope analysis.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_network_insights_access_scope_content": {
        "NetworkInsightsAccessScopeId": {
            "Description": "The ID of the Network Access Scope.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_password_data": {
        "InstanceId": {
            "Description": "The ID of the Windows instance.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_reserved_instances_exchange_quote": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ReservedInstanceIds": {
            "Description": "The IDs of the Convertible Reserved Instances to exchange.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TargetConfigurations": {
            "Description": "The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "get_serial_console_access_status": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_spot_placement_scores": {
        "InstanceTypes": {
            "Description": "The instance types. We recommend that you specify at least three instance types. If you specify one or two instance types, or specify variations of a single instance type (for example, an m3.xlarge with and without instance storage), the returned placement score will always be low.\nIf you specify InstanceTypes, you can't specify InstanceRequirementsWithMetadata .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TargetCapacity": {
            "Description": "The target capacity.",
            "Type": "integer",
            "Required": true
        },
        "TargetCapacityUnitType": {
            "Description": "The unit for the target capacity.\nDefault: units (translates to number of instances)",
            "Type": "string",
            "Required": false
        },
        "SingleAvailabilityZone": {
            "Description": "Specify true so that the response returns a list of scored Availability Zones. Otherwise, the response returns a list of scored Regions.\nA list of scored Availability Zones is useful if you want to launch all of your Spot capacity into a single Availability Zone.",
            "Type": "boolean",
            "Required": false
        },
        "RegionNames": {
            "Description": "The Regions used to narrow down the list of Regions to be scored. Enter the Region code, for example, us-east-1 .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InstanceRequirementsWithMetadata": {
            "Description": "The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.\nIf you specify InstanceRequirementsWithMetadata, you can't specify InstanceTypes .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_subnet_cidr_reservations": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "SubnetId": {
            "Description": "The ID of the subnet.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_transit_gateway_attachment_propagations": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_transit_gateway_multicast_domain_associations": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_transit_gateway_policy_table_associations": {
        "TransitGatewayPolicyTableId": {
            "Description": "The ID of the transit gateway policy table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "The filters associated with the transit gateway policy table.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_transit_gateway_policy_table_entries": {
        "TransitGatewayPolicyTableId": {
            "Description": "The ID of the transit gateway policy table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "The filters associated with the transit gateway policy table.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_transit_gateway_prefix_list_references": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_transit_gateway_route_table_associations": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_transit_gateway_route_table_propagations": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_vpn_connection_device_sample_configuration": {
        "VpnConnectionId": {
            "Description": "The VpnConnectionId specifies the Site-to-Site VPN connection used for the sample configuration.",
            "Type": "string",
            "Required": true
        },
        "VpnConnectionDeviceTypeId": {
            "Description": "Device identifier provided by the GetVpnConnectionDeviceTypes API.",
            "Type": "string",
            "Required": true
        },
        "InternetKeyExchangeVersion": {
            "Description": "The IKE version to be used in the sample configuration file for your customer gateway device. You can specify one of the following versions: ikev1 or ikev2 .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_vpn_connection_device_types": {
        "MaxResults": {
            "Description": "The maximum number of results returned by GetVpnConnectionDeviceTypes in paginated output. When this parameter is used, GetVpnConnectionDeviceTypes only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another GetVpnConnectionDeviceTypes request with the returned NextToken value. This value can be between 200 and 1000. If this parameter is not used, then GetVpnConnectionDeviceTypes returns all results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The NextToken value returned from a previous paginated GetVpnConnectionDeviceTypes request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "import_client_vpn_client_certificate_revocation_list": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint to which the client certificate revocation list applies.",
            "Type": "string",
            "Required": true
        },
        "CertificateRevocationList": {
            "Description": "The client certificate revocation list file. For more information, see Generate a Client Certificate Revocation List in the Client VPN Administrator Guide .",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "import_image": {
        "Architecture": {
            "Description": "The architecture of the virtual machine.\nValid values: i386 | x86_64",
            "Type": "string",
            "Required": false
        },
        "ClientData": {
            "Description": "The client-specific data.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClientToken": {
            "Description": "The token to enable idempotency for VM import requests.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A description string for the import image task.",
            "Type": "string",
            "Required": false
        },
        "DiskContainers": {
            "Description": "Information about the disk containers.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Encrypted": {
            "Description": "Specifies whether the destination AMI of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using KmsKeyId . For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "Hypervisor": {
            "Description": "The target hypervisor platform.\nValid values: xen",
            "Type": "string",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "An identifier for the symmetric KMS key to use when creating the encrypted AMI. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.\nThe KMS key identifier may be provided in any of the following formats:\nAmazon Web Services parses KmsKeyId asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure.\nThe specified KMS key must exist in the Region that the AMI is being copied to.\nAmazon EBS does not support asymmetric KMS keys.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "LicenseType": {
            "Description": "The license type to be used for the Amazon Machine Image (AMI) after importing.\nBy default, we detect the source-system operating system (OS) and apply the appropriate license. Specify AWS to replace the source-system license with an Amazon Web Services license, if appropriate. Specify BYOL to retain the source-system license, if appropriate.\nTo use BYOL, you must have existing licenses with rights to use these licenses in a third party cloud, such as Amazon Web Services. For more information, see Prerequisites in the VM Import/Export User Guide.",
            "Type": "string",
            "Required": false
        },
        "Platform": {
            "Description": "The operating system of the virtual machine.\nValid values: Windows | Linux",
            "Type": "string",
            "Required": false
        },
        "RoleName": {
            "Description": "The name of the role to use when not using the default role, 'vmimport'.",
            "Type": "string",
            "Required": false
        },
        "LicenseSpecifications": {
            "Description": "The ARNs of the license configurations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the import image task during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "UsageOperation": {
            "Description": "The usage operation value. For more information, see Licensing options in the VM Import/Export User Guide .",
            "Type": "string",
            "Required": false
        },
        "BootMode": {
            "Description": "The boot mode of the virtual machine.",
            "Type": "string",
            "Required": false
        }
    },
    "import_instance": {
        "Description": {
            "Description": "A description for the instance being imported.",
            "Type": "string",
            "Required": false
        },
        "DiskImages": {
            "Description": "The disk image.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LaunchSpecification": {
            "Description": "The launch specification.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Platform": {
            "Description": "The instance operating system.",
            "Type": "string",
            "Required": true
        }
    },
    "import_key_pair": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "KeyName": {
            "Description": "A unique name for the key pair.",
            "Type": "string",
            "Required": true
        },
        "PublicKeyMaterial": {
            "Description": "The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.",
            "Type": "bytes",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the imported key pair.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "import_snapshot": {
        "ClientData": {
            "Description": "The client-specific data.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClientToken": {
            "Description": "Token to enable idempotency for VM import requests.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description string for the import snapshot task.",
            "Type": "string",
            "Required": false
        },
        "DiskContainer": {
            "Description": "Information about the disk container.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Encrypted": {
            "Description": "Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using KmsKeyId . For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.\nThe KMS key identifier may be provided in any of the following formats:\nAmazon Web Services parses KmsKeyId asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure.\nThe specified KMS key must exist in the Region that the snapshot is being copied to.\nAmazon EBS does not support asymmetric KMS keys.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "RoleName": {
            "Description": "The name of the role to use when not using the default role, 'vmimport'.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the import snapshot task during creation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "import_volume": {
        "AvailabilityZone": {
            "Description": "The Availability Zone for the resulting EBS volume.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A description of the volume.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Image": {
            "Description": "The disk image.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Volume": {
            "Description": "The volume size.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "list_images_in_recycle_bin": {
        "ImageIds": {
            "Description": "The IDs of the AMIs to list. Omit this parameter to list all of the AMIs that are in the Recycle Bin. You can specify up to 20 IDs in a single request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.\nIf you do not specify a value for MaxResults, the request returns 1,000 items per page by default. For more information, see Pagination .",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "list_snapshots_in_recycle_bin": {
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "SnapshotIds": {
            "Description": "The IDs of the snapshots to list. Omit this parameter to list all of the snapshots that are in the Recycle Bin.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_address_attribute": {
        "AllocationId": {
            "Description": "[EC2-VPC] The allocation ID.",
            "Type": "string",
            "Required": true
        },
        "DomainName": {
            "Description": "The domain name to modify for the IP address.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_availability_zone_group": {
        "GroupName": {
            "Description": "The name of the Availability Zone group, Local Zone group, or Wavelength Zone group.",
            "Type": "string",
            "Required": true
        },
        "OptInStatus": {
            "Description": "Indicates whether you are opted in to the Local Zone group or Wavelength Zone group. The only valid value is opted-in. You must contact Amazon Web Services Support to opt out of a Local Zone or Wavelength Zone group.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_capacity_reservation": {
        "CapacityReservationId": {
            "Description": "The ID of the Capacity Reservation.",
            "Type": "string",
            "Required": true
        },
        "InstanceCount": {
            "Description": "The number of instances for which to reserve capacity. The number of instances can't be increased or decreased by more than 1000 in a single request.",
            "Type": "integer",
            "Required": false
        },
        "EndDate": {
            "Description": "The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.\nThe Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\nYou must provide an EndDate value if EndDateType is limited. Omit EndDate if EndDateType is unlimited .",
            "Type": "datetime",
            "Required": false
        },
        "EndDateType": {
            "Description": "Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Accept": {
            "Description": "Reserved. Capacity Reservations you have created are accepted by default.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "AdditionalInfo": {
            "Description": "Reserved for future use.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_capacity_reservation_fleet": {
        "CapacityReservationFleetId": {
            "Description": "The ID of the Capacity Reservation Fleet to modify.",
            "Type": "string",
            "Required": true
        },
        "TotalTargetCapacity": {
            "Description": "The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see Total target capacity in the Amazon EC2 User Guide.",
            "Type": "integer",
            "Required": false
        },
        "EndDate": {
            "Description": "The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to expired and all of the Capacity Reservations in the Fleet expire.\nThe Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation Fleet is guaranteed to expire between 13:30:55 and 14:30:55 on 5/31/2019 .\nYou can't specify EndDate and RemoveEndDate in the same request.",
            "Type": "datetime",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RemoveEndDate": {
            "Description": "Indicates whether to remove the end date from the Capacity Reservation Fleet. If you remove the end date, the Capacity Reservation Fleet does not expire and it remains active until you explicitly cancel it using the CancelCapacityReservationFleet action.\nYou can't specify RemoveEndDate and EndDate in the same request.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_client_vpn_endpoint": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint to modify.",
            "Type": "string",
            "Required": true
        },
        "ServerCertificateArn": {
            "Description": "The ARN of the server certificate to be used. The server certificate must be provisioned in Certificate Manager (ACM).",
            "Type": "string",
            "Required": false
        },
        "ConnectionLogOptions": {
            "Description": "Information about the client connection logging options.\nIf you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        },
        "DnsServers": {
            "Description": "Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VpnPort": {
            "Description": "The port number to assign to the Client VPN endpoint for TCP and UDP traffic.\nValid Values: 443 | 1194\nDefault Value: 443",
            "Type": "integer",
            "Required": false
        },
        "Description": {
            "Description": "A brief description of the Client VPN endpoint.",
            "Type": "string",
            "Required": false
        },
        "SplitTunnel": {
            "Description": "Indicates whether the VPN is split-tunnel.\nFor information about split-tunnel VPN endpoints, see Split-tunnel Client VPN endpoint in the Client VPN Administrator Guide .",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SecurityGroupIds": {
            "Description": "The IDs of one or more security groups to apply to the target network.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "VpcId": {
            "Description": "The ID of the VPC to associate with the Client VPN endpoint.",
            "Type": "string",
            "Required": false
        },
        "SelfServicePortal": {
            "Description": "Specify whether to enable the self-service portal for the Client VPN endpoint.",
            "Type": "string",
            "Required": false
        },
        "ClientConnectOptions": {
            "Description": "The options for managing connection authorization for new client connections.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SessionTimeoutHours": {
            "Description": "The maximum VPN session duration time in hours.\nValid values: 8 | 10 | 12 | 24\nDefault value: 24",
            "Type": "integer",
            "Required": false
        },
        "ClientLoginBannerOptions": {
            "Description": "Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "modify_default_credit_specification": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceFamily": {
            "Description": "The instance family.",
            "Type": "string",
            "Required": true
        },
        "CpuCredits": {
            "Description": "The credit option for CPU usage of the instance family.\nValid Values: standard | unlimited",
            "Type": "string",
            "Required": true
        }
    },
    "modify_ebs_default_kms_key_id": {
        "KmsKeyId": {
            "Description": "The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the KMS key using any of the following:\nAmazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.\nAmazon EBS does not support asymmetric KMS keys.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_fleet": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ExcessCapacityTerminationPolicy": {
            "Description": "Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateConfigs": {
            "Description": "The launch template and overrides.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "FleetId": {
            "Description": "The ID of the EC2 Fleet.",
            "Type": "string",
            "Required": true
        },
        "TargetCapacitySpecification": {
            "Description": "The size of the EC2 Fleet.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Context": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_fpga_image_attribute": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FpgaImageId": {
            "Description": "The ID of the AFI.",
            "Type": "string",
            "Required": true
        },
        "Attribute": {
            "Description": "The name of the attribute.",
            "Type": "string",
            "Required": false
        },
        "OperationType": {
            "Description": "The operation type.",
            "Type": "string",
            "Required": false
        },
        "UserIds": {
            "Description": "The Amazon Web Services account IDs. This parameter is valid only when modifying the loadPermission attribute.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "UserGroups": {
            "Description": "The user groups. This parameter is valid only when modifying the loadPermission attribute.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ProductCodes": {
            "Description": "The product codes. After you add a product code to an AFI, it can't be removed. This parameter is valid only when modifying the productCodes attribute.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "LoadPermission": {
            "Description": "The load permission for the AFI.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Description": {
            "Description": "A description for the AFI.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "A name for the AFI.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_hosts": {
        "AutoPlacement": {
            "Description": "Specify whether to enable or disable auto-placement.",
            "Type": "string",
            "Required": false
        },
        "HostIds": {
            "Description": "The IDs of the Dedicated Hosts to modify.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "HostRecovery": {
            "Description": "Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see Host recovery in the Amazon EC2 User Guide .",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support only a specific instance type.\nIf you want to modify a Dedicated Host to support multiple instance types in its current instance family, omit this parameter and specify InstanceFamily instead. You cannot specify InstanceType and InstanceFamily in the same request.",
            "Type": "string",
            "Required": false
        },
        "InstanceFamily": {
            "Description": "Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.\nIf you want to modify a Dedicated Host to support a specific instance type only, omit this parameter and specify InstanceType instead. You cannot specify InstanceFamily and InstanceType in the same request.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_id_format": {
        "Resource": {
            "Description": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .\nAlternatively, use the all-current option to include all resource types that are currently within their opt-in period for longer IDs.",
            "Type": "string",
            "Required": true
        },
        "UseLongIds": {
            "Description": "Indicate whether the resource should use longer IDs (17-character IDs).",
            "Type": "boolean",
            "Required": true
        }
    },
    "modify_identity_id_format": {
        "PrincipalArn": {
            "Description": "The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify all to modify the ID format for all IAM users, IAM roles, and the root user of the account.",
            "Type": "string",
            "Required": true
        },
        "Resource": {
            "Description": "The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .\nAlternatively, use the all-current option to include all resource types that are currently within their opt-in period for longer IDs.",
            "Type": "string",
            "Required": true
        },
        "UseLongIds": {
            "Description": "Indicates whether the resource should use longer IDs (17-character IDs)",
            "Type": "boolean",
            "Required": true
        }
    },
    "modify_image_attribute": {
        "Attribute": {
            "Description": "The name of the attribute to modify.\nValid values: description | launchPermission",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A new description for the AMI.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "LaunchPermission": {
            "Description": "A new launch permission for the AMI.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "OperationType": {
            "Description": "The operation type. This parameter can be used only when the Attribute parameter is launchPermission .",
            "Type": "string",
            "Required": false
        },
        "ProductCodes": {
            "Description": "Not supported.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "UserGroups": {
            "Description": "The user groups. This parameter can be used only when the Attribute parameter is launchPermission .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "UserIds": {
            "Description": "The Amazon Web Services account IDs. This parameter can be used only when the Attribute parameter is launchPermission .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Value": {
            "Description": "The value of the attribute being modified. This parameter can be used only when the Attribute parameter is description .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "OrganizationArns": {
            "Description": "The Amazon Resource Name (ARN) of an organization. This parameter can be used only when the Attribute parameter is launchPermission .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "OrganizationalUnitArns": {
            "Description": "The Amazon Resource Name (ARN) of an organizational unit (OU). This parameter can be used only when the Attribute parameter is launchPermission .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_instance_attribute": {
        "SourceDestCheck": {
            "Description": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is true, source/destination checks are enabled; otherwise, they are disabled. The default value is true. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Attribute": {
            "Description": "The name of the attribute.",
            "Type": "string",
            "Required": false
        },
        "BlockDeviceMappings": {
            "Description": "Modifies the DeleteOnTermination attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for DeleteOnTermination, the default is true and the volume is deleted when the instance is terminated.\nTo add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see Update the block device mapping when launching an instance in the Amazon EC2 User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DisableApiTermination": {
            "Description": "If the value is true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EbsOptimized": {
            "Description": "Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnaSupport": {
            "Description": "Set to true to enable enhanced networking with ENA for the instance.\nThis option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Groups": {
            "Description": "[EC2-VPC] Replaces the security groups of the instance with the specified security groups. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "InstanceInitiatedShutdownBehavior": {
            "Description": "Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InstanceType": {
            "Description": "Changes the instance type to the specified value. For more information, see Instance types in the Amazon EC2 User Guide. If the instance type is not valid, the error returned is InvalidInstanceAttributeValue .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Kernel": {
            "Description": "Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Ramdisk": {
            "Description": "Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SriovNetSupport": {
            "Description": "Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.\nThere is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.\nThis option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "UserData": {
            "Description": "Changes the instance's user data to the specified value. If you are using an Amazon Web Services SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Value": {
            "Description": "A new value for the attribute. Use only with the kernel , ramdisk , userData , disableApiTermination , or instanceInitiatedShutdownBehavior attribute.",
            "Type": "string",
            "Required": false
        },
        "DisableApiStop": {
            "Description": "Indicates whether an instance is enabled for stop protection. For more information, see Stop Protection .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "modify_instance_capacity_reservation_attributes": {
        "InstanceId": {
            "Description": "The ID of the instance to be modified.",
            "Type": "string",
            "Required": true
        },
        "CapacityReservationSpecification": {
            "Description": "Information about the Capacity Reservation targeting option.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_instance_credit_specification": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see Ensuring Idempotency .",
            "Type": "string",
            "Required": false
        },
        "InstanceCreditSpecifications": {
            "Description": "Information about the credit option for CPU usage.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "modify_instance_event_start_time": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance with the scheduled event.",
            "Type": "string",
            "Required": true
        },
        "InstanceEventId": {
            "Description": "The ID of the event whose date and time you are modifying.",
            "Type": "string",
            "Required": true
        },
        "NotBefore": {
            "Description": "The new date and time when the event will take place.",
            "Type": "datetime",
            "Required": true
        }
    },
    "modify_instance_event_window": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Name": {
            "Description": "The name of the event window.",
            "Type": "string",
            "Required": false
        },
        "InstanceEventWindowId": {
            "Description": "The ID of the event window.",
            "Type": "string",
            "Required": true
        },
        "TimeRanges": {
            "Description": "The time ranges of the event window.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "CronExpression": {
            "Description": "The cron expression of the event window, for example, * 0-4,20-23 * * 1,5 .\nConstraints:\nFor more information about cron expressions, see cron on the Wikipedia website .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "modify_instance_maintenance_options": {
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "AutoRecovery": {
            "Description": "Disables the automatic recovery behavior of your instance or sets it to default.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_instance_metadata_options": {
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "HttpTokens": {
            "Description": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .\nIf the state is optional, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\nIf the state is required, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.",
            "Type": "string",
            "Required": false
        },
        "HttpPutResponseHopLimit": {
            "Description": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained.\nPossible values: Integers from 1 to 64",
            "Type": "integer",
            "Required": false
        },
        "HttpEndpoint": {
            "Description": "Enables or disables the HTTP metadata endpoint on your instances. If this parameter is not specified, the existing state is maintained.\nIf you specify a value of disabled, you cannot access your instance metadata.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "HttpProtocolIpv6": {
            "Description": "Enables or disables the IPv6 endpoint for the instance metadata service. This setting applies only if you have enabled the HTTP metadata endpoint.",
            "Type": "string",
            "Required": false
        },
        "InstanceMetadataTags": {
            "Description": "Set to enabled to allow access to instance tags from the instance metadata. Set to disabled to turn off access to instance tags from the instance metadata. For more information, see Work with instance tags using the instance metadata .\nDefault: disabled",
            "Type": "string",
            "Required": false
        }
    },
    "modify_instance_placement": {
        "Affinity": {
            "Description": "The affinity setting for the instance.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of default. For cluster and partition placement groups, the instance must have a tenancy of default or dedicated .\nTo remove an instance from a placement group, specify an empty string (\"\").",
            "Type": "string",
            "Required": false
        },
        "HostId": {
            "Description": "The ID of the Dedicated Host with which to associate the instance.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance that you are modifying.",
            "Type": "string",
            "Required": true
        },
        "Tenancy": {
            "Description": "The tenancy for the instance.",
            "Type": "string",
            "Required": false
        },
        "PartitionNumber": {
            "Description": "The number of the partition in which to place the instance. Valid only if the placement group strategy is set to partition .",
            "Type": "integer",
            "Required": false
        },
        "HostResourceGroupArn": {
            "Description": "The ARN of the host resource group in which to place the instance.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_ipam": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamId": {
            "Description": "The ID of the IPAM you want to modify.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the IPAM you want to modify.",
            "Type": "string",
            "Required": false
        },
        "AddOperatingRegions": {
            "Description": "Choose the operating Regions for the IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.\nFor more information about operating Regions, see Create an IPAM in the Amazon VPC IPAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveOperatingRegions": {
            "Description": "The operating Regions to remove.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_ipam_pool": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool you want to modify.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the IPAM pool you want to modify.",
            "Type": "string",
            "Required": false
        },
        "AutoImport": {
            "Description": "If true, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM. The CIDRs that will be allocated for these resources must not already be allocated to other resources in order for the import to succeed. IPAM will import a CIDR regardless of its compliance with the pool's allocation rules, so a resource might be imported and subsequently marked as noncompliant. If IPAM discovers multiple CIDRs that overlap, IPAM will import the largest CIDR only. If IPAM discovers multiple CIDRs with matching CIDRs, IPAM will randomly import one of them only.\nA locale must be set on the pool for this feature to work.",
            "Type": "boolean",
            "Required": false
        },
        "AllocationMinNetmaskLength": {
            "Description": "The minimum netmask length required for CIDR allocations in this IPAM pool to be compliant. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128. The minimum netmask length must be less than the maximum netmask length.",
            "Type": "integer",
            "Required": false
        },
        "AllocationMaxNetmaskLength": {
            "Description": "The maximum netmask length possible for CIDR allocations in this IPAM pool to be compliant. Possible netmask lengths for IPv4 addresses are 0 - 32. Possible netmask lengths for IPv6 addresses are 0 - 128.The maximum netmask length must be greater than the minimum netmask length.",
            "Type": "integer",
            "Required": false
        },
        "AllocationDefaultNetmaskLength": {
            "Description": "The default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.",
            "Type": "integer",
            "Required": false
        },
        "ClearAllocationDefaultNetmaskLength": {
            "Description": "Clear the default netmask length allocation rule for this pool.",
            "Type": "boolean",
            "Required": false
        },
        "AddAllocationResourceTags": {
            "Description": "Add tag allocation rules to a pool. For more information about allocation rules, see Create a top-level pool in the Amazon VPC IPAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveAllocationResourceTags": {
            "Description": "Remove tag allocation rules from a pool.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_ipam_resource_cidr": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ResourceId": {
            "Description": "The ID of the resource you want to modify.",
            "Type": "string",
            "Required": true
        },
        "ResourceCidr": {
            "Description": "The CIDR of the resource you want to modify.",
            "Type": "string",
            "Required": true
        },
        "ResourceRegion": {
            "Description": "The Amazon Web Services Region of the resource you want to modify.",
            "Type": "string",
            "Required": true
        },
        "CurrentIpamScopeId": {
            "Description": "The ID of the current scope that the resource CIDR is in.",
            "Type": "string",
            "Required": true
        },
        "DestinationIpamScopeId": {
            "Description": "The ID of the scope you want to transfer the resource CIDR to.",
            "Type": "string",
            "Required": false
        },
        "Monitored": {
            "Description": "Determines if the resource is monitored by IPAM. If a resource is monitored, the resource is discovered by IPAM and you can view details about the resource\u2019s CIDR.",
            "Type": "boolean",
            "Required": true
        }
    },
    "modify_ipam_scope": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamScopeId": {
            "Description": "The ID of the scope you want to modify.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the scope you want to modify.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_launch_template": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring idempotency .\nConstraint: Maximum 128 ASCII characters.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateId": {
            "Description": "The ID of the launch template.\nYou must specify either the LaunchTemplateId or the LaunchTemplateName, but not both.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateName": {
            "Description": "The name of the launch template.\nYou must specify either the LaunchTemplateName or the LaunchTemplateId, but not both.",
            "Type": "string",
            "Required": false
        },
        "DefaultVersion": {
            "Description": "The version number of the launch template to set as the default version.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_managed_prefix_list": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The current version of the prefix list.",
            "Type": "integer",
            "Required": false
        },
        "PrefixListName": {
            "Description": "A name for the prefix list.",
            "Type": "string",
            "Required": false
        },
        "AddEntries": {
            "Description": "One or more entries to add to the prefix list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveEntries": {
            "Description": "One or more entries to remove from the prefix list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxEntries": {
            "Description": "The maximum number of entries for the prefix list. You cannot modify the entries of a prefix list and modify the size of a prefix list at the same time.\nIf any of the resources that reference the prefix list cannot support the new maximum size, the modify operation fails. Check the state message for the IDs of the first ten resources that do not support the new maximum size.",
            "Type": "integer",
            "Required": false
        }
    },
    "modify_network_interface_attribute": {
        "Attachment": {
            "Description": "Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Description": {
            "Description": "A description for the network interface.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Groups": {
            "Description": "Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        },
        "SourceDestCheck": {
            "Description": "Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is true, source/destination checks are enabled; otherwise, they are disabled. The default value is true. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "modify_private_dns_name_options": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": false
        },
        "PrivateDnsHostnameType": {
            "Description": "The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID.",
            "Type": "string",
            "Required": false
        },
        "EnableResourceNameDnsARecord": {
            "Description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records.",
            "Type": "boolean",
            "Required": false
        },
        "EnableResourceNameDnsAAAARecord": {
            "Description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_reserved_instances": {
        "ReservedInstancesIds": {
            "Description": "The IDs of the Reserved Instances to modify.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see Ensuring Idempotency .",
            "Type": "string",
            "Required": false
        },
        "TargetConfigurations": {
            "Description": "The configuration settings for the Reserved Instances to modify.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "modify_security_group_rules": {
        "GroupId": {
            "Description": "The ID of the security group.",
            "Type": "string",
            "Required": true
        },
        "SecurityGroupRules": {
            "Description": "Information about the security group properties to update.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_snapshot_attribute": {
        "Attribute": {
            "Description": "The snapshot attribute to modify. Only volume creation permissions can be modified.",
            "Type": "string",
            "Required": false
        },
        "CreateVolumePermission": {
            "Description": "A JSON representation of the snapshot attribute modification.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "GroupNames": {
            "Description": "The group to modify for the snapshot.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "OperationType": {
            "Description": "The type of operation to perform to the attribute.",
            "Type": "string",
            "Required": false
        },
        "SnapshotId": {
            "Description": "The ID of the snapshot.",
            "Type": "string",
            "Required": true
        },
        "UserIds": {
            "Description": "The account ID to modify for the snapshot.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_snapshot_tier": {
        "SnapshotId": {
            "Description": "The ID of the snapshot.",
            "Type": "string",
            "Required": true
        },
        "StorageTier": {
            "Description": "The name of the storage tier. You must specify archive .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_spot_fleet_request": {
        "ExcessCapacityTerminationPolicy": {
            "Description": "Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.",
            "Type": "string",
            "Required": false
        },
        "LaunchTemplateConfigs": {
            "Description": "The launch template and overrides. You can only use this parameter if you specified a launch template (LaunchTemplateConfigs ) in your Spot Fleet request. If you specified LaunchSpecifications in your Spot Fleet request, then omit this parameter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SpotFleetRequestId": {
            "Description": "The ID of the Spot Fleet request.",
            "Type": "string",
            "Required": true
        },
        "TargetCapacity": {
            "Description": "The size of the fleet.",
            "Type": "integer",
            "Required": false
        },
        "OnDemandTargetCapacity": {
            "Description": "The number of On-Demand Instances in the fleet.",
            "Type": "integer",
            "Required": false
        },
        "Context": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_subnet_attribute": {
        "AssignIpv6AddressOnCreation": {
            "Description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that's created when launching an instance into the subnet (the instance therefore receives an IPv6 address).\nIf you enable the IPv6 addressing feature for your subnet, your network interface or instance only receives an IPv6 address if it's created using version 2016-11-15 or later of the Amazon EC2 API.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MapPublicIpOnLaunch": {
            "Description": "Specify true to indicate that network interfaces attached to instances created in the specified subnet should be assigned a public IPv4 address.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SubnetId": {
            "Description": "The ID of the subnet.",
            "Type": "string",
            "Required": true
        },
        "MapCustomerOwnedIpOnLaunch": {
            "Description": "Specify true to indicate that network interfaces attached to instances created in the specified subnet should be assigned a customer-owned IPv4 address.\nWhen this value is true, you must specify the customer-owned IP pool using CustomerOwnedIpv4Pool .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CustomerOwnedIpv4Pool": {
            "Description": "The customer-owned IPv4 address pool associated with the subnet.\nYou must set this value when you specify true for MapCustomerOwnedIpOnLaunch .",
            "Type": "string",
            "Required": false
        },
        "EnableDns64": {
            "Description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PrivateDnsHostnameTypeOnLaunch": {
            "Description": "The type of hostname to assign to instances in the subnet at launch. For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name) or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).",
            "Type": "string",
            "Required": false
        },
        "EnableResourceNameDnsARecordOnLaunch": {
            "Description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnableResourceNameDnsAAAARecordOnLaunch": {
            "Description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnableLniAtDeviceIndex": {
            "Description": "Indicates the device position for local network interfaces in this subnet. For example, 1 indicates local network interfaces in this subnet are the secondary network interface (eth1). A local network interface cannot be the primary network interface (eth0).",
            "Type": "integer",
            "Required": false
        },
        "DisableLniAtDeviceIndex": {
            "Description": "Specify true to indicate that local network interfaces at the current position should be disabled.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "modify_traffic_mirror_filter_network_services": {
        "TrafficMirrorFilterId": {
            "Description": "The ID of the Traffic Mirror filter.",
            "Type": "string",
            "Required": true
        },
        "AddNetworkServices": {
            "Description": "The network service, for example Amazon DNS, that you want to mirror.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveNetworkServices": {
            "Description": "The network service, for example Amazon DNS, that you no longer want to mirror.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_traffic_mirror_filter_rule": {
        "TrafficMirrorFilterRuleId": {
            "Description": "The ID of the Traffic Mirror rule.",
            "Type": "string",
            "Required": true
        },
        "TrafficDirection": {
            "Description": "The type of traffic to assign to the rule.",
            "Type": "string",
            "Required": false
        },
        "RuleNumber": {
            "Description": "The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
            "Type": "integer",
            "Required": false
        },
        "RuleAction": {
            "Description": "The action to assign to the rule.",
            "Type": "string",
            "Required": false
        },
        "DestinationPortRange": {
            "Description": "The destination ports that are associated with the Traffic Mirror rule.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SourcePortRange": {
            "Description": "The port range to assign to the Traffic Mirror rule.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Protocol": {
            "Description": "The protocol, for example TCP, to assign to the Traffic Mirror rule.",
            "Type": "integer",
            "Required": false
        },
        "DestinationCidrBlock": {
            "Description": "The destination CIDR block to assign to the Traffic Mirror rule.",
            "Type": "string",
            "Required": false
        },
        "SourceCidrBlock": {
            "Description": "The source CIDR block to assign to the Traffic Mirror rule.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description to assign to the Traffic Mirror rule.",
            "Type": "string",
            "Required": false
        },
        "RemoveFields": {
            "Description": "The properties that you want to remove from the Traffic Mirror filter rule.\nWhen you remove a property from a Traffic Mirror filter rule, the property is set to the default.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_traffic_mirror_session": {
        "TrafficMirrorSessionId": {
            "Description": "The ID of the Traffic Mirror session.",
            "Type": "string",
            "Required": true
        },
        "TrafficMirrorTargetId": {
            "Description": "The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.",
            "Type": "string",
            "Required": false
        },
        "TrafficMirrorFilterId": {
            "Description": "The ID of the Traffic Mirror filter.",
            "Type": "string",
            "Required": false
        },
        "PacketLength": {
            "Description": "The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.",
            "Type": "integer",
            "Required": false
        },
        "SessionNumber": {
            "Description": "The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.\nValid values are 1-32766.",
            "Type": "integer",
            "Required": false
        },
        "VirtualNetworkId": {
            "Description": "The virtual network ID of the Traffic Mirror session.",
            "Type": "integer",
            "Required": false
        },
        "Description": {
            "Description": "The description to assign to the Traffic Mirror session.",
            "Type": "string",
            "Required": false
        },
        "RemoveFields": {
            "Description": "The properties that you want to remove from the Traffic Mirror session.\nWhen you remove a property from a Traffic Mirror session, the property is set to the default.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_transit_gateway": {
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description for the transit gateway.",
            "Type": "string",
            "Required": false
        },
        "Options": {
            "Description": "The options to modify.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_transit_gateway_prefix_list_reference": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment to which traffic is routed.",
            "Type": "string",
            "Required": false
        },
        "Blackhole": {
            "Description": "Indicates whether to drop traffic that matches this route.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_transit_gateway_vpc_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "AddSubnetIds": {
            "Description": "The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveSubnetIds": {
            "Description": "The IDs of one or more subnets to remove.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Options": {
            "Description": "The new VPC attachment options.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_volume": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VolumeId": {
            "Description": "The ID of the volume.",
            "Type": "string",
            "Required": true
        },
        "Size": {
            "Description": "The target size of the volume, in GiB. The target volume size must be greater than or equal to the existing size of the volume.\nThe following are the supported volumes sizes for each volume type:\nDefault: The existing size is retained.",
            "Type": "integer",
            "Required": false,
            "integer variables": {}
        },
        "VolumeType": {
            "Description": "The target EBS volume type of the volume. For more information, see Amazon EBS volume types in the Amazon Elastic Compute Cloud User Guide .\nDefault: The existing type is retained.",
            "Type": "string",
            "Required": false
        },
        "Iops": {
            "Description": "The target IOPS rate of the volume. This parameter is valid only for gp3, io1, and io2 volumes.\nThe following are the supported values for each volume type:\nDefault: The existing value is retained if you keep the same volume type. If you change the volume type to io1, io2, or gp3, the default is 3,000.",
            "Type": "integer",
            "Required": false,
            "integer variables": {}
        },
        "Throughput": {
            "Description": "The target throughput of the volume, in MiB/s. This parameter is valid only for gp3 volumes. The maximum value is 1,000.\nDefault: The existing value is retained if the source and target volume type is gp3. Otherwise, the default value is 125.\nValid Range: Minimum value of 125. Maximum value of 1000.",
            "Type": "integer",
            "Required": false
        },
        "MultiAttachEnabled": {
            "Description": "Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 Nitro-based instances in the same Availability Zone. This parameter is supported with io1 and io2 volumes only. For more information, see Amazon EBS Multi-Attach in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_volume_attribute": {
        "AutoEnableIO": {
            "Description": "Indicates whether the volume should be auto-enabled for I/O operations.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VolumeId": {
            "Description": "The ID of the volume.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_vpc_attribute": {
        "EnableDnsHostnames": {
            "Description": "Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\nYou cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnableDnsSupport": {
            "Description": "Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.\nYou cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "modify_vpc_endpoint": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointId": {
            "Description": "The ID of the endpoint.",
            "Type": "string",
            "Required": true
        },
        "ResetPolicy": {
            "Description": "(Gateway endpoint) Specify true to reset the policy document to the default policy. The default policy allows full access to the service.",
            "Type": "boolean",
            "Required": false
        },
        "PolicyDocument": {
            "Description": "(Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.",
            "Type": "string",
            "Required": false
        },
        "AddRouteTableIds": {
            "Description": "(Gateway endpoint) One or more route tables IDs to associate with the endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveRouteTableIds": {
            "Description": "(Gateway endpoint) One or more route table IDs to disassociate from the endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AddSubnetIds": {
            "Description": "(Interface and Gateway Load Balancer endpoints) One or more subnet IDs in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveSubnetIds": {
            "Description": "(Interface endpoint) One or more subnets IDs in which to remove the endpoint.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AddSecurityGroupIds": {
            "Description": "(Interface endpoint) One or more security group IDs to associate with the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveSecurityGroupIds": {
            "Description": "(Interface endpoint) One or more security group IDs to disassociate from the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IpAddressType": {
            "Description": "The IP address type for the endpoint.",
            "Type": "string",
            "Required": false
        },
        "DnsOptions": {
            "Description": "The DNS options for the endpoint.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PrivateDnsEnabled": {
            "Description": "(Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_vpc_endpoint_connection_notification": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ConnectionNotificationId": {
            "Description": "The ID of the notification.",
            "Type": "string",
            "Required": true
        },
        "ConnectionNotificationArn": {
            "Description": "The ARN for the SNS topic for the notification.",
            "Type": "string",
            "Required": false
        },
        "ConnectionEvents": {
            "Description": "One or more events for the endpoint. Valid values are Accept, Connect, Delete, and Reject .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_vpc_endpoint_service_configuration": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the service.",
            "Type": "string",
            "Required": true
        },
        "PrivateDnsName": {
            "Description": "(Interface endpoint configuration) The private DNS name to assign to the endpoint service.",
            "Type": "string",
            "Required": false
        },
        "RemovePrivateDnsName": {
            "Description": "(Interface endpoint configuration) Removes the private DNS name of the endpoint service.",
            "Type": "boolean",
            "Required": false
        },
        "AcceptanceRequired": {
            "Description": "Indicates whether requests to create an endpoint to your service must be accepted.",
            "Type": "boolean",
            "Required": false
        },
        "AddNetworkLoadBalancerArns": {
            "Description": "The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveNetworkLoadBalancerArns": {
            "Description": "The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AddGatewayLoadBalancerArns": {
            "Description": "The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveGatewayLoadBalancerArns": {
            "Description": "The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AddSupportedIpAddressTypes": {
            "Description": "The IP address types to add to your service configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveSupportedIpAddressTypes": {
            "Description": "The IP address types to remove from your service configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_vpc_endpoint_service_payer_responsibility": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the service.",
            "Type": "string",
            "Required": true
        },
        "PayerResponsibility": {
            "Description": "The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.",
            "Type": "string",
            "Required": true
        }
    },
    "modify_vpc_endpoint_service_permissions": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the service.",
            "Type": "string",
            "Required": true
        },
        "AddAllowedPrincipals": {
            "Description": "The Amazon Resource Names (ARN) of one or more principals. Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*).",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RemoveAllowedPrincipals": {
            "Description": "The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked for principals in this list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "modify_vpc_peering_connection_options": {
        "AccepterPeeringConnectionOptions": {
            "Description": "The VPC peering connection options for the accepter VPC.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RequesterPeeringConnectionOptions": {
            "Description": "The VPC peering connection options for the requester VPC.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of the VPC peering connection.",
            "Type": "string",
            "Required": true
        }
    },
    "modify_vpc_tenancy": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "InstanceTenancy": {
            "Description": "The instance tenancy attribute for the VPC.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_vpn_connection": {
        "VpnConnectionId": {
            "Description": "The ID of the VPN connection.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayId": {
            "Description": "The ID of the transit gateway.",
            "Type": "string",
            "Required": false
        },
        "CustomerGatewayId": {
            "Description": "The ID of the customer gateway at your end of the VPN connection.",
            "Type": "string",
            "Required": false
        },
        "VpnGatewayId": {
            "Description": "The ID of the virtual private gateway at the Amazon Web Services side of the VPN connection.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_vpn_connection_options": {
        "VpnConnectionId": {
            "Description": "The ID of the Site-to-Site VPN connection.",
            "Type": "string",
            "Required": true
        },
        "LocalIpv4NetworkCidr": {
            "Description": "The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.\nDefault: 0.0.0.0/0",
            "Type": "string",
            "Required": false
        },
        "RemoteIpv4NetworkCidr": {
            "Description": "The IPv4 CIDR on the Amazon Web Services side of the VPN connection.\nDefault: 0.0.0.0/0",
            "Type": "string",
            "Required": false
        },
        "LocalIpv6NetworkCidr": {
            "Description": "The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.\nDefault: ::/0",
            "Type": "string",
            "Required": false
        },
        "RemoteIpv6NetworkCidr": {
            "Description": "The IPv6 CIDR on the Amazon Web Services side of the VPN connection.\nDefault: ::/0",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_vpn_tunnel_certificate": {
        "VpnConnectionId": {
            "Description": "The ID of the Amazon Web Services Site-to-Site VPN connection.",
            "Type": "string",
            "Required": true
        },
        "VpnTunnelOutsideIpAddress": {
            "Description": "The external IP address of the VPN tunnel.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_vpn_tunnel_options": {
        "VpnConnectionId": {
            "Description": "The ID of the Amazon Web Services Site-to-Site VPN connection.",
            "Type": "string",
            "Required": true
        },
        "VpnTunnelOutsideIpAddress": {
            "Description": "The external IP address of the VPN tunnel.",
            "Type": "string",
            "Required": true
        },
        "TunnelOptions": {
            "Description": "The tunnel options to modify.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "monitor_instances": {
        "InstanceIds": {
            "Description": "The IDs of the instances.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "move_address_to_vpc": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PublicIp": {
            "Description": "The Elastic IP address.",
            "Type": "string",
            "Required": true
        }
    },
    "move_byoip_cidr_to_ipam": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Cidr": {
            "Description": "The BYOIP CIDR.",
            "Type": "string",
            "Required": true
        },
        "IpamPoolId": {
            "Description": "The IPAM pool ID.",
            "Type": "string",
            "Required": true
        },
        "IpamPoolOwner": {
            "Description": "The Amazon Web Services account ID of the owner of the IPAM pool.",
            "Type": "string",
            "Required": true
        }
    },
    "provision_byoip_cidr": {
        "Cidr": {
            "Description": "The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you've brought to this or another Region.",
            "Type": "string",
            "Required": true
        },
        "CidrAuthorizationContext": {
            "Description": "A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PubliclyAdvertisable": {
            "Description": "(IPv6 only) Indicate whether the address range will be publicly advertised to the internet.\nDefault: true",
            "Type": "boolean",
            "Required": false
        },
        "Description": {
            "Description": "A description for the address range and the address pool.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PoolTagSpecifications": {
            "Description": "The tags to apply to the address pool.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MultiRegion": {
            "Description": "Reserved.",
            "Type": "boolean",
            "Required": false
        }
    },
    "provision_ipam_pool_cidr": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool to which you want to assign a CIDR.",
            "Type": "string",
            "Required": true
        },
        "Cidr": {
            "Description": "The CIDR you want to assign to the IPAM pool.",
            "Type": "string",
            "Required": false
        },
        "CidrAuthorizationContext": {
            "Description": "A signed document that proves that you are authorized to bring a specified IP address range to Amazon using BYOIP. This option applies to public pools only.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "provision_public_ipv4_pool_cidr": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool you would like to use to allocate this CIDR.",
            "Type": "string",
            "Required": true
        },
        "PoolId": {
            "Description": "The ID of the public IPv4 pool you would like to use for this CIDR.",
            "Type": "string",
            "Required": true
        },
        "NetmaskLength": {
            "Description": "The netmask length of the CIDR you would like to allocate to the public IPv4 pool.",
            "Type": "integer",
            "Required": true
        }
    },
    "purchase_host_reservation": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .",
            "Type": "string",
            "Required": false
        },
        "CurrencyCode": {
            "Description": "The currency in which the totalUpfrontPrice , LimitPrice , and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD .",
            "Type": "string",
            "Required": false
        },
        "HostIdSet": {
            "Description": "The IDs of the Dedicated Hosts with which the reservation will be associated.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "LimitPrice": {
            "Description": "The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request fails. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is USD . For example, to indicate a limit price of USD 100, specify 100.00.",
            "Type": "string",
            "Required": false
        },
        "OfferingId": {
            "Description": "The ID of the offering.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the Dedicated Host Reservation during purchase.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "purchase_reserved_instances_offering": {
        "InstanceCount": {
            "Description": "The number of Reserved Instances to purchase.",
            "Type": "integer",
            "Required": true
        },
        "ReservedInstancesOfferingId": {
            "Description": "The ID of the Reserved Instance offering to purchase.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "LimitPrice": {
            "Description": "Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PurchaseTime": {
            "Description": "The time at which to purchase the Reserved Instance, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).",
            "Type": "datetime",
            "Required": false
        }
    },
    "purchase_scheduled_instances": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PurchaseRequests": {
            "Description": "The purchase requests.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "reboot_instances": {
        "InstanceIds": {
            "Description": "The instance IDs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "register_image": {
        "ImageLocation": {
            "Description": "The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the aws-exec-read canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see Canned ACLs in the Amazon S3 Service Developer Guide .",
            "Type": "string",
            "Required": false
        },
        "Architecture": {
            "Description": "The architecture of the AMI.\nDefault: For Amazon EBS-backed AMIs, i386. For instance store-backed AMIs, the architecture specified in the manifest file.",
            "Type": "string",
            "Required": false
        },
        "BlockDeviceMappings": {
            "Description": "The block device mapping entries.\nIf you specify an Amazon EBS volume using the ID of an Amazon EBS snapshot, you can't specify the encryption state of the volume.\nIf you create an AMI on an Outpost, then all backing snapshots must be on the same Outpost or in the Region of that Outpost. AMIs on an Outpost that include local snapshots can be used to launch instances on the same Outpost only. For more information, Amazon EBS local snapshots on Outposts in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Description": {
            "Description": "A description for your AMI.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EnaSupport": {
            "Description": "Set to true to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.\nThis option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.",
            "Type": "boolean",
            "Required": false
        },
        "KernelId": {
            "Description": "The ID of the kernel.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "A name for your AMI.\nConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)",
            "Type": "string",
            "Required": true
        },
        "BillingProducts": {
            "Description": "The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the Amazon Web Services Marketplace to bill for the use of an AMI.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RamdiskId": {
            "Description": "The ID of the RAM disk.",
            "Type": "string",
            "Required": false
        },
        "RootDeviceName": {
            "Description": "The device name of the root device volume (for example, /dev/sda1 ).",
            "Type": "string",
            "Required": false
        },
        "SriovNetSupport": {
            "Description": "Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.\nThere is no way to disable sriovNetSupport at this time.\nThis option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.",
            "Type": "string",
            "Required": false
        },
        "VirtualizationType": {
            "Description": "The type of virtualization (hvm | paravirtual ).\nDefault: paravirtual",
            "Type": "string",
            "Required": false
        },
        "BootMode": {
            "Description": "The boot mode of the AMI. For more information, see Boot modes in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false
        },
        "TpmSupport": {
            "Description": "Set to v2.0 to enable Trusted Platform Module (TPM) support. For more information, see NitroTPM in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false
        },
        "UefiData": {
            "Description": "Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the GetInstanceUefiData command. You can inspect and modify the UEFI data by using the python-uefivars tool on GitHub. For more information, see UEFI Secure Boot in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "register_instance_event_notification_attributes": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceTagAttribute": {
            "Description": "Information about the tag keys to register.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "register_transit_gateway_multicast_group_members": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "GroupIpAddress": {
            "Description": "The IP address assigned to the transit gateway multicast group.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceIds": {
            "Description": "The group members' network interface IDs to register with the transit gateway multicast group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "register_transit_gateway_multicast_group_sources": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "GroupIpAddress": {
            "Description": "The IP address assigned to the transit gateway multicast group.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceIds": {
            "Description": "The group sources' network interface IDs to register with the transit gateway multicast group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reject_transit_gateway_multicast_domain_associations": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway attachment.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "The IDs of the subnets to associate with the transit gateway multicast domain.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reject_transit_gateway_peering_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the transit gateway peering attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reject_transit_gateway_vpc_attachment": {
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reject_vpc_endpoint_connections": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the service.",
            "Type": "string",
            "Required": true
        },
        "VpcEndpointIds": {
            "Description": "The IDs of one or more VPC endpoints.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "reject_vpc_peering_connection": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of the VPC peering connection.",
            "Type": "string",
            "Required": true
        }
    },
    "release_address": {
        "AllocationId": {
            "Description": "[EC2-VPC] The allocation ID. Required for EC2-VPC.",
            "Type": "string",
            "Required": false
        },
        "PublicIp": {
            "Description": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
            "Type": "string",
            "Required": false
        },
        "NetworkBorderGroup": {
            "Description": "The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.\nIf you provide an incorrect network border group, you receive an InvalidAddress.NotFound error.\nYou cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you receive an InvalidParameterCombination error.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "release_hosts": {
        "HostIds": {
            "Description": "The IDs of the Dedicated Hosts to release.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "release_ipam_pool_allocation": {
        "DryRun": {
            "Description": "A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpamPoolId": {
            "Description": "The ID of the IPAM pool which contains the allocation you want to release.",
            "Type": "string",
            "Required": true
        },
        "Cidr": {
            "Description": "The CIDR of the allocation you want to release.",
            "Type": "string",
            "Required": true
        },
        "IpamPoolAllocationId": {
            "Description": "The ID of the allocation.",
            "Type": "string",
            "Required": true
        }
    },
    "replace_iam_instance_profile_association": {
        "IamInstanceProfile": {
            "Description": "The IAM instance profile.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "AssociationId": {
            "Description": "The ID of the existing IAM instance profile association.",
            "Type": "string",
            "Required": true
        }
    },
    "replace_network_acl_association": {
        "AssociationId": {
            "Description": "The ID of the current association between the original network ACL and the subnet.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkAclId": {
            "Description": "The ID of the new network ACL to associate with the subnet.",
            "Type": "string",
            "Required": true
        }
    },
    "replace_network_acl_entry": {
        "CidrBlock": {
            "Description": "The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Egress": {
            "Description": "Indicates whether to replace the egress rule.\nDefault: If no value is specified, we replace the ingress rule.",
            "Type": "boolean",
            "Required": true
        },
        "IcmpTypeCode": {
            "Description": "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Ipv6CidrBlock": {
            "Description": "The IPv6 network range to allow or deny, in CIDR notation (for example 2001:bd8:1234:1a00::/64 ).",
            "Type": "string",
            "Required": false
        },
        "NetworkAclId": {
            "Description": "The ID of the ACL.",
            "Type": "string",
            "Required": true
        },
        "PortRange": {
            "Description": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Protocol": {
            "Description": "The protocol number. A value of \"-1\" means all protocols. If you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP), or \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.",
            "Type": "string",
            "Required": true
        },
        "RuleAction": {
            "Description": "Indicates whether to allow or deny the traffic that matches the rule.",
            "Type": "string",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The rule number of the entry to replace.",
            "Type": "integer",
            "Required": true
        }
    },
    "replace_route": {
        "DestinationCidrBlock": {
            "Description": "The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.",
            "Type": "string",
            "Required": false
        },
        "DestinationIpv6CidrBlock": {
            "Description": "The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.",
            "Type": "string",
            "Required": false
        },
        "DestinationPrefixListId": {
            "Description": "The ID of the prefix list for the route.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointId": {
            "Description": "The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.",
            "Type": "string",
            "Required": false
        },
        "EgressOnlyInternetGatewayId": {
            "Description": "[IPv6 traffic only] The ID of an egress-only internet gateway.",
            "Type": "string",
            "Required": false
        },
        "GatewayId": {
            "Description": "The ID of an internet gateway or virtual private gateway.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of a NAT instance in your VPC.",
            "Type": "string",
            "Required": false
        },
        "LocalTarget": {
            "Description": "Specifies whether to reset the local route to its default target (local ).",
            "Type": "boolean",
            "Required": false
        },
        "NatGatewayId": {
            "Description": "[IPv4 traffic only] The ID of a NAT gateway.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayId": {
            "Description": "The ID of a transit gateway.",
            "Type": "string",
            "Required": false
        },
        "LocalGatewayId": {
            "Description": "The ID of the local gateway.",
            "Type": "string",
            "Required": false
        },
        "CarrierGatewayId": {
            "Description": "[IPv4 traffic only] The ID of a carrier gateway.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "The ID of a network interface.",
            "Type": "string",
            "Required": false
        },
        "RouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of a VPC peering connection.",
            "Type": "string",
            "Required": false
        },
        "CoreNetworkArn": {
            "Description": "The Amazon Resource Name (ARN) of the core network.",
            "Type": "string",
            "Required": false
        }
    },
    "replace_route_table_association": {
        "AssociationId": {
            "Description": "The association ID.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RouteTableId": {
            "Description": "The ID of the new route table to associate with the subnet.",
            "Type": "string",
            "Required": true
        }
    },
    "replace_transit_gateway_route": {
        "DestinationCidrBlock": {
            "Description": "The CIDR range used for the destination match. Routing decisions are based on the most specific match.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the route table.",
            "Type": "string",
            "Required": true
        },
        "TransitGatewayAttachmentId": {
            "Description": "The ID of the attachment.",
            "Type": "string",
            "Required": false
        },
        "Blackhole": {
            "Description": "Indicates whether traffic matching this route is to be dropped.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "report_instance_status": {
        "Description": {
            "Description": "Descriptive text about the health state of your instance.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EndTime": {
            "Description": "The time at which the reported instance health state ended.",
            "Type": "datetime",
            "Required": false
        },
        "Instances": {
            "Description": "The instances.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ReasonCodes": {
            "Description": "The reason codes that describe the health state of your instance.",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        },
        "StartTime": {
            "Description": "The time at which the reported instance health state began.",
            "Type": "datetime",
            "Required": false
        },
        "Status": {
            "Description": "The status of all instances listed.",
            "Type": "string",
            "Required": true
        }
    },
    "request_spot_fleet": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SpotFleetRequestConfig": {
            "Description": "The configuration for the Spot Fleet request.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "request_spot_instances": {
        "AvailabilityZoneGroup": {
            "Description": "The user-specified name for a logical grouping of requests.\nWhen you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.\nIf there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.\nDefault: Instances are launched in any available Availability Zone.",
            "Type": "string",
            "Required": false
        },
        "BlockDurationMinutes": {
            "Description": "Deprecated.",
            "Type": "integer",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency in the Amazon EC2 User Guide for Linux Instances .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceCount": {
            "Description": "The maximum number of Spot Instances to launch.\nDefault: 1",
            "Type": "integer",
            "Required": false
        },
        "LaunchGroup": {
            "Description": "The instance launch group. Launch groups are Spot Instances that launch together and terminate together.\nDefault: Instances are launched and terminated individually",
            "Type": "string",
            "Required": false
        },
        "LaunchSpecification": {
            "Description": "The launch specification.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SpotPrice": {
            "Description": "The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.",
            "Type": "string",
            "Required": false
        },
        "Type": {
            "Description": "The Spot Instance request type.\nDefault: one-time",
            "Type": "string",
            "Required": false
        },
        "ValidFrom": {
            "Description": "The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.\nThe specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.",
            "Type": "datetime",
            "Required": false
        },
        "ValidUntil": {
            "Description": "The end date of the request, in UTC format (YYYY -MM -DD T*HH* :MM :SS Z).",
            "Type": "datetime",
            "Required": false,
            "datetime variables": {}
        },
        "TagSpecifications": {
            "Description": "The key-value pair for tagging the Spot Instance request on creation. The value for ResourceType must be spot-instances-request, otherwise the Spot Instance request fails. To tag the Spot Instance request after it has been created, see CreateTags .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InstanceInterruptionBehavior": {
            "Description": "The behavior when a Spot Instance is interrupted. The default is terminate .",
            "Type": "string",
            "Required": false
        }
    },
    "reset_address_attribute": {
        "AllocationId": {
            "Description": "[EC2-VPC] The allocation ID.",
            "Type": "string",
            "Required": true
        },
        "Attribute": {
            "Description": "The attribute of the IP address.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reset_ebs_default_kms_key_id": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reset_fpga_image_attribute": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "FpgaImageId": {
            "Description": "The ID of the AFI.",
            "Type": "string",
            "Required": true
        },
        "Attribute": {
            "Description": "The attribute.",
            "Type": "string",
            "Required": false
        }
    },
    "reset_image_attribute": {
        "Attribute": {
            "Description": "The attribute to reset (currently you can only reset the launch permission attribute).",
            "Type": "string",
            "Required": true
        },
        "ImageId": {
            "Description": "The ID of the AMI.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reset_instance_attribute": {
        "Attribute": {
            "Description": "The attribute to reset.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        }
    },
    "reset_network_interface_attribute": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        },
        "SourceDestCheck": {
            "Description": "The source/destination checking attribute. Resets the value to true .",
            "Type": "string",
            "Required": false
        }
    },
    "reset_snapshot_attribute": {
        "Attribute": {
            "Description": "The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.",
            "Type": "string",
            "Required": true
        },
        "SnapshotId": {
            "Description": "The ID of the snapshot.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "restore_address_to_classic": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PublicIp": {
            "Description": "The Elastic IP address.",
            "Type": "string",
            "Required": true
        }
    },
    "restore_image_from_recycle_bin": {
        "ImageId": {
            "Description": "The ID of the AMI to restore.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "restore_managed_prefix_list_version": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PrefixListId": {
            "Description": "The ID of the prefix list.",
            "Type": "string",
            "Required": true
        },
        "PreviousVersion": {
            "Description": "The version to restore.",
            "Type": "integer",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The current version number for the prefix list.",
            "Type": "integer",
            "Required": true
        }
    },
    "restore_snapshot_from_recycle_bin": {
        "SnapshotId": {
            "Description": "The ID of the snapshot to restore.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "restore_snapshot_tier": {
        "SnapshotId": {
            "Description": "The ID of the snapshot to restore.",
            "Type": "string",
            "Required": true
        },
        "TemporaryRestoreDays": {
            "Description": "Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.\nTo temporarily restore an archived snapshot, specify the number of days and omit the PermanentRestore parameter or set it to false .",
            "Type": "integer",
            "Required": false
        },
        "PermanentRestore": {
            "Description": "Indicates whether to permanently restore an archived snapshot. To permanently restore an archived snapshot, specify true and omit the RestoreSnapshotTierRequest$TemporaryRestoreDays parameter.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "revoke_client_vpn_ingress": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint with which the authorization rule is associated.",
            "Type": "string",
            "Required": true
        },
        "TargetNetworkCidr": {
            "Description": "The IPv4 address range, in CIDR notation, of the network for which access is being removed.",
            "Type": "string",
            "Required": true
        },
        "AccessGroupId": {
            "Description": "The ID of the Active Directory group for which to revoke access.",
            "Type": "string",
            "Required": false
        },
        "RevokeAllGroups": {
            "Description": "Indicates whether access should be revoked for all clients.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "revoke_security_group_egress": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupId": {
            "Description": "The ID of the security group.",
            "Type": "string",
            "Required": true
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroupRuleIds": {
            "Description": "The IDs of the security group rules.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "CidrIp": {
            "Description": "Not supported. Use a set of IP permissions to specify the CIDR.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "IpProtocol": {
            "Description": "Not supported. Use a set of IP permissions to specify the protocol name or number.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        }
    },
    "revoke_security_group_ingress": {
        "CidrIp": {
            "Description": "The CIDR IP address range. You can't specify this parameter when specifying a source security group.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types.",
            "Type": "integer",
            "Required": false
        },
        "GroupId": {
            "Description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
            "Type": "string",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IpProtocol": {
            "Description": "The IP protocol name (tcp , udp , icmp ) or number (see Protocol Numbers ). Use -1 to specify all.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "[EC2-Classic] The Amazon Web Services account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP type.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SecurityGroupRuleIds": {
            "Description": "The IDs of the security group rules.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "run_instances": {
        "BlockDeviceMappings": {
            "Description": "The block device mapping, which defines the EBS volumes and instance store volumes to attach to the instance at launch. For more information, see Block device mappings in the Amazon EC2 User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ImageId": {
            "Description": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type. For more information, see Instance types in the Amazon EC2 User Guide .\nDefault: m1.small",
            "Type": "string",
            "Required": false
        },
        "Ipv6AddressCount": {
            "Description": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\nYou cannot specify this option and the network interfaces option in the same request.",
            "Type": "integer",
            "Required": false
        },
        "Ipv6Addresses": {
            "Description": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\nYou cannot specify this option and the network interfaces option in the same request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "KernelId": {
            "Description": "The ID of the kernel.",
            "Type": "string",
            "Required": false
        },
        "KeyName": {
            "Description": "The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair .",
            "Type": "string",
            "Required": false
        },
        "MaxCount": {
            "Description": "The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount .\nConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 FAQ.",
            "Type": "integer",
            "Required": true
        },
        "MinCount": {
            "Description": "The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.\nConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 General FAQ.",
            "Type": "integer",
            "Required": true
        },
        "Monitoring": {
            "Description": "Specifies whether detailed monitoring is enabled for the instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Placement": {
            "Description": "The placement for the instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RamdiskId": {
            "Description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID.",
            "Type": "string",
            "Required": false
        },
        "SecurityGroupIds": {
            "Description": "The IDs of the security groups. You can create a security group using CreateSecurityGroup .\nIf you specify a network interface, you must specify any security groups as part of the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroups": {
            "Description": "[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.\nIf you specify a network interface, you must specify any security groups as part of the network interface.\nDefault: Amazon EC2 uses the default security group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SubnetId": {
            "Description": "[EC2-VPC] The ID of the subnet to launch the instance into.\nIf you specify a network interface, you must specify any subnets as part of the network interface.",
            "Type": "string",
            "Required": false
        },
        "UserData": {
            "Description": "The user data script to make available to the instance. For more information, see Run commands on your Linux instance at launch and Run commands on your Windows instance at launch. If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
            "Type": "string",
            "Required": false
        },
        "AdditionalInfo": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.\nFor more information, see Ensuring Idempotency .\nConstraints: Maximum 64 ASCII characters\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DisableApiTermination": {
            "Description": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute. Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EbsOptimized": {
            "Description": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "IamInstanceProfile": {
            "Description": "The name or Amazon Resource Name (ARN) of an IAM instance profile.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InstanceInitiatedShutdownBehavior": {
            "Description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\nDefault: stop",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaces": {
            "Description": "The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PrivateIpAddress": {
            "Description": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.\nOnly one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.\nYou cannot specify this option and the network interfaces option in the same request.",
            "Type": "string",
            "Required": false
        },
        "ElasticGpuSpecification": {
            "Description": "An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon EC2 User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ElasticInferenceAccelerators": {
            "Description": "An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\nYou cannot specify accelerators from different generations in the same request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the resources that are created during instance launch.\nYou can specify tags for the following resources only:\nTo tag a resource after it has been created, see CreateTags .",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "LaunchTemplate": {
            "Description": "The launch template to use to launch the instances. Any parameters that you specify in  RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InstanceMarketOptions": {
            "Description": "The market (purchasing) option for the instances.\nFor  RunInstances, persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CreditSpecification": {
            "Description": "The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification. For more information, see Burstable performance instances in the Amazon EC2 User Guide .\nDefault: standard (T2 instances) or unlimited (T3/T3a/T4g instances)\nFor T3 instances with host tenancy, only standard is supported.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CpuOptions": {
            "Description": "The CPU options for the instance. For more information, see Optimize CPU options in the Amazon EC2 User Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CapacityReservationSpecification": {
            "Description": "Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HibernationOptions": {
            "Description": "Indicates whether an instance is enabled for hibernation. For more information, see Hibernate your instance in the Amazon EC2 User Guide .\nYou can't enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LicenseSpecifications": {
            "Description": "The license configurations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MetadataOptions": {
            "Description": "The metadata options for the instance. For more information, see Instance metadata and user data .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnclaveOptions": {
            "Description": "Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see What is Amazon Web Services Nitro Enclaves? in the Amazon Web Services Nitro Enclaves User Guide .\nYou can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PrivateDnsNameOptions": {
            "Description": "The options for the instance hostname. The default values are inherited from the subnet.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MaintenanceOptions": {
            "Description": "The maintenance and recovery options for the instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DisableApiStop": {
            "Description": "Indicates whether an instance is enabled for stop protection. For more information, see Stop protection .",
            "Type": "boolean",
            "Required": false
        }
    },
    "run_scheduled_instances": {
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceCount": {
            "Description": "The number of instances.\nDefault: 1",
            "Type": "integer",
            "Required": false
        },
        "LaunchSpecification": {
            "Description": "The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ScheduledInstanceId": {
            "Description": "The Scheduled Instance ID.",
            "Type": "string",
            "Required": true
        }
    },
    "search_local_gateway_routes": {
        "LocalGatewayRouteTableId": {
            "Description": "The ID of the local gateway route table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "search_transit_gateway_multicast_groups": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "search_transit_gateway_routes": {
        "TransitGatewayRouteTableId": {
            "Description": "The ID of the transit gateway route table.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of routes to return.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "send_diagnostic_interrupt": {
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "start_instances": {
        "InstanceIds": {
            "Description": "The IDs of the instances.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "AdditionalInfo": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "start_network_insights_access_scope_analysis": {
        "NetworkInsightsAccessScopeId": {
            "Description": "The ID of the Network Access Scope.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        }
    },
    "start_network_insights_analysis": {
        "NetworkInsightsPathId": {
            "Description": "The ID of the path.",
            "Type": "string",
            "Required": true
        },
        "FilterInArns": {
            "Description": "The Amazon Resource Names (ARN) of the resources that the path must traverse.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to apply.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to ensure idempotency .\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": true
        }
    },
    "start_vpc_endpoint_service_private_dns_verification": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "ServiceId": {
            "Description": "The ID of the endpoint service.",
            "Type": "string",
            "Required": true
        }
    },
    "stop_instances": {
        "InstanceIds": {
            "Description": "The IDs of the instances.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Hibernate": {
            "Description": "Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see Hibernate your instance in the Amazon EC2 User Guide .\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Force": {
            "Description": "Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.\nDefault: false",
            "Type": "boolean",
            "Required": false
        }
    },
    "terminate_client_vpn_connections": {
        "ClientVpnEndpointId": {
            "Description": "The ID of the Client VPN endpoint to which the client is connected.",
            "Type": "string",
            "Required": true
        },
        "ConnectionId": {
            "Description": "The ID of the client connection to be terminated.",
            "Type": "string",
            "Required": false
        },
        "Username": {
            "Description": "The name of the user who initiated the connection. Use this option to terminate all active connections for the specified user. This option can only be used if the user has established up to five connections.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "terminate_instances": {
        "InstanceIds": {
            "Description": "The IDs of the instances.\nConstraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "unassign_ipv6_addresses": {
        "Ipv6Addresses": {
            "Description": "The IPv6 addresses to unassign from the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv6Prefixes": {
            "Description": "One or more IPv6 prefixes to unassign from the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NetworkInterfaceId": {
            "Description": "The ID of the network interface.",
            "Type": "string",
            "Required": true
        }
    },
    "unassign_private_ip_addresses": {
        "PrivateIpAddresses": {
            "Description": "The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Ipv4Prefixes": {
            "Description": "The IPv4 prefixes to unassign from the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "unmonitor_instances": {
        "InstanceIds": {
            "Description": "The IDs of the instances.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_security_group_rule_descriptions_egress": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupId": {
            "Description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "[Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
            "Type": "string",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The IP permissions for the security group rule. You must specify either the IP permissions or the description.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroupRuleDescriptions": {
            "Description": "The description for the egress security group rules. You must specify either the description or the IP permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_security_group_rule_descriptions_ingress": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "GroupId": {
            "Description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.",
            "Type": "string",
            "Required": false
        },
        "GroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
            "Type": "string",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The IP permissions for the security group rule. You must specify either IP permissions or a description.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroupRuleDescriptions": {
            "Description": "[VPC only] The description for the ingress security group rules. You must specify either a description or IP permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "withdraw_byoip_cidr": {
        "Cidr": {
            "Description": "The address range, in CIDR notation.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "paginate": {
        "TransitGatewayMulticastDomainId": {
            "Description": "The ID of the transit gateway multicast domain.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters. The possible values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "VpnConnectionIds": {
            "Description": "One or more VPN connection IDs.\nDefault: Describes your VPN connections.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_instances": {
        "BlockDeviceMappings": {
            "Description": "The block device mapping, which defines the EBS volumes and instance store volumes to attach to the instance at launch. For more information, see Block device mappings in the Amazon EC2 User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ImageId": {
            "Description": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type. For more information, see Instance types in the Amazon EC2 User Guide .\nDefault: m1.small",
            "Type": "string",
            "Required": false
        },
        "Ipv6AddressCount": {
            "Description": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\nYou cannot specify this option and the network interfaces option in the same request.",
            "Type": "integer",
            "Required": false
        },
        "Ipv6Addresses": {
            "Description": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.\nYou cannot specify this option and the network interfaces option in the same request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "KernelId": {
            "Description": "The ID of the kernel.",
            "Type": "string",
            "Required": false
        },
        "KeyName": {
            "Description": "The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair .",
            "Type": "string",
            "Required": false
        },
        "MaxCount": {
            "Description": "The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount .\nConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 FAQ.",
            "Type": "integer",
            "Required": true
        },
        "MinCount": {
            "Description": "The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.\nConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 General FAQ.",
            "Type": "integer",
            "Required": true
        },
        "Monitoring": {
            "Description": "Specifies whether detailed monitoring is enabled for the instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Placement": {
            "Description": "The placement for the instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RamdiskId": {
            "Description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID.",
            "Type": "string",
            "Required": false
        },
        "SecurityGroupIds": {
            "Description": "The IDs of the security groups. You can create a security group using CreateSecurityGroup .\nIf you specify a network interface, you must specify any security groups as part of the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroups": {
            "Description": "[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.\nIf you specify a network interface, you must specify any security groups as part of the network interface.\nDefault: Amazon EC2 uses the default security group.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "UserData": {
            "Description": "The user data script to make available to the instance. For more information, see Run commands on your Linux instance at launch and Run commands on your Windows instance at launch. If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
            "Type": "string",
            "Required": false
        },
        "AdditionalInfo": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.\nFor more information, see Ensuring Idempotency .\nConstraints: Maximum 64 ASCII characters\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "DisableApiTermination": {
            "Description": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute. Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EbsOptimized": {
            "Description": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "IamInstanceProfile": {
            "Description": "The name or Amazon Resource Name (ARN) of an IAM instance profile.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InstanceInitiatedShutdownBehavior": {
            "Description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\nDefault: stop",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaces": {
            "Description": "The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PrivateIpAddress": {
            "Description": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.\nOnly one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.\nYou cannot specify this option and the network interfaces option in the same request.",
            "Type": "string",
            "Required": false
        },
        "ElasticGpuSpecification": {
            "Description": "An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon EC2 User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ElasticInferenceAccelerators": {
            "Description": "An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\nYou cannot specify accelerators from different generations in the same request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the resources that are created during instance launch.\nYou can specify tags for the following resources only:\nTo tag a resource after it has been created, see CreateTags .",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "LaunchTemplate": {
            "Description": "The launch template to use to launch the instances. Any parameters that you specify in  RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InstanceMarketOptions": {
            "Description": "The market (purchasing) option for the instances.\nFor  RunInstances, persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CreditSpecification": {
            "Description": "The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification. For more information, see Burstable performance instances in the Amazon EC2 User Guide .\nDefault: standard (T2 instances) or unlimited (T3/T3a/T4g instances)\nFor T3 instances with host tenancy, only standard is supported.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CpuOptions": {
            "Description": "The CPU options for the instance. For more information, see Optimize CPU options in the Amazon EC2 User Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CapacityReservationSpecification": {
            "Description": "Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HibernationOptions": {
            "Description": "Indicates whether an instance is enabled for hibernation. For more information, see Hibernate your instance in the Amazon EC2 User Guide .\nYou can't enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LicenseSpecifications": {
            "Description": "The license configurations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MetadataOptions": {
            "Description": "The metadata options for the instance. For more information, see Instance metadata and user data .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnclaveOptions": {
            "Description": "Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see What is Amazon Web Services Nitro Enclaves? in the Amazon Web Services Nitro Enclaves User Guide .\nYou can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PrivateDnsNameOptions": {
            "Description": "The options for the instance hostname. The default values are inherited from the subnet.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MaintenanceOptions": {
            "Description": "The maintenance and recovery options for the instance.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DisableApiStop": {
            "Description": "Indicates whether an instance is enabled for stop protection. For more information, see Stop protection .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_available_subresources": "No parameters defined",
    "ClassicAddress": {
        "public_ip": {
            "Description": "The ClassicAddress's public_ip identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "DhcpOptions": {
        "id": {
            "Description": "The DhcpOptions's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Image": {
        "id": {
            "Description": "The Image's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Instance": {
        "id": {
            "Description": "The Instance's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "InternetGateway": {
        "id": {
            "Description": "The InternetGateway's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "KeyPair": {
        "name": {
            "Description": "The KeyPair's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "NetworkAcl": {
        "id": {
            "Description": "The NetworkAcl's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "NetworkInterface": {
        "id": {
            "Description": "The NetworkInterface's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "NetworkInterfaceAssociation": {
        "id": {
            "Description": "The NetworkInterfaceAssociation's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "PlacementGroup": {
        "name": {
            "Description": "The PlacementGroup's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Route": {
        "route_table_id": {
            "Description": "The Route's route_table_id identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "destination_cidr_block": {
            "Description": "The Route's destination_cidr_block identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "RouteTable": "No parameters defined",
    "RouteTableAssociation": {
        "id": {
            "Description": "The RouteTableAssociation's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "SecurityGroup": {
        "id": {
            "Description": "The SecurityGroup's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Snapshot": {
        "id": {
            "Description": "The Snapshot's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Subnet": {
        "id": {
            "Description": "The Subnet's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Tag": {
        "resource_id": {
            "Description": "The Tag's resource_id identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "key": {
            "Description": "The Tag's key identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "value": {
            "Description": "The Tag's value identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Volume": {
        "id": {
            "Description": "The Volume's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Vpc": {
        "id": {
            "Description": "The Vpc's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "VpcAddress": {
        "allocation_id": {
            "Description": "The VpcAddress's allocation_id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "VpcPeeringConnection": {
        "id": {
            "Description": "The VpcPeeringConnection's id identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "all": "No parameters defined",
    "filter": {
        "SubnetIds": {
            "Description": "One or more subnet IDs.\nDefault: Describes all your subnets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "limit": {
        "count": {
            "Description": "The limit to the number of resources in the iterable.",
            "Type": "integer",
            "Required": false
        }
    },
    "page_size": {
        "count": {
            "Description": "The number of items returned by each service call",
            "Type": "integer",
            "Required": false
        }
    },
    "monitor": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reboot": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "start": {
        "AdditionalInfo": {
            "Description": "Reserved.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "stop": {
        "Hibernate": {
            "Description": "Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see Hibernate your instance in the Amazon EC2 User Guide .\nDefault: false",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Force": {
            "Description": "Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.\nDefault: false",
            "Type": "boolean",
            "Required": false
        }
    },
    "terminate": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "unmonitor": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "associate": {
        "InstanceId": {
            "Description": "The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.",
            "Type": "string",
            "Required": false
        },
        "PublicIp": {
            "Description": "[EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic.",
            "Type": "string",
            "Required": false
        },
        "AllowReassociation": {
            "Description": "[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.",
            "Type": "boolean",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\nFor EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.",
            "Type": "string",
            "Required": false
        },
        "PrivateIpAddress": {
            "Description": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.",
            "Type": "string",
            "Required": false
        }
    },
    "disassociate": {
        "AssociationId": {
            "Description": "[EC2-VPC] The association ID. Required for EC2-VPC.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "load": "No parameters defined",
    "release": {
        "PublicIp": {
            "Description": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
            "Type": "string",
            "Required": false
        },
        "NetworkBorderGroup": {
            "Description": "The set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.\nIf you provide an incorrect network border group, you receive an InvalidAddress.NotFound error.\nYou cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you receive an InvalidParameterCombination error.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reload": "No parameters defined",
    "associate_with_vpc": {
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "deregister": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_attribute": {
        "Attribute": {
            "Description": "The VPC attribute.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "modify_attribute": {
        "EnableDnsHostnames": {
            "Description": "Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\nYou cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnableDnsSupport": {
            "Description": "Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.\nYou cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "reset_attribute": {
        "Attribute": {
            "Description": "The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "wait_until_exists": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "console_output": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Latest": {
            "Description": "When enabled, retrieves the latest console output for the instance.\nDefault: disabled (false )",
            "Type": "boolean",
            "Required": false
        }
    },
    "password_data": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "report_status": {
        "Description": {
            "Description": "Descriptive text about the health state of your instance.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "EndTime": {
            "Description": "The time at which the reported instance health state ended.",
            "Type": "datetime",
            "Required": false
        },
        "ReasonCodes": {
            "Description": "The reason codes that describe the health state of your instance.",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        },
        "StartTime": {
            "Description": "The time at which the reported instance health state began.",
            "Type": "datetime",
            "Required": false
        },
        "Status": {
            "Description": "The status of all instances listed.",
            "Type": "string",
            "Required": true
        }
    },
    "reset_kernel": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reset_ramdisk": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reset_source_dest_check": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "wait_until_running": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "wait_until_stopped": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "wait_until_terminated": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to request the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "attach_to_vpc": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "detach_from_vpc": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcId": {
            "Description": "The ID of the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "create_entry": {
        "CidrBlock": {
            "Description": "The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ). We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18 , we modify it to 100.68.0.0/18 .",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Egress": {
            "Description": "Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).",
            "Type": "boolean",
            "Required": true
        },
        "IcmpTypeCode": {
            "Description": "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Ipv6CidrBlock": {
            "Description": "The IPv6 network range to allow or deny, in CIDR notation (for example 2001:db8:1234:1a00::/64 ).",
            "Type": "string",
            "Required": false
        },
        "PortRange": {
            "Description": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Protocol": {
            "Description": "The protocol number. A value of \"-1\" means all protocols. If you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP), or \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.",
            "Type": "string",
            "Required": true
        },
        "RuleAction": {
            "Description": "Indicates whether to allow or deny the traffic that matches the rule.",
            "Type": "string",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.\nConstraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.",
            "Type": "integer",
            "Required": true
        }
    },
    "delete_entry": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Egress": {
            "Description": "Indicates whether the rule is an egress rule.",
            "Type": "boolean",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The rule number of the entry to delete.",
            "Type": "integer",
            "Required": true
        }
    },
    "replace_association": {
        "AssociationId": {
            "Description": "The ID of the current association between the original network ACL and the subnet.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "replace_entry": {
        "CidrBlock": {
            "Description": "The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Egress": {
            "Description": "Indicates whether to replace the egress rule.\nDefault: If no value is specified, we replace the ingress rule.",
            "Type": "boolean",
            "Required": true
        },
        "IcmpTypeCode": {
            "Description": "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Ipv6CidrBlock": {
            "Description": "The IPv6 network range to allow or deny, in CIDR notation (for example 2001:bd8:1234:1a00::/64 ).",
            "Type": "string",
            "Required": false
        },
        "PortRange": {
            "Description": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Protocol": {
            "Description": "The protocol number. A value of \"-1\" means all protocols. If you specify \"-1\" or a protocol number other than \"6\" (TCP), \"17\" (UDP), or \"1\" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol \"58\" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.",
            "Type": "string",
            "Required": true
        },
        "RuleAction": {
            "Description": "Indicates whether to allow or deny the traffic that matches the rule.",
            "Type": "string",
            "Required": true
        },
        "RuleNumber": {
            "Description": "The rule number of the entry to replace.",
            "Type": "integer",
            "Required": true
        }
    },
    "attach": {
        "DeviceIndex": {
            "Description": "The index of the device for the network interface attachment.",
            "Type": "integer",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "NetworkCardIndex": {
            "Description": "The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.",
            "Type": "integer",
            "Required": false
        }
    },
    "detach": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Force": {
            "Description": "Specifies whether to force a detachment.",
            "Type": "boolean",
            "Required": false
        }
    },
    "replace": {
        "DestinationIpv6CidrBlock": {
            "Description": "The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.",
            "Type": "string",
            "Required": false
        },
        "DestinationPrefixListId": {
            "Description": "The ID of the prefix list for the route.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "VpcEndpointId": {
            "Description": "The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.",
            "Type": "string",
            "Required": false
        },
        "EgressOnlyInternetGatewayId": {
            "Description": "[IPv6 traffic only] The ID of an egress-only internet gateway.",
            "Type": "string",
            "Required": false
        },
        "GatewayId": {
            "Description": "The ID of an internet gateway or virtual private gateway.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of a NAT instance in your VPC.",
            "Type": "string",
            "Required": false
        },
        "LocalTarget": {
            "Description": "Specifies whether to reset the local route to its default target (local ).",
            "Type": "boolean",
            "Required": false
        },
        "NatGatewayId": {
            "Description": "[IPv4 traffic only] The ID of a NAT gateway.",
            "Type": "string",
            "Required": false
        },
        "TransitGatewayId": {
            "Description": "The ID of a transit gateway.",
            "Type": "string",
            "Required": false
        },
        "LocalGatewayId": {
            "Description": "The ID of the local gateway.",
            "Type": "string",
            "Required": false
        },
        "CarrierGatewayId": {
            "Description": "[IPv4 traffic only] The ID of a carrier gateway.",
            "Type": "string",
            "Required": false
        },
        "NetworkInterfaceId": {
            "Description": "The ID of a network interface.",
            "Type": "string",
            "Required": false
        },
        "VpcPeeringConnectionId": {
            "Description": "The ID of a VPC peering connection.",
            "Type": "string",
            "Required": false
        },
        "CoreNetworkArn": {
            "Description": "The Amazon Resource Name (ARN) of the core network.",
            "Type": "string",
            "Required": false
        }
    },
    "associate_with_subnet": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SubnetId": {
            "Description": "The ID of the subnet.",
            "Type": "string",
            "Required": false
        },
        "GatewayId": {
            "Description": "The ID of the internet gateway or virtual private gateway.",
            "Type": "string",
            "Required": false
        }
    },
    "replace_subnet": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "RouteTableId": {
            "Description": "The ID of the new route table to associate with the subnet.",
            "Type": "string",
            "Required": true
        }
    },
    "authorize_egress": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TagSpecifications": {
            "Description": "The tags applied to the security group rule.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "CidrIp": {
            "Description": "Not supported. Use a set of IP permissions to specify the CIDR.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "IpProtocol": {
            "Description": "Not supported. Use a set of IP permissions to specify the protocol name or number.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        }
    },
    "authorize_ingress": {
        "CidrIp": {
            "Description": "The IPv4 address range, in CIDR format. You can't specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all types. If you specify all ICMP types, you must specify all codes.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "integer",
            "Required": false
        },
        "GroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
            "Type": "string",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IpProtocol": {
            "Description": "The IP protocol name (tcp, udp, icmp ) or number (see Protocol Numbers ). To specify icmpv6, use a set of IP permissions.\n[VPC only] Use -1 to specify all protocols. If you specify -1 or a protocol other than tcp, udp, or icmp, traffic on all ports is allowed, regardless of any ports you specify.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "[nondefault VPC] The Amazon Web Services account ID for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all codes. If you specify all ICMP types, you must specify all codes.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "[VPC Only] The tags applied to the security group rule.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "revoke_egress": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityGroupRuleIds": {
            "Description": "The IDs of the security group rules.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "CidrIp": {
            "Description": "Not supported. Use a set of IP permissions to specify the CIDR.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "IpProtocol": {
            "Description": "Not supported. Use a set of IP permissions to specify the protocol name or number.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "Not supported. Use a set of IP permissions to specify the port.",
            "Type": "integer",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "Not supported. Use a set of IP permissions to specify a destination security group.",
            "Type": "string",
            "Required": false
        }
    },
    "revoke_ingress": {
        "CidrIp": {
            "Description": "The CIDR IP address range. You can't specify this parameter when specifying a source security group.",
            "Type": "string",
            "Required": false
        },
        "FromPort": {
            "Description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types.",
            "Type": "integer",
            "Required": false
        },
        "GroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.",
            "Type": "string",
            "Required": false
        },
        "IpPermissions": {
            "Description": "The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IpProtocol": {
            "Description": "The IP protocol name (tcp , udp , icmp ) or number (see Protocol Numbers ). Use -1 to specify all.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupName": {
            "Description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.",
            "Type": "string",
            "Required": false
        },
        "SourceSecurityGroupOwnerId": {
            "Description": "[EC2-Classic] The Amazon Web Services account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.",
            "Type": "string",
            "Required": false
        },
        "ToPort": {
            "Description": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP type.",
            "Type": "integer",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "SecurityGroupRuleIds": {
            "Description": "The IDs of the security group rules.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "copy": {
        "Description": {
            "Description": "A description for the EBS snapshot.",
            "Type": "string",
            "Required": false
        },
        "DestinationOutpostArn": {
            "Description": "The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost. The snapshot must be in the Region for the destination Outpost. You cannot copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.\nFor more information, see Copy snapshots from an Amazon Web Services Region to an Outpost in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "string",
            "Required": false
        },
        "DestinationRegion": {
            "Description": "The destination Region to use in the PresignedUrl parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a PresignedUrl parameter, where it is required.\nThe snapshot copy is sent to the regional endpoint that you sent the HTTP request to (for example, ec2.us-east-1.amazonaws.com ). With the CLI, this is specified using the --region parameter or the default Region in your Amazon Web Services configuration file.",
            "Type": "string",
            "Required": false
        },
        "Encrypted": {
            "Description": "To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see Amazon EBS encryption in the Amazon Elastic Compute Cloud User Guide .",
            "Type": "boolean",
            "Required": false
        },
        "KmsKeyId": {
            "Description": "The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the KMS key using any of the following:\nAmazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "PresignedUrl": {
            "Description": "When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a pre-signed URL. This parameter is optional for unencrypted snapshots. For more information, see Query requests .\nThe PresignedUrl should use the snapshot source endpoint, the CopySnapshot action, and include the SourceRegion, SourceSnapshotId, and DestinationRegion parameters. The PresignedUrl must be signed using Amazon Web Services Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4) in the Amazon Simple Storage Service API Reference. An invalid or improperly signed PresignedUrl will cause the copy operation to fail asynchronously, and the snapshot will move to an error state.",
            "Type": "string",
            "Required": false
        },
        "SourceRegion": {
            "Description": "The ID of the Region that contains the snapshot to be copied.",
            "Type": "string",
            "Required": true
        },
        "TagSpecifications": {
            "Description": "The tags to apply to the new snapshot.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "wait_until_completed": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of snapshot results returned by DescribeSnapshots in paginated output. When this parameter is used, DescribeSnapshots only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeSnapshots request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then DescribeSnapshots returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The NextToken value returned from a previous paginated DescribeSnapshots request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "OwnerIds": {
            "Description": "Scopes the results to snapshots with the specified owners. You can specify a combination of Amazon Web Services account IDs, self, and amazon .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RestorableByUserIds": {
            "Description": "The IDs of the Amazon Web Services accounts that can create volumes from the snapshot.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "attach_to_instance": {
        "Device": {
            "Description": "The device name (for example, /dev/sdh or xvdh ).",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "The ID of the instance.",
            "Type": "string",
            "Required": true
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_status": {
        "Filters": {
            "Description": "The filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of volume results returned by DescribeVolumeStatus in paginated output. When this parameter is used, the request only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then DescribeVolumeStatus returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The NextToken value to include in a future DescribeVolumeStatus request. When the results of the request exceed MaxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "detach_from_instance": {
        "Device": {
            "Description": "The device name.",
            "Type": "string",
            "Required": false
        },
        "Force": {
            "Description": "Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must specify an instance ID.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_io": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "attach_classic_link_instance": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "Groups": {
            "Description": "The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "InstanceId": {
            "Description": "The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "detach_classic_link_instance": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "InstanceId": {
            "Description": "The ID of the instance to unlink from the VPC.",
            "Type": "string",
            "Required": true
        }
    },
    "disable_classic_link": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "enable_classic_link": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "request_vpc_peering_connection": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "PeerOwnerId": {
            "Description": "The Amazon Web Services account ID of the owner of the accepter VPC.\nDefault: Your Amazon Web Services account ID",
            "Type": "string",
            "Required": false
        },
        "PeerVpcId": {
            "Description": "The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.",
            "Type": "string",
            "Required": false
        },
        "PeerRegion": {
            "Description": "The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.\nDefault: The Region in which you make the request.",
            "Type": "string",
            "Required": false
        },
        "TagSpecifications": {
            "Description": "The tags to assign to the peering connection.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "wait_until_available": {
        "Filters": {
            "Description": "One or more filters.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.",
            "Type": "integer",
            "Required": false
        }
    },
    "accept": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    },
    "reject": {
        "DryRun": {
            "Description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .",
            "Type": "boolean",
            "Required": false
        }
    }
}