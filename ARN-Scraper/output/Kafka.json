{
    "batch_associate_scram_secret": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) of the cluster to be updated.",
            "Type": "string",
            "Required": true
        },
        "SecretArnList": {
            "Description": "List of AWS Secrets Manager secret ARNs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_disassociate_scram_secret": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) of the cluster to be updated.",
            "Type": "string",
            "Required": true
        },
        "SecretArnList": {
            "Description": "List of AWS Secrets Manager secret ARNs.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_cluster": {
        "BrokerNodeGroupInfo": {
            "Description": "Information about the broker nodes in the cluster.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ClientAuthentication": {
            "Description": "Includes all client authentication related information.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClusterName": {
            "Description": "The name of the cluster.",
            "Type": "string",
            "Required": true
        },
        "ConfigurationInfo": {
            "Description": "Represents the configuration that you want MSK to use for the brokers in a cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EncryptionInfo": {
            "Description": "Includes all encryption-related information.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnhancedMonitoring": {
            "Description": "Specifies the level of monitoring for the MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.",
            "Type": "string",
            "Required": false
        },
        "OpenMonitoring": {
            "Description": "The settings for open monitoring.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "KafkaVersion": {
            "Description": "The version of Apache Kafka.",
            "Type": "string",
            "Required": true
        },
        "LoggingInfo": {
            "Description": "\nBrokerLogs (dict)[REQUIRED]\nCloudWatchLogs (dict) --\nEnabled (boolean)[REQUIRED]\nLogGroup (string) --\n\n\nFirehose (dict) --\nDeliveryStream (string) --\nEnabled (boolean)[REQUIRED]\n\n\nS3 (dict) --\nBucket (string) --\nEnabled (boolean)[REQUIRED]\nPrefix (string) --\n\n\n\n\n\n",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "NumberOfBrokerNodes": {
            "Description": "The number of broker nodes in the cluster.",
            "Type": "integer",
            "Required": true
        },
        "Tags": {
            "Description": "Create tags when creating the cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_cluster_v2": {
        "ClusterName": {
            "Description": "The name of the cluster.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A map of tags that you want the cluster to have.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Provisioned": {
            "Description": "Information about the provisioned cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Serverless": {
            "Description": "Information about the serverless cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_configuration": {
        "Description": {
            "Description": "The description of the configuration.",
            "Type": "string",
            "Required": false
        },
        "KafkaVersions": {
            "Description": "The versions of Apache Kafka with which you can use this MSK configuration.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Name": {
            "Description": "The name of the configuration.",
            "Type": "string",
            "Required": true
        },
        "ServerProperties": {
            "Description": "Contents of the server.propertiesfile. When using the API, you must ensure that the contents of the file are base64 encoded. When using the AWS Management Console, the SDK, or the AWS CLI, the contents of server.propertiescan be in plaintext.",
            "Type": "bytes",
            "Required": true
        }
    },
    "delete_cluster": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The current version of the MSK cluster.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_configuration": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_cluster": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_cluster_operation": {
        "ClusterOperationArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the MSK cluster operation.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_cluster_v2": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_configuration": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration and all of its revisions.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_configuration_revision": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration and all of its revisions.",
            "Type": "string",
            "Required": true
        },
        "Revision": {
            "Description": "A string that uniquely identifies a revision of an MSK configuration.",
            "Type": "integer",
            "Required": true
        }
    },
    "get_bootstrap_brokers": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        }
    },
    "get_compatible_kafka_versions": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) of the cluster check.",
            "Type": "string",
            "Required": false
        }
    },
    "list_cluster_operations": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_clusters": {
        "ClusterNameFilter": {
            "Description": "Specify a prefix of the name of the clusters that you want to list. The service lists all the clusters whose names start with this prefix.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_clusters_v2": {
        "ClusterNameFilter": {
            "Description": "Specify a prefix of the names of the clusters that you want to list. The service lists all the clusters whose names start with this prefix.",
            "Type": "string",
            "Required": false
        },
        "ClusterTypeFilter": {
            "Description": "Specify either PROVISIONED or SERVERLESS.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_configuration_revisions": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies an MSK configuration and all of its revisions.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_configurations": {
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_kafka_versions": {
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_nodes": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the response. If there are more results, the response includes a NextToken parameter.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The paginated results marker. When the result of the operation is truncated, the call returns NextToken in the response. To get the next batch, provide this token in your next request.",
            "Type": "string",
            "Required": false
        }
    },
    "list_scram_secrets": {
        "ClusterArn": {
            "Description": "The arn of the cluster.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maxResults of the query.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The nextToken of the query.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the resource that's associated with the tags.",
            "Type": "string",
            "Required": true
        }
    },
    "reboot_broker": {
        "BrokerIds": {
            "Description": "The list of broker IDs to be rebooted. The reboot-broker operation supports rebooting one broker at a time.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) of the cluster to be updated.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the resource that's associated with the tags.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The key-value pair for the resource tag.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the resource that's associated with the tags.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "Tag keys must be unique for a given cluster. In addition, the following restrictions apply:",
            "Type": "list",
            "Required": true,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "update_broker_count": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The version of cluster to update from. A successful operation will then generate a new version.",
            "Type": "string",
            "Required": true
        },
        "TargetNumberOfBrokerNodes": {
            "Description": "The number of broker nodes that you want the cluster to have after this operation completes successfully.",
            "Type": "integer",
            "Required": true
        }
    },
    "update_broker_storage": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The version of cluster to update from. A successful operation will then generate a new version.",
            "Type": "string",
            "Required": true
        },
        "TargetBrokerEBSVolumeInfo": {
            "Description": "Describes the target volume size and the ID of the broker to apply the update to.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_broker_type": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The cluster version that you want to change. After this operation completes successfully, the cluster will have a new version.",
            "Type": "string",
            "Required": true
        },
        "TargetInstanceType": {
            "Description": "The Amazon MSK broker type that you want all of the brokers in this cluster to be.",
            "Type": "string",
            "Required": true
        }
    },
    "update_cluster_configuration": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "ConfigurationInfo": {
            "Description": "Represents the configuration that you want MSK to use for the brokers in a cluster.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "CurrentVersion": {
            "Description": "The version of the cluster that needs to be updated.",
            "Type": "string",
            "Required": true
        }
    },
    "update_cluster_kafka_version": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) of the cluster to be updated.",
            "Type": "string",
            "Required": true
        },
        "ConfigurationInfo": {
            "Description": "The custom configuration that should be applied on the new version of cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CurrentVersion": {
            "Description": "Current cluster version.",
            "Type": "string",
            "Required": true
        },
        "TargetKafkaVersion": {
            "Description": "Target Kafka version.",
            "Type": "string",
            "Required": true
        }
    },
    "update_configuration": {
        "Arn": {
            "Description": "The Amazon Resource Name (ARN) of the configuration.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the configuration revision.",
            "Type": "string",
            "Required": false
        },
        "ServerProperties": {
            "Description": "Contents of the server.propertiesfile. When using the API, you must ensure that the contents of the file are base64 encoded. When using the AWS Management Console, the SDK, or the AWS CLI, the contents of server.propertiescan be in plaintext.",
            "Type": "bytes",
            "Required": true
        }
    },
    "update_connectivity": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) of the configuration.",
            "Type": "string",
            "Required": true
        },
        "ConnectivityInfo": {
            "Description": "Information about the broker access configuration.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "CurrentVersion": {
            "Description": "The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.",
            "Type": "string",
            "Required": true
        }
    },
    "update_monitoring": {
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.",
            "Type": "string",
            "Required": true
        },
        "EnhancedMonitoring": {
            "Description": "Specifies which Apache Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for this cluster.",
            "Type": "string",
            "Required": false
        },
        "OpenMonitoring": {
            "Description": "The settings for open monitoring.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LoggingInfo": {
            "Description": "\nBrokerLogs (dict)[REQUIRED]\nCloudWatchLogs (dict) --\nEnabled (boolean)[REQUIRED]\nLogGroup (string) --\n\n\nFirehose (dict) --\nDeliveryStream (string) --\nEnabled (boolean)[REQUIRED]\n\n\nS3 (dict) --\nBucket (string) --\nEnabled (boolean)[REQUIRED]\nPrefix (string) --\n\n\n\n\n\n",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_security": {
        "ClientAuthentication": {
            "Description": "Includes all client authentication related information.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClusterArn": {
            "Description": "The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "Type": "string",
            "Required": true
        },
        "CurrentVersion": {
            "Description": "The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.",
            "Type": "string",
            "Required": true
        },
        "EncryptionInfo": {
            "Description": "Includes all encryption-related information.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "paginate": {
        "ClusterArn": {
            "Description": "The arn of the cluster.",
            "Type": "string",
            "Required": true
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}