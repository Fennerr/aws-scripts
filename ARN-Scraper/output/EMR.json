{
    "add_instance_fleet": {
        "ClusterId": {
            "Description": "The unique identifier of the cluster.",
            "Type": "string",
            "Required": true
        },
        "InstanceFleet": {
            "Description": "Specifies the configuration of the instance fleet.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "add_instance_groups": {
        "InstanceGroups": {
            "Description": "Instance groups to add.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "JobFlowId": {
            "Description": "Job flow in which to add the instance groups.",
            "Type": "string",
            "Required": true
        }
    },
    "add_job_flow_steps": {
        "JobFlowId": {
            "Description": "A string that uniquely identifies the job flow. This identifier is returned by  RunJobFlow and can also be obtained from  ListClusters .",
            "Type": "string",
            "Required": true
        },
        "Steps": {
            "Description": "A list of  StepConfig to be executed by the job flow.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ExecutionRoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: arn:partition:service:region:account:resource .\nFor example, arn:aws:iam::1234567890:role/ReadOnly is a correctly formatted runtime role ARN.",
            "Type": "string",
            "Required": false
        }
    },
    "add_tags": {
        "ResourceId": {
            "Description": "The Amazon EMR resource identifier to which tags will be added. For example, a cluster identifier or an Amazon EMR Studio ID.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of tags to associate with a resource. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "cancel_steps": {
        "ClusterId": {
            "Description": "The ClusterID for the specified steps that will be canceled. Use  RunJobFlow and  ListClusters to get ClusterIDs.",
            "Type": "string",
            "Required": true
        },
        "StepIds": {
            "Description": "The list of StepIDs to cancel. Use  ListSteps to get steps and their states for the specified cluster.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "StepCancellationOption": {
            "Description": "The option to choose to cancel RUNNING steps. By default, the value is SEND_INTERRUPT .",
            "Type": "string",
            "Required": false
        }
    },
    "create_security_configuration": {
        "Name": {
            "Description": "The name of the security configuration.",
            "Type": "string",
            "Required": true
        },
        "SecurityConfiguration": {
            "Description": "The security configuration details in JSON format. For JSON parameters and examples, see Use Security Configurations to Set Up Cluster Security in the Amazon EMR Management Guide .",
            "Type": "string",
            "Required": true
        }
    },
    "create_studio": {
        "Name": {
            "Description": "A descriptive name for the Amazon EMR Studio.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "A detailed description of the Amazon EMR Studio.",
            "Type": "string",
            "Required": false
        },
        "AuthMode": {
            "Description": "Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO.",
            "Type": "string",
            "Required": true
        },
        "VpcId": {
            "Description": "The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.",
            "Type": "string",
            "Required": true
        },
        "SubnetIds": {
            "Description": "A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ServiceRole": {
            "Description": "The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.",
            "Type": "string",
            "Required": true
        },
        "UserRole": {
            "Description": "The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a UserRole when you use Amazon Web Services SSO authentication. The permissions attached to the UserRole can be scoped down for each user or group using session policies.",
            "Type": "string",
            "Required": false
        },
        "WorkspaceSecurityGroupId": {
            "Description": "The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId .",
            "Type": "string",
            "Required": true
        },
        "EngineSecurityGroupId": {
            "Description": "The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId .",
            "Type": "string",
            "Required": true
        },
        "DefaultS3Location": {
            "Description": "The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.",
            "Type": "string",
            "Required": true
        },
        "IdpAuthUrl": {
            "Description": "The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.",
            "Type": "string",
            "Required": false
        },
        "IdpRelayStateParameterName": {
            "Description": "The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource . Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags to associate with the Amazon EMR Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_studio_session_mapping": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio to which the user or group will be mapped.",
            "Type": "string",
            "Required": true
        },
        "IdentityId": {
            "Description": "The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store. For more information, see UserId and GroupId in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified, but not both.",
            "Type": "string",
            "Required": false
        },
        "IdentityName": {
            "Description": "The name of the user or group. For more information, see UserName and DisplayName in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified, but not both.",
            "Type": "string",
            "Required": false
        },
        "IdentityType": {
            "Description": "Specifies whether the identity to map to the Amazon EMR Studio is a user or a group.",
            "Type": "string",
            "Required": true
        },
        "SessionPolicyArn": {
            "Description": "The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role. For more information, see Create an EMR Studio User Role with Session Policies .",
            "Type": "string",
            "Required": true
        }
    },
    "delete_security_configuration": {
        "Name": {
            "Description": "The name of the security configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_studio": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_studio_session_mapping": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio.",
            "Type": "string",
            "Required": true
        },
        "IdentityId": {
            "Description": "The globally unique identifier (GUID) of the user or group to remove from the Amazon EMR Studio. For more information, see UserId and GroupId in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified.",
            "Type": "string",
            "Required": false
        },
        "IdentityName": {
            "Description": "The name of the user name or group to remove from the Amazon EMR Studio. For more information, see UserName and DisplayName in the Amazon Web Services SSO Store API Reference . Either IdentityName or IdentityId must be specified.",
            "Type": "string",
            "Required": false
        },
        "IdentityType": {
            "Description": "Specifies whether the identity to delete from the Amazon EMR Studio is a user or a group.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_cluster": {
        "ClusterId": {
            "Description": "The identifier of the cluster to describe.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_job_flows": {
        "CreatedAfter": {
            "Description": "Return only job flows created after this date and time.",
            "Type": "datetime",
            "Required": false
        },
        "CreatedBefore": {
            "Description": "Return only job flows created before this date and time.",
            "Type": "datetime",
            "Required": false
        },
        "JobFlowIds": {
            "Description": "Return only job flows whose job flow ID is contained in this list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "JobFlowStates": {
            "Description": "Return only job flows whose state is contained in this list.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_notebook_execution": {
        "NotebookExecutionId": {
            "Description": "The unique identifier of the notebook execution.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_release_label": {
        "ReleaseLabel": {
            "Description": "The target release label to be described.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token. Reserved for future use. Currently set to null.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "Reserved for future use. Currently set to null.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_security_configuration": {
        "Name": {
            "Description": "The name of the security configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_step": {
        "ClusterId": {
            "Description": "The identifier of the cluster with steps to describe.",
            "Type": "string",
            "Required": true
        },
        "StepId": {
            "Description": "The identifier of the step to describe.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_studio": {
        "StudioId": {
            "Description": "The Amazon EMR Studio ID.",
            "Type": "string",
            "Required": true
        }
    },
    "get_auto_termination_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of the Amazon EMR cluster for which the auto-termination policy will be fetched.",
            "Type": "string",
            "Required": true
        }
    },
    "get_block_public_access_configuration": "No parameters defined",
    "get_managed_scaling_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of the cluster for which the managed scaling policy will be fetched.",
            "Type": "string",
            "Required": true
        }
    },
    "get_studio_session_mapping": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio.",
            "Type": "string",
            "Required": true
        },
        "IdentityId": {
            "Description": "The globally unique identifier (GUID) of the user or group. For more information, see UserId and GroupId in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified.",
            "Type": "string",
            "Required": false
        },
        "IdentityName": {
            "Description": "The name of the user or group to fetch. For more information, see UserName and DisplayName in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified.",
            "Type": "string",
            "Required": false
        },
        "IdentityType": {
            "Description": "Specifies whether the identity to fetch is a user or a group.",
            "Type": "string",
            "Required": true
        }
    },
    "list_bootstrap_actions": {
        "ClusterId": {
            "Description": "The cluster identifier for the bootstrap actions to list.",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "The pagination token that indicates the next set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_clusters": {
        "CreatedAfter": {
            "Description": "The creation date and time beginning value filter for listing clusters.",
            "Type": "datetime",
            "Required": false
        },
        "CreatedBefore": {
            "Description": "The creation date and time end value filter for listing clusters.",
            "Type": "datetime",
            "Required": false
        },
        "ClusterStates": {
            "Description": "The cluster state filters to apply when listing clusters. Clusters that change state while this action runs may be not be returned as expected in the list of clusters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Marker": {
            "Description": "The pagination token that indicates the next set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_instance_fleets": {
        "ClusterId": {
            "Description": "The unique identifier of the cluster.",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "The pagination token that indicates the next set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_instance_groups": {
        "ClusterId": {
            "Description": "The identifier of the cluster for which to list the instance groups.",
            "Type": "string",
            "Required": true
        },
        "Marker": {
            "Description": "The pagination token that indicates the next set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_instances": {
        "ClusterId": {
            "Description": "The identifier of the cluster for which to list the instances.",
            "Type": "string",
            "Required": true
        },
        "InstanceGroupId": {
            "Description": "The identifier of the instance group for which to list the instances.",
            "Type": "string",
            "Required": false
        },
        "InstanceGroupTypes": {
            "Description": "The type of instance group for which to list the instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InstanceFleetId": {
            "Description": "The unique identifier of the instance fleet.",
            "Type": "string",
            "Required": false
        },
        "InstanceFleetType": {
            "Description": "The node type of the instance fleet. For example MASTER, CORE, or TASK.",
            "Type": "string",
            "Required": false
        },
        "InstanceStates": {
            "Description": "A list of instance states that will filter the instances returned with this request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Marker": {
            "Description": "The pagination token that indicates the next set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_notebook_executions": {
        "EditorId": {
            "Description": "The unique ID of the editor associated with the notebook execution.",
            "Type": "string",
            "Required": false
        },
        "Status": {
            "Description": "The status filter for listing notebook executions.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "From": {
            "Description": "The beginning of time range filter for listing notebook executions. The default is the timestamp of 30 days ago.",
            "Type": "datetime",
            "Required": false
        },
        "To": {
            "Description": "The end of time range filter for listing notebook executions. The default is the current timestamp.",
            "Type": "datetime",
            "Required": false
        },
        "Marker": {
            "Description": "The pagination token, returned by a previous ListNotebookExecutions call, that indicates the start of the list for this ListNotebookExecutions call.",
            "Type": "string",
            "Required": false
        }
    },
    "list_release_labels": {
        "Filters": {
            "Description": "Filters the results of the request. Prefix specifies the prefix of release labels to return. Application specifies the application (with/without version) of release labels to return.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "NextToken": {
            "Description": "Specifies the next page of results. If NextToken is not specified, which is usually the case for the first request of ListReleaseLabels, the first page of results are determined by other filtering parameters or by the latest version. The ListReleaseLabels request fails if the identity (Amazon Web Services account ID) and all filtering parameters are different from the original request, or if the NextToken is expired or tampered with.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "Defines the maximum number of release labels to return in a single response. The default is 100 .",
            "Type": "integer",
            "Required": false
        }
    },
    "list_security_configurations": {
        "Marker": {
            "Description": "The pagination token that indicates the set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_steps": {
        "ClusterId": {
            "Description": "The identifier of the cluster for which to list the steps.",
            "Type": "string",
            "Required": true
        },
        "StepStates": {
            "Description": "The filter to limit the step list based on certain states.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StepIds": {
            "Description": "The filter to limit the step list based on the identifier of the steps. You can specify a maximum of ten Step IDs. The character constraint applies to the overall length of the array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Marker": {
            "Description": "The maximum number of steps that a single ListSteps action returns is 50. To return a longer list of steps, use multiple ListSteps actions along with the Marker parameter, which is a pagination token that indicates the next set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_studio_session_mappings": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio.",
            "Type": "string",
            "Required": false
        },
        "IdentityType": {
            "Description": "Specifies whether to return session mappings for users or groups. If not specified, the results include session mapping details for both users and groups.",
            "Type": "string",
            "Required": false
        },
        "Marker": {
            "Description": "The pagination token that indicates the set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "list_studios": {
        "Marker": {
            "Description": "The pagination token that indicates the set of results to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "modify_cluster": {
        "ClusterId": {
            "Description": "The unique identifier of the cluster.",
            "Type": "string",
            "Required": true
        },
        "StepConcurrencyLevel": {
            "Description": "The number of steps that can be executed concurrently. You can specify a minimum of 1 step and a maximum of 256 steps. We recommend that you do not change this parameter while steps are running or the ActionOnFailure setting may not behave as expected. For more information see  Step$ActionOnFailure .",
            "Type": "integer",
            "Required": false
        }
    },
    "modify_instance_fleet": {
        "ClusterId": {
            "Description": "The unique identifier of the cluster.",
            "Type": "string",
            "Required": true
        },
        "InstanceFleet": {
            "Description": "The configuration parameters of the instance fleet.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "modify_instance_groups": {
        "ClusterId": {
            "Description": "The ID of the cluster to which the instance group belongs.",
            "Type": "string",
            "Required": false
        },
        "InstanceGroups": {
            "Description": "Instance groups to change.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "put_auto_scaling_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.",
            "Type": "string",
            "Required": true
        },
        "InstanceGroupId": {
            "Description": "Specifies the ID of the instance group to which the automatic scaling policy is applied.",
            "Type": "string",
            "Required": true
        },
        "AutoScalingPolicy": {
            "Description": "Specifies the definition of the automatic scaling policy.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "put_auto_termination_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of the Amazon EMR cluster to which the auto-termination policy will be attached.",
            "Type": "string",
            "Required": true
        },
        "AutoTerminationPolicy": {
            "Description": "Specifies the auto-termination policy to attach to the cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "put_block_public_access_configuration": {
        "BlockPublicAccessConfiguration": {
            "Description": "A configuration for Amazon EMR block public access. The configuration applies to all clusters created in your account for the current Region. The configuration specifies whether block public access is enabled. If block public access is enabled, security groups associated with the cluster cannot have rules that allow inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using PermittedPublicSecurityGroupRuleRanges in the BlockPublicAccessConfiguration. By default, Port 22 (SSH) is an exception, and public access is allowed on this port. You can change this by updating BlockPublicSecurityGroupRules to remove the exception.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "put_managed_scaling_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of an EMR cluster where the managed scaling policy is attached.",
            "Type": "string",
            "Required": true
        },
        "ManagedScalingPolicy": {
            "Description": "Specifies the constraints for the managed scaling policy.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "remove_auto_scaling_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.",
            "Type": "string",
            "Required": true
        },
        "InstanceGroupId": {
            "Description": "Specifies the ID of the instance group to which the scaling policy is applied.",
            "Type": "string",
            "Required": true
        }
    },
    "remove_auto_termination_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of the Amazon EMR cluster from which the auto-termination policy will be removed.",
            "Type": "string",
            "Required": true
        }
    },
    "remove_managed_scaling_policy": {
        "ClusterId": {
            "Description": "Specifies the ID of the cluster from which the managed scaling policy will be removed.",
            "Type": "string",
            "Required": true
        }
    },
    "remove_tags": {
        "ResourceId": {
            "Description": "The Amazon EMR resource identifier from which tags will be removed. For example, a cluster identifier or an Amazon EMR Studio ID.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of tag keys to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "run_job_flow": {
        "Name": {
            "Description": "The name of the job flow.",
            "Type": "string",
            "Required": true
        },
        "LogUri": {
            "Description": "The location in Amazon S3 to write the log files of the job flow. If a value is not provided, logs are not created.",
            "Type": "string",
            "Required": false
        },
        "LogEncryptionKmsKeyId": {
            "Description": "The KMS key used for encrypting log files. If a value is not provided, the logs remain encrypted by AES-256. This attribute is only available with Amazon EMR version 5.30.0 and later, excluding Amazon EMR 6.0.0.",
            "Type": "string",
            "Required": false
        },
        "AdditionalInfo": {
            "Description": "A JSON string for selecting additional features.",
            "Type": "string",
            "Required": false
        },
        "AmiVersion": {
            "Description": "Applies only to Amazon EMR AMI versions 3.x and 2.x. For Amazon EMR releases 4.0 and later, ReleaseLabel is used. To specify a custom AMI, use CustomAmiID .",
            "Type": "string",
            "Required": false
        },
        "ReleaseLabel": {
            "Description": "The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster. Release labels are in the form emr-x.x.x , where x.x.x is an Amazon EMR release version such as emr-5.14.0 . For more information about Amazon EMR release versions and included application versions and features, see https://docs.aws.amazon.com/emr/latest/ReleaseGuide/ . The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use AmiVersion .",
            "Type": "string",
            "Required": false
        },
        "Instances": {
            "Description": "A specification of the number and type of Amazon EC2 instances.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Steps": {
            "Description": "A list of steps to run.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "BootstrapActions": {
            "Description": "A list of bootstrap actions to run before Hadoop starts on the cluster nodes.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SupportedProducts": {
            "Description": "A list of strings that indicates third-party software to use. For more information, see the Amazon EMR Developer Guide. Currently supported values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NewSupportedProducts": {
            "Description": "A list of strings that indicates third-party software to use with the job flow that accepts a user argument list. EMR accepts and forwards the argument list to the corresponding installation script as bootstrap action arguments. For more information, see \"Launch a Job Flow on the MapR Distribution for Hadoop\" in the Amazon EMR Developer Guide. Supported values are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "Applications": {
            "Description": "Applies to Amazon EMR releases 4.0 and later. A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the Amazon EMRRelease Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Configurations": {
            "Description": "For Amazon EMR releases 4.0 and later. The list of configurations supplied for the EMR cluster you are creating.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "VisibleToAllUsers": {
            "Description": "Set this value to true so that IAM principals in the Amazon Web Services account associated with the cluster can perform EMR actions on the cluster that their IAM policies allow. This value defaults to true for clusters created using the EMR API or the CLI create-cluster command.\nWhen set to false, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform EMR actions for the cluster, regardless of the IAM permissions policies attached to other IAM principals. For more information, see Understanding the EMR Cluster VisibleToAllUsers Setting in the Amazon EMRManagement Guide .",
            "Type": "boolean",
            "Required": false
        },
        "JobFlowRole": {
            "Description": "Also called instance profile and EC2 role. An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role. The default role is EMR_EC2_DefaultRole . In order to use the default role, you must have already created it using the CLI or console.",
            "Type": "string",
            "Required": false
        },
        "ServiceRole": {
            "Description": "The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags to associate with a cluster and propagate to Amazon EC2 instances.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SecurityConfiguration": {
            "Description": "The name of a security configuration to apply to the cluster.",
            "Type": "string",
            "Required": false
        },
        "AutoScalingRole": {
            "Description": "An IAM role for automatic scaling policies. The default role is EMR_AutoScaling_DefaultRole . The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.",
            "Type": "string",
            "Required": false
        },
        "ScaleDownBehavior": {
            "Description": "Specifies the way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. TERMINATE_AT_INSTANCE_HOUR indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. TERMINATE_AT_TASK_COMPLETION indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. TERMINATE_AT_TASK_COMPLETION available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.",
            "Type": "string",
            "Required": false
        },
        "CustomAmiId": {
            "Description": "Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI. If specified, Amazon EMR uses this AMI when it launches cluster EC2 instances. For more information about custom AMIs in Amazon EMR, see Using a Custom AMI in the Amazon EMR Management Guide. If omitted, the cluster uses the base Linux AMI for the ReleaseLabel specified. For Amazon EMR versions 2.x and 3.x, use AmiVersion instead.\nFor information about creating a custom AMI, see Creating an Amazon EBS-Backed Linux AMI in the Amazon Elastic Compute Cloud User Guide for Linux Instances. For information about finding an AMI ID, see Finding a Linux AMI .",
            "Type": "string",
            "Required": false
        },
        "EbsRootVolumeSize": {
            "Description": "The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.",
            "Type": "integer",
            "Required": false
        },
        "RepoUpgradeOnBoot": {
            "Description": "Applies only when CustomAmiID is used. Specifies which updates from the Amazon Linux AMI package repositories to apply automatically when the instance boots using the AMI. If omitted, the default is SECURITY , which indicates that only security updates are applied. If NONE is specified, no updates are applied, and all updates must be applied manually.",
            "Type": "string",
            "Required": false
        },
        "KerberosAttributes": {
            "Description": "Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see Use Kerberos Authentication in the Amazon EMR Management Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "StepConcurrencyLevel": {
            "Description": "Specifies the number of steps that can be executed concurrently. The default value is 1 . The maximum value is 256 .",
            "Type": "integer",
            "Required": false
        },
        "ManagedScalingPolicy": {
            "Description": "The specified managed scaling policy for an Amazon EMR cluster.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "PlacementGroupConfigs": {
            "Description": "The specified placement group configuration for an Amazon EMR cluster.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AutoTerminationPolicy": {
            "Description": "An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see Control cluster termination .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "OSReleaseLabel": {
            "Description": "Specifies a particular Amazon Linux release for all nodes in a cluster launch RunJobFlow request. If a release is not specified, Amazon EMR uses the latest validated Amazon Linux release for cluster launch.",
            "Type": "string",
            "Required": false
        }
    },
    "set_termination_protection": {
        "JobFlowIds": {
            "Description": "A list of strings that uniquely identify the clusters to protect. This identifier is returned by  RunJobFlow and can also be obtained from  DescribeJobFlows .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "TerminationProtected": {
            "Description": "A Boolean that indicates whether to protect the cluster and prevent the Amazon EC2 instances in the cluster from shutting down due to API calls, user intervention, or job-flow error.",
            "Type": "boolean",
            "Required": true
        }
    },
    "set_visible_to_all_users": {
        "JobFlowIds": {
            "Description": "The unique identifier of the job flow (cluster).",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "VisibleToAllUsers": {
            "Description": "A value of true indicates that an IAM principal in the Amazon Web Services account can perform EMR actions on the cluster that the IAM policies attached to the principal allow. A value of false indicates that only the IAM principal that created the cluster and the Amazon Web Services root user can perform EMR actions on the cluster.",
            "Type": "boolean",
            "Required": true
        }
    },
    "start_notebook_execution": {
        "EditorId": {
            "Description": "The unique identifier of the EMR Notebook to use for notebook execution.",
            "Type": "string",
            "Required": true
        },
        "RelativePath": {
            "Description": "The path and file name of the notebook file for this execution, relative to the path specified for the EMR Notebook. For example, if you specify a path of s3://MyBucket/MyNotebooks when you create an EMR Notebook for a notebook with an ID of e-ABCDEFGHIJK1234567890ABCD (the EditorID of this request), and you specify a RelativePath of my_notebook_executions/notebook_execution.ipynb, the location of the file for the notebook execution is s3://MyBucket/MyNotebooks/e-ABCDEFGHIJK1234567890ABCD/my_notebook_executions/notebook_execution.ipynb .",
            "Type": "string",
            "Required": true
        },
        "NotebookExecutionName": {
            "Description": "An optional name for the notebook execution.",
            "Type": "string",
            "Required": false
        },
        "NotebookParams": {
            "Description": "Input parameters in JSON format passed to the EMR Notebook at runtime for execution.",
            "Type": "string",
            "Required": false
        },
        "ExecutionEngine": {
            "Description": "Specifies the execution engine (cluster) that runs the notebook execution.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ServiceRole": {
            "Description": "The name or ARN of the IAM role that is used as the service role for Amazon EMR (the EMR role) for the notebook execution.",
            "Type": "string",
            "Required": true
        },
        "NotebookInstanceSecurityGroupId": {
            "Description": "The unique identifier of the Amazon EC2 security group to associate with the EMR Notebook for this notebook execution.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A list of tags associated with a notebook execution. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters and an optional value string with a maximum of 256 characters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "stop_notebook_execution": {
        "NotebookExecutionId": {
            "Description": "The unique identifier of the notebook execution.",
            "Type": "string",
            "Required": true
        }
    },
    "terminate_job_flows": {
        "JobFlowIds": {
            "Description": "A list of job flows to be shut down.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_studio": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "A descriptive name for the Amazon EMR Studio.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "A detailed description to assign to the Amazon EMR Studio.",
            "Type": "string",
            "Required": false
        },
        "SubnetIds": {
            "Description": "A list of subnet IDs to associate with the Amazon EMR Studio. The list can include new subnet IDs, but must also include all of the subnet IDs previously associated with the Studio. The list order does not matter. A Studio can have a maximum of 5 subnets. The subnets must belong to the same VPC as the Studio.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DefaultS3Location": {
            "Description": "The Amazon S3 location to back up Workspaces and notebook files for the Amazon EMR Studio.",
            "Type": "string",
            "Required": false
        }
    },
    "update_studio_session_mapping": {
        "StudioId": {
            "Description": "The ID of the Amazon EMR Studio.",
            "Type": "string",
            "Required": true
        },
        "IdentityId": {
            "Description": "The globally unique identifier (GUID) of the user or group. For more information, see UserId and GroupId in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified.",
            "Type": "string",
            "Required": false
        },
        "IdentityName": {
            "Description": "The name of the user or group to update. For more information, see UserName and DisplayName in the Amazon Web Services SSO Identity Store API Reference . Either IdentityName or IdentityId must be specified.",
            "Type": "string",
            "Required": false
        },
        "IdentityType": {
            "Description": "Specifies whether the identity to update is a user or a group.",
            "Type": "string",
            "Required": true
        },
        "SessionPolicyArn": {
            "Description": "The Amazon Resource Name (ARN) of the session policy to associate with the specified user or group.",
            "Type": "string",
            "Required": true
        }
    },
    "paginate": {
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "ClusterId": {
            "Description": "The identifier of the cluster with steps to describe.",
            "Type": "string",
            "Required": true
        },
        "StepId": {
            "Description": "The identifier of the step to describe.",
            "Type": "string",
            "Required": true
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}