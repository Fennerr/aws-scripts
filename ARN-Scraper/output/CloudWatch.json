{
    "delete_alarms": {
        "AlarmNames": {
            "Description": "The alarms to be deleted.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_anomaly_detector": {
        "Namespace": {
            "Description": "The namespace associated with the anomaly detection model to delete.",
            "Type": "string",
            "Required": false
        },
        "MetricName": {
            "Description": "The metric name associated with the anomaly detection model to delete.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The metric dimensions associated with the anomaly detection model to delete.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Stat": {
            "Description": "The statistic associated with the anomaly detection model to delete.",
            "Type": "string",
            "Required": false
        },
        "SingleMetricAnomalyDetector": {
            "Description": "A single metric anomaly detector to be deleted.\nWhen using SingleMetricAnomalyDetector, you cannot include the following parameters in the same operation:\nInstead, specify the single metric anomaly detector attributes as part of the SingleMetricAnomalyDetector property.",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        },
        "MetricMathAnomalyDetector": {
            "Description": "The metric math anomaly detector to be deleted.\nWhen using MetricMathAnomalyDetector, you cannot include following parameters in the same operation:\nInstead, specify the metric math anomaly detector attributes as part of the MetricMathAnomalyDetector property.",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        }
    },
    "delete_dashboards": {
        "DashboardNames": {
            "Description": "The dashboards to be deleted. This parameter is required.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_insight_rules": {
        "RuleNames": {
            "Description": "An array of the rule names to delete. If you need to find out the names of your rules, use DescribeInsightRules .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_metric_stream": {
        "Name": {
            "Description": "The name of the metric stream to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_alarm_history": {
        "AlarmName": {
            "Description": "The name of the alarm.",
            "Type": "string",
            "Required": false
        },
        "AlarmTypes": {
            "Description": "Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "HistoryItemType": {
            "Description": "The type of alarm histories to retrieve.",
            "Type": "string",
            "Required": false
        },
        "StartDate": {
            "Description": "The starting date to retrieve alarm history.",
            "Type": "datetime",
            "Required": false
        },
        "EndDate": {
            "Description": "The ending date to retrieve alarm history.",
            "Type": "datetime",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of alarm history records to retrieve.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to indicate that there is more data available.",
            "Type": "string",
            "Required": false
        },
        "ScanBy": {
            "Description": "Specified whether to return the newest or oldest alarm history first. Specify TimestampDescending to have the newest event history returned first, and specify TimestampAscending to have the oldest history returned first.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_alarms": {
        "AlarmNames": {
            "Description": "The names of the alarms to retrieve information about.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AlarmNamePrefix": {
            "Description": "An alarm name prefix. If you specify this parameter, you receive information about all alarms that have names that start with this prefix.\nIf this parameter is specified, you cannot specify AlarmNames .",
            "Type": "string",
            "Required": false
        },
        "AlarmTypes": {
            "Description": "Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ChildrenOfAlarmName": {
            "Description": "If you use this parameter and specify the name of a composite alarm, the operation returns information about the \"children\" alarms of the alarm you specify. These are the metric alarms and composite alarms referenced in the AlarmRule field of the composite alarm that you specify in ChildrenOfAlarmName. Information about the composite alarm that you name in ChildrenOfAlarmName is not returned.\nIf you specify ChildrenOfAlarmName, you cannot specify any other parameters in the request except for MaxRecords and NextToken. If you do so, you receive a validation error.",
            "Type": "string",
            "Required": false
        },
        "ParentsOfAlarmName": {
            "Description": "If you use this parameter and specify the name of a metric or composite alarm, the operation returns information about the \"parent\" alarms of the alarm you specify. These are the composite alarms that have AlarmRule parameters that reference the alarm named in ParentsOfAlarmName. Information about the alarm that you specify in ParentsOfAlarmName is not returned.\nIf you specify ParentsOfAlarmName, you cannot specify any other parameters in the request except for MaxRecords and NextToken. If you do so, you receive a validation error.",
            "Type": "string",
            "Required": false
        },
        "StateValue": {
            "Description": "Specify this parameter to receive information only about alarms that are currently in the state that you specify.",
            "Type": "string",
            "Required": false
        },
        "ActionPrefix": {
            "Description": "Use this parameter to filter the results of the operation to only those alarms that use a certain alarm action. For example, you could specify the ARN of an SNS topic to find all alarms that send notifications to that topic.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of alarm descriptions to retrieve.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to indicate that there is more data available.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_alarms_for_metric": {
        "MetricName": {
            "Description": "The name of the metric.",
            "Type": "string",
            "Required": true
        },
        "Namespace": {
            "Description": "The namespace of the metric.",
            "Type": "string",
            "Required": true
        },
        "Statistic": {
            "Description": "The statistic for the metric, other than percentiles. For percentile statistics, use ExtendedStatistics .",
            "Type": "string",
            "Required": false
        },
        "ExtendedStatistic": {
            "Description": "The percentile statistic for the metric. Specify a value between p0.0 and p100.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Period": {
            "Description": "The period, in seconds, over which the statistic is applied.",
            "Type": "integer",
            "Required": false
        },
        "Unit": {
            "Description": "The unit for the metric.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_anomaly_detectors": {
        "NextToken": {
            "Description": "Use the token returned by the previous operation to request the next page of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in one operation. The maximum value that you can specify is 100.\nTo retrieve the remaining results, make another call with the returned NextToken value.",
            "Type": "integer",
            "Required": false
        },
        "Namespace": {
            "Description": "Limits the results to only the anomaly detection models that are associated with the specified namespace.",
            "Type": "string",
            "Required": false
        },
        "MetricName": {
            "Description": "Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they're all returned.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they're all returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AnomalyDetectorTypes": {
            "Description": "The anomaly detector types to request when using DescribeAnomalyDetectorsInput. If empty, defaults to SINGLE_METRIC .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_insight_rules": {
        "NextToken": {
            "Description": "Include this value, if it was returned by the previous operation, to get the next set of rules.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in one operation. If you omit this parameter, the default of 500 is used.",
            "Type": "integer",
            "Required": false
        }
    },
    "disable_alarm_actions": {
        "AlarmNames": {
            "Description": "The names of the alarms.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "disable_insight_rules": {
        "RuleNames": {
            "Description": "An array of the rule names to disable. If you need to find out the names of your rules, use DescribeInsightRules .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "enable_alarm_actions": {
        "AlarmNames": {
            "Description": "The names of the alarms.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "enable_insight_rules": {
        "RuleNames": {
            "Description": "An array of the rule names to enable. If you need to find out the names of your rules, use DescribeInsightRules .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "get_dashboard": {
        "DashboardName": {
            "Description": "The name of the dashboard to be described.",
            "Type": "string",
            "Required": true
        }
    },
    "get_insight_rule_report": {
        "RuleName": {
            "Description": "The name of the rule that you want to see data from.",
            "Type": "string",
            "Required": true
        },
        "StartTime": {
            "Description": "The start time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as yyyy-MM-dd'T'HH:mm:ss. For example, 2019-07-01T23:59:59 .",
            "Type": "datetime",
            "Required": true
        },
        "EndTime": {
            "Description": "The end time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as yyyy-MM-dd'T'HH:mm:ss. For example, 2019-07-01T23:59:59 .",
            "Type": "datetime",
            "Required": true
        },
        "Period": {
            "Description": "The period, in seconds, to use for the statistics in the InsightRuleMetricDatapoint results.",
            "Type": "integer",
            "Required": true
        },
        "MaxContributorCount": {
            "Description": "The maximum number of contributors to include in the report. The range is 1 to 100. If you omit this, the default of 10 is used.",
            "Type": "integer",
            "Required": false
        },
        "Metrics": {
            "Description": "Specifies which metrics to use for aggregation of contributor values for the report. You can specify one or more of the following metrics:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "OrderBy": {
            "Description": "Determines what statistic to use to rank the contributors. Valid values are SUM and MAXIMUM.",
            "Type": "string",
            "Required": false
        }
    },
    "get_metric_data": {
        "MetricDataQueries": {
            "Description": "The metric queries to be returned. A single GetMetricData call can include as many as 500 MetricDataQuery structures. Each of these structures can specify either a metric to retrieve, a Metrics Insights query, or a math expression to perform on retrieved data.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "StartTime": {
            "Description": "The time stamp indicating the earliest data to be returned.\nThe value specified is inclusive; results include data points with the specified time stamp.\nCloudWatch rounds the specified time stamp as follows:\nIf you set Period to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15.\nFor better performance, specify StartTime and EndTime values that align with the value of the metric's Period and sync up with the beginning and end of an hour. For example, if the Period of a metric is 5 minutes, specifying 12:05 or 12:30 as StartTime can get a faster response from CloudWatch than setting 12:07 or 12:29 as the StartTime .",
            "Type": "datetime",
            "Required": true,
            "datetime variables": {}
        },
        "EndTime": {
            "Description": "The time stamp indicating the latest data to be returned.\nThe value specified is exclusive; results include data points up to the specified time stamp.\nFor better performance, specify StartTime and EndTime values that align with the value of the metric's Period and sync up with the beginning and end of an hour. For example, if the Period of a metric is 5 minutes, specifying 12:05 or 12:30 as EndTime can get a faster response from CloudWatch than setting 12:07 or 12:29 as the EndTime .",
            "Type": "datetime",
            "Required": true
        },
        "NextToken": {
            "Description": "Include this value, if it was returned by the previous GetMetricData operation, to get the next set of data points.",
            "Type": "string",
            "Required": false
        },
        "ScanBy": {
            "Description": "The order in which data points should be returned. TimestampDescending returns the newest data first and paginates when the MaxDatapoints limit is reached. TimestampAscending returns the oldest data first and paginates when the MaxDatapoints limit is reached.",
            "Type": "string",
            "Required": false
        },
        "MaxDatapoints": {
            "Description": "The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.",
            "Type": "integer",
            "Required": false
        },
        "LabelOptions": {
            "Description": "This structure includes the Timezone parameter, which you can use to specify your time zone so that the labels of returned data display the correct time for your time zone.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "get_metric_statistics": {
        "Namespace": {
            "Description": "The namespace of the metric, with or without spaces.",
            "Type": "string",
            "Required": true
        },
        "MetricName": {
            "Description": "The name of the metric, with or without spaces.",
            "Type": "string",
            "Required": true
        },
        "Dimensions": {
            "Description": "The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can't retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see Dimension Combinations in the Amazon CloudWatch User Guide. For more information about specifying dimensions, see Publishing Metrics in the Amazon CloudWatch User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StartTime": {
            "Description": "The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.\nThe value specified is inclusive; results include data points with the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).\nCloudWatch rounds the specified time stamp as follows:\nIf you set Period to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15.",
            "Type": "datetime",
            "Required": true,
            "datetime variables": {}
        },
        "EndTime": {
            "Description": "The time stamp that determines the last data point to return.\nThe value specified is exclusive; results include data points up to the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).",
            "Type": "datetime",
            "Required": true
        },
        "Period": {
            "Description": "The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a PutMetricData call that includes a StorageResolution of 1 second.\nIf the StartTime parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:",
            "Type": "integer",
            "Required": true,
            "integer variables": {}
        },
        "Statistics": {
            "Description": "The metric statistics, other than percentile. For percentile statistics, use ExtendedStatistics. When calling GetMetricStatistics, you must specify either Statistics or ExtendedStatistics, but not both.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ExtendedStatistics": {
            "Description": "The percentile statistics. Specify values between p0.0 and p100. When calling GetMetricStatistics, you must specify either Statistics or ExtendedStatistics, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Unit": {
            "Description": "The unit for a given metric. If you omit Unit , all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.",
            "Type": "string",
            "Required": false
        }
    },
    "get_metric_stream": {
        "Name": {
            "Description": "The name of the metric stream to retrieve information about.",
            "Type": "string",
            "Required": true
        }
    },
    "get_metric_widget_image": {
        "MetricWidget": {
            "Description": "A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one MetricWidget parameter in each GetMetricWidgetImage call.\nFor more information about the syntax of MetricWidget see GetMetricWidgetImage: Metric Widget Structure and Syntax .\nIf any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.",
            "Type": "string",
            "Required": true
        },
        "OutputFormat": {
            "Description": "The format of the resulting image. Only PNG images are supported.\nThe default is png. If you specify png, the API returns an HTTP response with the content-type set to text/xml. The image data is in a MetricWidgetImage field. For example:\nThe image/png setting is intended only for custom HTTP requests. For most use cases, and all actions using an Amazon Web Services SDK, you should use png. If you specify image/png, the HTTP response has a content-type set to image/png, and the body of the response is a PNG image.",
            "Type": "string",
            "Required": false
        }
    },
    "list_dashboards": {
        "DashboardNamePrefix": {
            "Description": "If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, \".\", \"-\", and \"_\".",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to indicate that there is more data available.",
            "Type": "string",
            "Required": false
        }
    },
    "list_managed_insight_rules": {
        "ResourceARN": {
            "Description": "The ARN of an Amazon Web Services resource that has managed Contributor Insights rules.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "Include this value to get the next set of rules if the value was returned by the previous operation.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in one operation. If you omit this parameter, the default number is used. The default number is 100 .",
            "Type": "integer",
            "Required": false
        }
    },
    "list_metric_streams": {
        "NextToken": {
            "Description": "Include this value, if it was returned by the previous call, to get the next set of metric streams.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in one operation.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_metrics": {
        "Namespace": {
            "Description": "The metric namespace to filter against. Only the namespace that matches exactly will be returned.",
            "Type": "string",
            "Required": false
        },
        "MetricName": {
            "Description": "The name of the metric to filter against. Only the metrics with names that match exactly will be returned.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The dimensions to filter against. Only the dimensions that match exactly will be returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token returned by a previous call to indicate that there is more data available.",
            "Type": "string",
            "Required": false
        },
        "RecentlyActive": {
            "Description": "To filter the results to show only metrics that have had data points published in the past three hours, specify this parameter with a value of PT3H. This is the only valid value for this parameter.\nThe results that are returned are an approximation of the value you specify. There is a low probability that the returned results include metrics with last published data as much as 40 minutes more than the specified time interval.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceARN": {
            "Description": "The ARN of the CloudWatch resource that you want to view tags for.\nThe ARN format of an alarm is ``arn:aws:cloudwatch:Region :account-id :alarm:alarm-name ``\nThe ARN format of a Contributor Insights rule is ``arn:aws:cloudwatch:Region :account-id :insight-rule:insight-rule-name ``\nFor more information about ARN format, see Resource Types Defined by Amazon CloudWatch in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        }
    },
    "put_anomaly_detector": {
        "Namespace": {
            "Description": "The namespace of the metric to create the anomaly detection model for.",
            "Type": "string",
            "Required": false
        },
        "MetricName": {
            "Description": "The name of the metric to create the anomaly detection model for.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The metric dimensions to create the anomaly detection model for.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Stat": {
            "Description": "The statistic to use for the metric and the anomaly detection model.",
            "Type": "string",
            "Required": false
        },
        "Configuration": {
            "Description": "The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude when training and updating the model. You can specify as many as 10 time ranges.\nThe configuration can also include the time zone to use for the metric.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SingleMetricAnomalyDetector": {
            "Description": "A single metric anomaly detector to be created.\nWhen using SingleMetricAnomalyDetector, you cannot include the following parameters in the same operation:\nInstead, specify the single metric anomaly detector attributes as part of the property SingleMetricAnomalyDetector .",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        },
        "MetricMathAnomalyDetector": {
            "Description": "The metric math anomaly detector to be created.\nWhen using MetricMathAnomalyDetector, you cannot include the following parameters in the same operation:\nInstead, specify the metric math anomaly detector attributes as part of the property MetricMathAnomalyDetector .",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        }
    },
    "put_composite_alarm": {
        "ActionsEnabled": {
            "Description": "Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. The default is TRUE .",
            "Type": "boolean",
            "Required": false
        },
        "AlarmActions": {
            "Description": "The actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:ssm:region :account-id :opsitem:severity ``",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AlarmDescription": {
            "Description": "The description for the composite alarm.",
            "Type": "string",
            "Required": false
        },
        "AlarmName": {
            "Description": "The name for the composite alarm. This name must be unique within the Region.",
            "Type": "string",
            "Required": true
        },
        "AlarmRule": {
            "Description": "An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For each alarm that you reference, you designate a function that specifies whether that alarm needs to be in ALARM state, OK state, or INSUFFICIENT_DATA state. You can use operators (AND, OR and NOT) to combine multiple functions in a single expression. You can use parenthesis to logically group the functions in your expression.\nYou can use either alarm names or ARNs to reference the other alarms that are to be evaluated.\nFunctions can include the following:\nTRUE and FALSE are useful for testing a complex AlarmRule structure, and for testing your alarm actions.\nAlarm names specified in AlarmRule can be surrounded with double-quotes (\"), but do not have to be.\nThe following are some examples of AlarmRule :\nThe AlarmRule can specify as many as 100 \"children\" alarms. The AlarmRule expression can have as many as 500 elements. Elements are child alarms, TRUE or FALSE statements, and parentheses.",
            "Type": "string",
            "Required": true,
            "string variables": [
                {},
                {}
            ]
        },
        "InsufficientDataActions": {
            "Description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: ``arn:aws:sns:region :account-id :sns-topic-name ``",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "OKActions": {
            "Description": "The actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: ``arn:aws:sns:region :account-id :sns-topic-name ``",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Tags": {
            "Description": "A list of key-value pairs to associate with the composite alarm. You can associate as many as 50 tags with an alarm.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ActionsSuppressor": {
            "Description": "Actions will be suppressed if the suppressor alarm is in the ALARM state. ActionsSuppressor can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.",
            "Type": "string",
            "Required": false
        },
        "ActionsSuppressorWaitPeriod": {
            "Description": "The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the ALARM state. After this time, the composite alarm performs its actions.",
            "Type": "integer",
            "Required": false
        },
        "ActionsSuppressorExtensionPeriod": {
            "Description": "The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the ALARM state. After this time, the composite alarm performs its actions.",
            "Type": "integer",
            "Required": false
        }
    },
    "put_dashboard": {
        "DashboardName": {
            "Description": "The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, \"-\", and \"_\". This parameter is required.",
            "Type": "string",
            "Required": true
        },
        "DashboardBody": {
            "Description": "The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.\nFor more information about the syntax, see Dashboard Body Structure and Syntax .",
            "Type": "string",
            "Required": true
        }
    },
    "put_insight_rule": {
        "RuleName": {
            "Description": "A unique name for the rule.",
            "Type": "string",
            "Required": true
        },
        "RuleState": {
            "Description": "The state of the rule. Valid values are ENABLED and DISABLED.",
            "Type": "string",
            "Required": false
        },
        "RuleDefinition": {
            "Description": "The definition of the rule, as a JSON object. For details on the valid syntax, see Contributor Insights Rule Syntax .",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of key-value pairs to associate with the Contributor Insights rule. You can associate as many as 50 tags with a rule.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only the resources that have certain tag values.\nTo be able to associate tags with a rule, you must have the cloudwatch:TagResource permission in addition to the cloudwatch:PutInsightRule permission.\nIf you are using this operation to update an existing Contributor Insights rule, any tags you specify in this parameter are ignored. To change the tags of an existing rule, use TagResource .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "put_managed_insight_rules": {
        "ManagedRules": {
            "Description": "A list of ManagedRules to enable.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "put_metric_alarm": {
        "AlarmName": {
            "Description": "The name for the alarm. This name must be unique within the Region.",
            "Type": "string",
            "Required": true
        },
        "AlarmDescription": {
            "Description": "The description for the alarm.",
            "Type": "string",
            "Required": false
        },
        "ActionsEnabled": {
            "Description": "Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE .",
            "Type": "boolean",
            "Required": false
        },
        "OKActions": {
            "Description": "The actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot | ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name ``\nValid Values (for use with IAM roles): arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Recover/1.0",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AlarmActions": {
            "Description": "The actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot | ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name `` | ``arn:aws:ssm:region :account-id :opsitem:severity `` | ``arn:aws:ssm-incidents::account-id :response-plan:response-plan-name ``\nValid Values (for use with IAM roles): arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Recover/1.0",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InsufficientDataActions": {
            "Description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot | ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name ``\nValid Values (for use with IAM roles): &gt;arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MetricName": {
            "Description": "The name for the metric associated with the alarm. For each PutMetricAlarm operation, you must specify either MetricName or a Metrics array.\nIf you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the Dimensions, Period, Namespace, Statistic, or ExtendedStatistic parameters. Instead, you specify all this information in the Metrics array.",
            "Type": "string",
            "Required": false
        },
        "Namespace": {
            "Description": "The namespace for the metric associated specified in MetricName .",
            "Type": "string",
            "Required": false
        },
        "Statistic": {
            "Description": "The statistic for the metric specified in MetricName , other than percentile. For percentile statistics, use ExtendedStatistic . When you call PutMetricAlarm and specify a MetricName , you must specify either Statistic or ExtendedStatistic, but not both.",
            "Type": "string",
            "Required": false
        },
        "ExtendedStatistic": {
            "Description": "The percentile statistic for the metric specified in MetricName . Specify a value between p0.0 and p100. When you call PutMetricAlarm and specify a MetricName , you must specify either Statistic or ExtendedStatistic, but not both.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The dimensions for the metric specified in MetricName .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Period": {
            "Description": "The length, in seconds, used each time the metric specified in MetricName is evaluated. Valid values are 10, 30, and any multiple of 60.\nBe sure to specify 10 or 30 only for metrics that are stored by a PutMetricData call with a StorageResolution of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm might often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see Amazon CloudWatch Pricing .\nAn alarm's total current evaluation period can be no longer than one day, so Period multiplied by EvaluationPeriods cannot be more than 86,400 seconds.",
            "Type": "integer",
            "Required": false
        },
        "Unit": {
            "Description": "The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.\nIf you don't specify Unit, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually, metrics are published with only one unit, so the alarm works as intended.\nHowever, if the metric is published with multiple types of units and you don't specify a unit, the alarm's behavior is not defined and it behaves unpredictably.\nWe recommend omitting Unit so that you don't inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the INSUFFICIENT DATA state.",
            "Type": "string",
            "Required": false
        },
        "EvaluationPeriods": {
            "Description": "The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an \"M out of N\" alarm, this value is the N.\nAn alarm's total current evaluation period can be no longer than one day, so this number multiplied by Period cannot be more than 86,400 seconds.",
            "Type": "integer",
            "Required": true
        },
        "DatapointsToAlarm": {
            "Description": "The number of data points that must be breaching to trigger the alarm. This is used only if you are setting an \"M out of N\" alarm. In that case, this value is the M. For more information, see Evaluating an Alarm in the Amazon CloudWatch User Guide .",
            "Type": "integer",
            "Required": false
        },
        "Threshold": {
            "Description": "The value against which the specified statistic is compared.\nThis parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.",
            "Type": "float",
            "Required": false
        },
        "ComparisonOperator": {
            "Description": "The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.\nThe values LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.",
            "Type": "string",
            "Required": true
        },
        "TreatMissingData": {
            "Description": "Sets how this alarm is to handle missing data points. If TreatMissingData is omitted, the default behavior of missing is used. For more information, see Configuring How CloudWatch Alarms Treats Missing Data .\nValid Values: breaching | notBreaching | ignore | missing",
            "Type": "string",
            "Required": false
        },
        "EvaluateLowSampleCountPercentile": {
            "Description": "Used only for alarms based on percentiles. If you specify ignore, the alarm state does not change during periods with too few data points to be statistically significant. If you specify evaluate or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see Percentile-Based CloudWatch Alarms and Low Data Samples .\nValid Values: evaluate | ignore",
            "Type": "string",
            "Required": false
        },
        "Metrics": {
            "Description": "An array of MetricDataQuery structures that enable you to create an alarm based on the result of a metric math expression. For each PutMetricAlarm operation, you must specify either MetricName or a Metrics array.\nEach item in the Metrics array either retrieves a metric or performs a math expression.\nOne item in the Metrics array is the expression that the alarm watches. You designate this expression by setting ReturnData to true for this object in the array. For more information, see MetricDataQuery .\nIf you use the Metrics parameter, you cannot include the MetricName, Dimensions, Period, Namespace, Statistic, or ExtendedStatistic parameters of PutMetricAlarm in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the Metrics array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Tags": {
            "Description": "A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nIf you are using this operation to update an existing alarm, any tags you specify in this parameter are ignored. To change the tags of an existing alarm, use TagResource or UntagResource .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ThresholdMetricId": {
            "Description": "If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.\nFor an example of how to use this parameter, see the Anomaly Detection Model Alarm example on this page.\nIf your alarm uses this parameter, it cannot have Auto Scaling actions.",
            "Type": "string",
            "Required": false
        }
    },
    "put_metric_data": {
        "Namespace": {
            "Description": "The namespace for the metric data.\nTo avoid conflicts with Amazon Web Services service namespaces, you should not specify a namespace that begins with AWS/",
            "Type": "string",
            "Required": true
        },
        "MetricData": {
            "Description": "The data for the metric. The array can include no more than 1000 metrics per call.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "put_metric_stream": {
        "Name": {
            "Description": "If you are creating a new metric stream, this is the name for the new stream. The name must be different than the names of other metric streams in this account and Region.\nIf you are updating a metric stream, specify the name of that stream here.\nValid characters are A-Z, a-z, 0-9, \"-\" and \"_\".",
            "Type": "string",
            "Required": true
        },
        "IncludeFilters": {
            "Description": "If you specify this parameter, the stream sends only the metrics from the metric namespaces that you specify here.\nYou cannot include IncludeFilters and ExcludeFilters in the same operation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ExcludeFilters": {
            "Description": "If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces that you specify here.\nYou cannot include ExcludeFilters and IncludeFilters in the same operation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "FirehoseArn": {
            "Description": "The ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream. This Amazon Kinesis Firehose delivery stream must already exist and must be in the same account as the metric stream.",
            "Type": "string",
            "Required": true
        },
        "RoleArn": {
            "Description": "The ARN of an IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. This IAM role must already exist and must be in the same account as the metric stream. This IAM role must include the following permissions:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "OutputFormat": {
            "Description": "The output format for the stream. Valid values are json and opentelemetry0.7. For more information about metric stream output formats, see Metric streams output formats .",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A list of key-value pairs to associate with the metric stream. You can associate as many as 50 tags with a metric stream.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nYou can use this parameter only when you are creating a new metric stream. If you are using this operation to update an existing metric stream, any tags you specify in this parameter are ignored. To change the tags of an existing metric stream, use TagResource or UntagResource .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StatisticsConfigurations": {
            "Description": "By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.\nFor each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's OutputFormat. If the OutputFormat is json, you can stream any additional statistic that is supported by CloudWatch, listed in CloudWatch statistics definitions. If the OutputFormat is opentelemetry0.7, you can stream percentile statistics such as p95, p99.9 and so on.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "set_alarm_state": {
        "AlarmName": {
            "Description": "The name of the alarm.",
            "Type": "string",
            "Required": true
        },
        "StateValue": {
            "Description": "The value of the state.",
            "Type": "string",
            "Required": true
        },
        "StateReason": {
            "Description": "The reason that this alarm is set to this specific state, in text format.",
            "Type": "string",
            "Required": true
        },
        "StateReasonData": {
            "Description": "The reason that this alarm is set to this specific state, in JSON format.\nFor SNS or EC2 alarm actions, this is just informational. But for EC2 Auto Scaling or application Auto Scaling alarm actions, the Auto Scaling policy uses the information in this field to take the correct action.",
            "Type": "string",
            "Required": false
        }
    },
    "start_metric_streams": {
        "Names": {
            "Description": "The array of the names of metric streams to start streaming.\nThis is an \"all or nothing\" operation. If you do not have permission to access all of the metric streams that you list here, then none of the streams that you list in the operation will start streaming.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "stop_metric_streams": {
        "Names": {
            "Description": "The array of the names of metric streams to stop streaming.\nThis is an \"all or nothing\" operation. If you do not have permission to access all of the metric streams that you list here, then none of the streams that you list in the operation will stop streaming.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_resource": {
        "ResourceARN": {
            "Description": "The ARN of the CloudWatch resource that you're adding tags to.\nThe ARN format of an alarm is ``arn:aws:cloudwatch:Region :account-id :alarm:alarm-name ``\nThe ARN format of a Contributor Insights rule is ``arn:aws:cloudwatch:Region :account-id :insight-rule:insight-rule-name ``\nFor more information about ARN format, see Resource Types Defined by Amazon CloudWatch in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The list of key-value pairs to associate with the alarm.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "ResourceARN": {
            "Description": "The ARN of the CloudWatch resource that you're removing tags from.\nThe ARN format of an alarm is ``arn:aws:cloudwatch:Region :account-id :alarm:alarm-name ``\nThe ARN format of a Contributor Insights rule is ``arn:aws:cloudwatch:Region :account-id :insight-rule:insight-rule-name ``\nFor more information about ARN format, see Resource Types Defined by Amazon CloudWatch in the Amazon Web Services General Reference .",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "The list of tag keys to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "paginate": {
        "Namespace": {
            "Description": "The metric namespace to filter against. Only the namespace that matches exactly will be returned.",
            "Type": "string",
            "Required": false
        },
        "MetricName": {
            "Description": "The name of the metric to filter against. Only the metrics with names that match exactly will be returned.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The dimensions to filter against. Only the dimensions that match exactly will be returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RecentlyActive": {
            "Description": "To filter the results to show only metrics that have had data points published in the past three hours, specify this parameter with a value of PT3H. This is the only valid value for this parameter.\nThe results that are returned are an approximation of the value you specify. There is a low probability that the returned results include metrics with last published data as much as 40 minutes more than the specified time interval.",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "AlarmNames": {
            "Description": "The names of the alarms to retrieve information about.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AlarmNamePrefix": {
            "Description": "An alarm name prefix. If you specify this parameter, you receive information about all alarms that have names that start with this prefix.\nIf this parameter is specified, you cannot specify AlarmNames .",
            "Type": "string",
            "Required": false
        },
        "AlarmTypes": {
            "Description": "Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ChildrenOfAlarmName": {
            "Description": "If you use this parameter and specify the name of a composite alarm, the operation returns information about the \"children\" alarms of the alarm you specify. These are the metric alarms and composite alarms referenced in the AlarmRule field of the composite alarm that you specify in ChildrenOfAlarmName. Information about the composite alarm that you name in ChildrenOfAlarmName is not returned.\nIf you specify ChildrenOfAlarmName, you cannot specify any other parameters in the request except for MaxRecords and NextToken. If you do so, you receive a validation error.",
            "Type": "string",
            "Required": false
        },
        "ParentsOfAlarmName": {
            "Description": "If you use this parameter and specify the name of a metric or composite alarm, the operation returns information about the \"parent\" alarms of the alarm you specify. These are the composite alarms that have AlarmRule parameters that reference the alarm named in ParentsOfAlarmName. Information about the alarm that you specify in ParentsOfAlarmName is not returned.\nIf you specify ParentsOfAlarmName, you cannot specify any other parameters in the request except for MaxRecords and NextToken. If you do so, you receive a validation error.",
            "Type": "string",
            "Required": false
        },
        "StateValue": {
            "Description": "Specify this parameter to receive information only about alarms that are currently in the state that you specify.",
            "Type": "string",
            "Required": false
        },
        "ActionPrefix": {
            "Description": "Use this parameter to filter the results of the operation to only those alarms that use a certain alarm action. For example, you could specify the ARN of an SNS topic to find all alarms that send notifications to that topic.",
            "Type": "string",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of alarm descriptions to retrieve.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to indicate that there is more data available.",
            "Type": "string",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "Alarm": {
        "name": {
            "Description": "The Alarm's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "Metric": {
        "namespace": {
            "Description": "The Metric's namespace identifier. This must be set.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The Metric's name identifier. This must be set.",
            "Type": "string",
            "Required": false
        }
    },
    "all": "No parameters defined",
    "delete": "No parameters defined",
    "disable_actions": "No parameters defined",
    "enable_actions": "No parameters defined",
    "filter": {
        "Statistic": {
            "Description": "The statistic for the metric, other than percentiles. For percentile statistics, use ExtendedStatistics .",
            "Type": "string",
            "Required": false
        },
        "ExtendedStatistic": {
            "Description": "The percentile statistic for the metric. Specify a value between p0.0 and p100.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Period": {
            "Description": "The period, in seconds, over which the statistic is applied.",
            "Type": "integer",
            "Required": false
        },
        "Unit": {
            "Description": "The unit for the metric.",
            "Type": "string",
            "Required": false
        }
    },
    "limit": {
        "count": {
            "Description": "The limit to the number of resources in the iterable.",
            "Type": "integer",
            "Required": false
        }
    },
    "page_size": {
        "count": {
            "Description": "The number of items returned by each service call",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_history": {
        "AlarmTypes": {
            "Description": "Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "HistoryItemType": {
            "Description": "The type of alarm histories to retrieve.",
            "Type": "string",
            "Required": false
        },
        "StartDate": {
            "Description": "The starting date to retrieve alarm history.",
            "Type": "datetime",
            "Required": false
        },
        "EndDate": {
            "Description": "The ending date to retrieve alarm history.",
            "Type": "datetime",
            "Required": false
        },
        "MaxRecords": {
            "Description": "The maximum number of alarm history records to retrieve.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token returned by a previous call to indicate that there is more data available.",
            "Type": "string",
            "Required": false
        },
        "ScanBy": {
            "Description": "Specified whether to return the newest or oldest alarm history first. Specify TimestampDescending to have the newest event history returned first, and specify TimestampAscending to have the oldest history returned first.",
            "Type": "string",
            "Required": false
        }
    },
    "get_available_subresources": "No parameters defined",
    "load": "No parameters defined",
    "reload": "No parameters defined",
    "set_state": {
        "StateValue": {
            "Description": "The value of the state.",
            "Type": "string",
            "Required": true
        },
        "StateReason": {
            "Description": "The reason that this alarm is set to this specific state, in text format.",
            "Type": "string",
            "Required": true
        },
        "StateReasonData": {
            "Description": "The reason that this alarm is set to this specific state, in JSON format.\nFor SNS or EC2 alarm actions, this is just informational. But for EC2 Auto Scaling or application Auto Scaling alarm actions, the Auto Scaling policy uses the information in this field to take the correct action.",
            "Type": "string",
            "Required": false
        }
    },
    "get_statistics": {
        "Dimensions": {
            "Description": "The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can't retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see Dimension Combinations in the Amazon CloudWatch User Guide. For more information about specifying dimensions, see Publishing Metrics in the Amazon CloudWatch User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StartTime": {
            "Description": "The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.\nThe value specified is inclusive; results include data points with the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).\nCloudWatch rounds the specified time stamp as follows:\nIf you set Period to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15.",
            "Type": "datetime",
            "Required": true,
            "datetime variables": {}
        },
        "EndTime": {
            "Description": "The time stamp that determines the last data point to return.\nThe value specified is exclusive; results include data points up to the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).",
            "Type": "datetime",
            "Required": true
        },
        "Period": {
            "Description": "The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a PutMetricData call that includes a StorageResolution of 1 second.\nIf the StartTime parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:",
            "Type": "integer",
            "Required": true,
            "integer variables": {}
        },
        "Statistics": {
            "Description": "The metric statistics, other than percentile. For percentile statistics, use ExtendedStatistics. When calling GetMetricStatistics, you must specify either Statistics or ExtendedStatistics, but not both.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ExtendedStatistics": {
            "Description": "The percentile statistics. Specify values between p0.0 and p100. When calling GetMetricStatistics, you must specify either Statistics or ExtendedStatistics, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Unit": {
            "Description": "The unit for a given metric. If you omit Unit , all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.",
            "Type": "string",
            "Required": false
        }
    },
    "put_alarm": {
        "AlarmName": {
            "Description": "The name for the alarm. This name must be unique within the Region.",
            "Type": "string",
            "Required": true
        },
        "AlarmDescription": {
            "Description": "The description for the alarm.",
            "Type": "string",
            "Required": false
        },
        "ActionsEnabled": {
            "Description": "Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE .",
            "Type": "boolean",
            "Required": false
        },
        "OKActions": {
            "Description": "The actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot | ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name ``\nValid Values (for use with IAM roles): arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Recover/1.0",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AlarmActions": {
            "Description": "The actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot | ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name `` | ``arn:aws:ssm:region :account-id :opsitem:severity `` | ``arn:aws:ssm-incidents::account-id :response-plan:response-plan-name ``\nValid Values (for use with IAM roles): arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Recover/1.0",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InsufficientDataActions": {
            "Description": "The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).\nValid Values: arn:aws:automate:*region* :ec2:stop | arn:aws:automate:*region* :ec2:terminate | arn:aws:automate:*region* :ec2:recover | arn:aws:automate:*region* :ec2:reboot | ``arn:aws:sns:region :account-id :sns-topic-name `` | ``arn:aws:autoscaling:region :account-id :scalingPolicy:policy-id :autoScalingGroupName/group-friendly-name :policyName/policy-friendly-name ``\nValid Values (for use with IAM roles): &gt;arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:*region* :*account-id* :action/actions/AWS_EC2.InstanceId.Reboot/1.0",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Statistic": {
            "Description": "The statistic for the metric specified in MetricName , other than percentile. For percentile statistics, use ExtendedStatistic . When you call PutMetricAlarm and specify a MetricName , you must specify either Statistic or ExtendedStatistic, but not both.",
            "Type": "string",
            "Required": false
        },
        "ExtendedStatistic": {
            "Description": "The percentile statistic for the metric specified in MetricName . Specify a value between p0.0 and p100. When you call PutMetricAlarm and specify a MetricName , you must specify either Statistic or ExtendedStatistic, but not both.",
            "Type": "string",
            "Required": false
        },
        "Dimensions": {
            "Description": "The dimensions for the metric specified in MetricName .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Period": {
            "Description": "The length, in seconds, used each time the metric specified in MetricName is evaluated. Valid values are 10, 30, and any multiple of 60.\nBe sure to specify 10 or 30 only for metrics that are stored by a PutMetricData call with a StorageResolution of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm might often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see Amazon CloudWatch Pricing .\nAn alarm's total current evaluation period can be no longer than one day, so Period multiplied by EvaluationPeriods cannot be more than 86,400 seconds.",
            "Type": "integer",
            "Required": false
        },
        "Unit": {
            "Description": "The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.\nIf you don't specify Unit, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually, metrics are published with only one unit, so the alarm works as intended.\nHowever, if the metric is published with multiple types of units and you don't specify a unit, the alarm's behavior is not defined and it behaves unpredictably.\nWe recommend omitting Unit so that you don't inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the INSUFFICIENT DATA state.",
            "Type": "string",
            "Required": false
        },
        "EvaluationPeriods": {
            "Description": "The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an \"M out of N\" alarm, this value is the N.\nAn alarm's total current evaluation period can be no longer than one day, so this number multiplied by Period cannot be more than 86,400 seconds.",
            "Type": "integer",
            "Required": true
        },
        "DatapointsToAlarm": {
            "Description": "The number of data points that must be breaching to trigger the alarm. This is used only if you are setting an \"M out of N\" alarm. In that case, this value is the M. For more information, see Evaluating an Alarm in the Amazon CloudWatch User Guide .",
            "Type": "integer",
            "Required": false
        },
        "Threshold": {
            "Description": "The value against which the specified statistic is compared.\nThis parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.",
            "Type": "float",
            "Required": false
        },
        "ComparisonOperator": {
            "Description": "The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.\nThe values LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.",
            "Type": "string",
            "Required": true
        },
        "TreatMissingData": {
            "Description": "Sets how this alarm is to handle missing data points. If TreatMissingData is omitted, the default behavior of missing is used. For more information, see Configuring How CloudWatch Alarms Treats Missing Data .\nValid Values: breaching | notBreaching | ignore | missing",
            "Type": "string",
            "Required": false
        },
        "EvaluateLowSampleCountPercentile": {
            "Description": "Used only for alarms based on percentiles. If you specify ignore, the alarm state does not change during periods with too few data points to be statistically significant. If you specify evaluate or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see Percentile-Based CloudWatch Alarms and Low Data Samples .\nValid Values: evaluate | ignore",
            "Type": "string",
            "Required": false
        },
        "Metrics": {
            "Description": "An array of MetricDataQuery structures that enable you to create an alarm based on the result of a metric math expression. For each PutMetricAlarm operation, you must specify either MetricName or a Metrics array.\nEach item in the Metrics array either retrieves a metric or performs a math expression.\nOne item in the Metrics array is the expression that the alarm watches. You designate this expression by setting ReturnData to true for this object in the array. For more information, see MetricDataQuery .\nIf you use the Metrics parameter, you cannot include the MetricName, Dimensions, Period, Namespace, Statistic, or ExtendedStatistic parameters of PutMetricAlarm in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the Metrics array.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Tags": {
            "Description": "A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nIf you are using this operation to update an existing alarm, any tags you specify in this parameter are ignored. To change the tags of an existing alarm, use TagResource or UntagResource .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ThresholdMetricId": {
            "Description": "If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.\nFor an example of how to use this parameter, see the Anomaly Detection Model Alarm example on this page.\nIf your alarm uses this parameter, it cannot have Auto Scaling actions.",
            "Type": "string",
            "Required": false
        }
    },
    "put_data": "No parameters defined"
}