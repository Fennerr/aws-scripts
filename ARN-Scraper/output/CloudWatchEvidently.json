{
    "batch_evaluate_feature": {
        "project": {
            "Description": "The name or ARN of the project that contains the feature being evaluated.",
            "Type": "string",
            "Required": true
        },
        "requests": {
            "Description": "An array of structures, where each structure assigns a feature variation to one user session.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_experiment": {
        "description": {
            "Description": "An optional description of the experiment.",
            "Type": "string",
            "Required": false
        },
        "metricGoals": {
            "Description": "An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "name": {
            "Description": "A name for the new experiment.",
            "Type": "string",
            "Required": true
        },
        "onlineAbConfig": {
            "Description": "A structure that contains the configuration of which variation to use as the \"control\" version. tThe \"control\" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "project": {
            "Description": "The name or ARN of the project that you want to create the new experiment in.",
            "Type": "string",
            "Required": true
        },
        "randomizationSalt": {
            "Description": "When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt . If you omit randomizationSalt , Evidently uses the experiment name as the randomizationSalt .",
            "Type": "string",
            "Required": false
        },
        "samplingRate": {
            "Description": "The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.\nThis is represented in thousandths of a percent. For example, specify 10,000 to allocate 10% of the available audience.",
            "Type": "integer",
            "Required": false
        },
        "segment": {
            "Description": "Specifies an audience segment to use in the experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment.",
            "Type": "string",
            "Required": false
        },
        "tags": {
            "Description": "Assigns one or more tags (key-value pairs) to the experiment.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nTags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "treatments": {
            "Description": "An array of structures that describe the configuration of each feature variation used in the experiment.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_feature": {
        "defaultVariation": {
            "Description": "The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.\nThis variation must also be listed in the variations structure.\nIf you omit defaultVariation, the first variation listed in the variations structure is used as the default variation.",
            "Type": "string",
            "Required": false
        },
        "description": {
            "Description": "An optional description of the feature.",
            "Type": "string",
            "Required": false
        },
        "entityOverrides": {
            "Description": "Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair. For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "evaluationStrategy": {
            "Description": "Specify ALL_RULES to activate the traffic allocation specified by any ongoing launches or experiments. Specify DEFAULT_VARIATION to serve the default variation to all users instead.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The name for the new feature.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that is to contain the new feature.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "Assigns one or more tags (key-value pairs) to the feature.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nTags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "variations": {
            "Description": "An array of structures that contain the configuration of the feature's different variations.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_launch": {
        "description": {
            "Description": "An optional description for the launch.",
            "Type": "string",
            "Required": false
        },
        "groups": {
            "Description": "An array of structures that contains the feature and variations that are to be used for the launch.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "metricMonitors": {
            "Description": "An array of structures that define the metrics that will be used to monitor the launch performance.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "name": {
            "Description": "The name for the new launch.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that you want to create the launch in.",
            "Type": "string",
            "Required": true
        },
        "randomizationSalt": {
            "Description": "When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt . If you omit randomizationSalt , Evidently uses the launch name as the randomizationSalt .",
            "Type": "string",
            "Required": false
        },
        "scheduledSplitsConfig": {
            "Description": "An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "tags": {
            "Description": "Assigns one or more tags (key-value pairs) to the launch.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nTags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_project": {
        "dataDelivery": {
            "Description": "A structure that contains information about where Evidently is to store evaluation events for longer term storage, if you choose to do so. If you choose not to store these events, Evidently deletes them after using them to produce metrics and other experiment results that you can view.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "description": {
            "Description": "An optional description of the project.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "The name for the project.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "Assigns one or more tags (key-value pairs) to the project.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nTags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_segment": {
        "description": {
            "Description": "An optional description for this segment.",
            "Type": "string",
            "Required": false
        },
        "name": {
            "Description": "A name for the segment.",
            "Type": "string",
            "Required": true
        },
        "pattern": {
            "Description": "The pattern to use for the segment. For more information about pattern syntax, see Segment rule pattern syntax .",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "Assigns one or more tags (key-value pairs) to the segment.\nTags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.\nTags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "delete_experiment": {
        "experiment": {
            "Description": "The name of the experiment to delete.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the experiment to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_feature": {
        "feature": {
            "Description": "The name of the feature to delete.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the feature to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_launch": {
        "launch": {
            "Description": "The name of the launch to delete.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the launch to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_project": {
        "project": {
            "Description": "The name or ARN of the project to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_segment": {
        "segment": {
            "Description": "Specifies the segment to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "evaluate_feature": {
        "entityId": {
            "Description": "An internal ID that represents a unique user of the application. This entityID is checked against any override rules assigned for this feature.",
            "Type": "string",
            "Required": true
        },
        "evaluationContext": {
            "Description": "A JSON object of attributes that you can optionally pass in as part of the evaluation event sent to Evidently from the user session. Evidently can use this value to match user sessions with defined audience segments. For more information, see Use segments to focus your audience .",
            "Type": "string",
            "Required": false
        },
        "feature": {
            "Description": "The name of the feature being evaluated.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains this feature.",
            "Type": "string",
            "Required": true
        }
    },
    "get_experiment": {
        "experiment": {
            "Description": "The name of the experiment that you want to see the details of.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the experiment.",
            "Type": "string",
            "Required": true
        }
    },
    "get_experiment_results": {
        "baseStat": {
            "Description": "The statistic used to calculate experiment results. Currently the only valid value is mean , which uses the mean of the collected values as the statistic.",
            "Type": "string",
            "Required": false
        },
        "endTime": {
            "Description": "The date and time that the experiment ended, if it is completed. This must be no longer than 30 days after the experiment start time.",
            "Type": "datetime",
            "Required": false
        },
        "experiment": {
            "Description": "The name of the experiment to retrieve the results of.",
            "Type": "string",
            "Required": true
        },
        "metricNames": {
            "Description": "The names of the experiment metrics that you want to see the results of.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "period": {
            "Description": "In seconds, the amount of time to aggregate results together.",
            "Type": "integer",
            "Required": false
        },
        "project": {
            "Description": "The name or ARN of the project that contains the experiment that you want to see the results of.",
            "Type": "string",
            "Required": true
        },
        "reportNames": {
            "Description": "The names of the report types that you want to see. Currently, BayesianInference is the only valid value.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "resultStats": {
            "Description": "The statistics that you want to see in the returned results.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "startTime": {
            "Description": "The date and time that the experiment started.",
            "Type": "datetime",
            "Required": false
        },
        "treatmentNames": {
            "Description": "The names of the experiment treatments that you want to see the results for.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "get_feature": {
        "feature": {
            "Description": "The name of the feature that you want to retrieve information for.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the feature.",
            "Type": "string",
            "Required": true
        }
    },
    "get_launch": {
        "launch": {
            "Description": "The name of the launch that you want to see the details of.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the launch.",
            "Type": "string",
            "Required": true
        }
    },
    "get_project": {
        "project": {
            "Description": "The name or ARN of the project that you want to see the details of.",
            "Type": "string",
            "Required": true
        }
    },
    "get_segment": {
        "segment": {
            "Description": "The ARN of the segment to return information for.",
            "Type": "string",
            "Required": true
        }
    },
    "list_experiments": {
        "maxResults": {
            "Description": "The maximum number of results to include in the response.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to use when requesting the next set of results. You received this token from a previous ListExperiments operation.",
            "Type": "string",
            "Required": false
        },
        "project": {
            "Description": "The name or ARN of the project to return the experiment list from.",
            "Type": "string",
            "Required": true
        },
        "status": {
            "Description": "Use this optional parameter to limit the returned results to only the experiments with the status that you specify here.",
            "Type": "string",
            "Required": false
        }
    },
    "list_features": {
        "maxResults": {
            "Description": "The maximum number of results to include in the response.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to use when requesting the next set of results. You received this token from a previous ListFeatures operation.",
            "Type": "string",
            "Required": false
        },
        "project": {
            "Description": "The name or ARN of the project to return the feature list from.",
            "Type": "string",
            "Required": true
        }
    },
    "list_launches": {
        "maxResults": {
            "Description": "The maximum number of results to include in the response.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to use when requesting the next set of results. You received this token from a previous ListLaunches operation.",
            "Type": "string",
            "Required": false
        },
        "project": {
            "Description": "The name or ARN of the project to return the launch list from.",
            "Type": "string",
            "Required": true
        },
        "status": {
            "Description": "Use this optional parameter to limit the returned results to only the launches with the status that you specify here.",
            "Type": "string",
            "Required": false
        }
    },
    "list_projects": {
        "maxResults": {
            "Description": "The maximum number of results to include in the response.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to use when requesting the next set of results. You received this token from a previous ListProjects operation.",
            "Type": "string",
            "Required": false
        }
    },
    "list_segment_references": {
        "maxResults": {
            "Description": "The maximum number of results to include in the response. If you omit this, the default of 50 is used.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to use when requesting the next set of results. You received this token from a previous ListSegmentReferences operation.",
            "Type": "string",
            "Required": false
        },
        "segment": {
            "Description": "The ARN of the segment that you want to view information for.",
            "Type": "string",
            "Required": true
        },
        "type": {
            "Description": "Specifies whether to return information about launches or experiments that use this segment.",
            "Type": "string",
            "Required": true
        }
    },
    "list_segments": {
        "maxResults": {
            "Description": "The maximum number of results to include in the response. If you omit this, the default of 50 is used.",
            "Type": "integer",
            "Required": false
        },
        "nextToken": {
            "Description": "The token to use when requesting the next set of results. You received this token from a previous ListSegments operation.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "resourceArn": {
            "Description": "The ARN of the resource that you want to see the tags of.",
            "Type": "string",
            "Required": true
        }
    },
    "put_project_events": {
        "events": {
            "Description": "An array of event structures that contain the performance data that is being sent to Evidently.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "project": {
            "Description": "The name or ARN of the project to write the events to.",
            "Type": "string",
            "Required": true
        }
    },
    "start_experiment": {
        "analysisCompleteTime": {
            "Description": "The date and time to end the experiment. This must be no more than 30 days after the experiment starts.",
            "Type": "datetime",
            "Required": true
        },
        "experiment": {
            "Description": "The name of the experiment to start.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the experiment to start.",
            "Type": "string",
            "Required": true
        }
    },
    "start_launch": {
        "launch": {
            "Description": "The name of the launch to start.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the launch to start.",
            "Type": "string",
            "Required": true
        }
    },
    "stop_experiment": {
        "desiredState": {
            "Description": "Specify whether the experiment is to be considered COMPLETED or CANCELLED after it stops.",
            "Type": "string",
            "Required": false
        },
        "experiment": {
            "Description": "The name of the experiment to stop.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the experiment to stop.",
            "Type": "string",
            "Required": true
        },
        "reason": {
            "Description": "A string that describes why you are stopping the experiment.",
            "Type": "string",
            "Required": false
        }
    },
    "stop_launch": {
        "desiredState": {
            "Description": "Specify whether to consider the launch as COMPLETED or CANCELLED after it stops.",
            "Type": "string",
            "Required": false
        },
        "launch": {
            "Description": "The name of the launch to stop.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the launch that you want to stop.",
            "Type": "string",
            "Required": true
        },
        "reason": {
            "Description": "A string that describes why you are stopping the launch.",
            "Type": "string",
            "Required": false
        }
    },
    "tag_resource": {
        "resourceArn": {
            "Description": "The ARN of the CloudWatch Evidently resource that you're adding tags to.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "The list of key-value pairs to associate with the resource.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "test_segment_pattern": {
        "pattern": {
            "Description": "The pattern to test.",
            "Type": "string",
            "Required": true
        },
        "payload": {
            "Description": "A sample evaluationContext JSON block to test against the specified pattern.",
            "Type": "string",
            "Required": true
        }
    },
    "untag_resource": {
        "resourceArn": {
            "Description": "The ARN of the CloudWatch Evidently resource that you're removing tags from.",
            "Type": "string",
            "Required": true
        },
        "tagKeys": {
            "Description": "The list of tag keys to remove from the resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_experiment": {
        "description": {
            "Description": "An optional description of the experiment.",
            "Type": "string",
            "Required": false
        },
        "experiment": {
            "Description": "The name of the experiment to update.",
            "Type": "string",
            "Required": true
        },
        "metricGoals": {
            "Description": "An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "onlineAbConfig": {
            "Description": "A structure that contains the configuration of which variation o use as the \"control\" version. The \"control\" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "project": {
            "Description": "The name or ARN of the project that contains the experiment that you want to update.",
            "Type": "string",
            "Required": true
        },
        "randomizationSalt": {
            "Description": "When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt . If you omit randomizationSalt , Evidently uses the experiment name as the randomizationSalt .",
            "Type": "string",
            "Required": false
        },
        "removeSegment": {
            "Description": "Removes a segment from being used in an experiment. You can't use this parameter if the experiment is currently running.",
            "Type": "boolean",
            "Required": false
        },
        "samplingRate": {
            "Description": "The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.\nThis is represented in thousandths of a percent. For example, specify 20,000 to allocate 20% of the available audience.",
            "Type": "integer",
            "Required": false
        },
        "segment": {
            "Description": "Adds an audience segment to an experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment. You can't use this parameter if the experiment is currently running.",
            "Type": "string",
            "Required": false
        },
        "treatments": {
            "Description": "An array of structures that define the variations being tested in the experiment.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_feature": {
        "addOrUpdateVariations": {
            "Description": "To update variation configurations for this feature, or add new ones, specify this structure. In this array, include any variations that you want to add or update. If the array includes a variation name that already exists for this feature, it is updated. If it includes a new variation name, it is added as a new variation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "defaultVariation": {
            "Description": "The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.",
            "Type": "string",
            "Required": false
        },
        "description": {
            "Description": "An optional description of the feature.",
            "Type": "string",
            "Required": false
        },
        "entityOverrides": {
            "Description": "Specified users that should always be served a specific variation of a feature. Each user is specified by a key-value pair. For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "evaluationStrategy": {
            "Description": "Specify ALL_RULES to activate the traffic allocation specified by any ongoing launches or experiments. Specify DEFAULT_VARIATION to serve the default variation to all users instead.",
            "Type": "string",
            "Required": false
        },
        "feature": {
            "Description": "The name of the feature to be updated.",
            "Type": "string",
            "Required": true
        },
        "project": {
            "Description": "The name or ARN of the project that contains the feature to be updated.",
            "Type": "string",
            "Required": true
        },
        "removeVariations": {
            "Description": "Removes a variation from the feature. If the variation you specify doesn't exist, then this makes no change and does not report an error.\nThis operation fails if you try to remove a variation that is part of an ongoing launch or experiment.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_launch": {
        "description": {
            "Description": "An optional description for the launch.",
            "Type": "string",
            "Required": false
        },
        "groups": {
            "Description": "An array of structures that contains the feature and variations that are to be used for the launch.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "launch": {
            "Description": "The name of the launch that is to be updated.",
            "Type": "string",
            "Required": true
        },
        "metricMonitors": {
            "Description": "An array of structures that define the metrics that will be used to monitor the launch performance.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "project": {
            "Description": "The name or ARN of the project that contains the launch that you want to update.",
            "Type": "string",
            "Required": true
        },
        "randomizationSalt": {
            "Description": "When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt . If you omit randomizationSalt , Evidently uses the launch name as the randomizationSalt .",
            "Type": "string",
            "Required": false
        },
        "scheduledSplitsConfig": {
            "Description": "An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_project": {
        "description": {
            "Description": "An optional description of the project.",
            "Type": "string",
            "Required": false
        },
        "project": {
            "Description": "The name or ARN of the project to update.",
            "Type": "string",
            "Required": true
        }
    },
    "update_project_data_delivery": {
        "cloudWatchLogs": {
            "Description": "A structure containing the CloudWatch Logs log group where you want to store evaluation events.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "project": {
            "Description": "The name or ARN of the project that you want to modify the data storage options for.",
            "Type": "string",
            "Required": true
        },
        "s3Destination": {
            "Description": "A structure containing the S3 bucket name and bucket prefix where you want to store evaluation events.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "paginate": {
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}