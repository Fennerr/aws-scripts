{
    "associate_application_fleet": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "ApplicationArn": {
            "Description": "The ARN of the application.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_application_to_entitlement": {
        "StackName": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        },
        "EntitlementName": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": true
        },
        "ApplicationIdentifier": {
            "Description": "The identifier of the application.",
            "Type": "string",
            "Required": true
        }
    },
    "associate_fleet": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "StackName": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        }
    },
    "batch_associate_user_stack": {
        "UserStackAssociations": {
            "Description": "The list of UserStackAssociation objects.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_disassociate_user_stack": {
        "UserStackAssociations": {
            "Description": "The list of UserStackAssociation objects.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "copy_image": {
        "SourceImageName": {
            "Description": "The name of the image to copy.",
            "Type": "string",
            "Required": true
        },
        "DestinationImageName": {
            "Description": "The name that the image will have when it is copied to the destination.",
            "Type": "string",
            "Required": true
        },
        "DestinationRegion": {
            "Description": "The destination region to which the image will be copied. This parameter is required, even if you are copying an image within the same region.",
            "Type": "string",
            "Required": true
        },
        "DestinationImageDescription": {
            "Description": "The description that the image will have when it is copied to the destination.",
            "Type": "string",
            "Required": false
        }
    },
    "create_app_block": {
        "Name": {
            "Description": "The name of the app block.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the app block.",
            "Type": "string",
            "Required": false
        },
        "DisplayName": {
            "Description": "The display name of the app block. This is not displayed to the user.",
            "Type": "string",
            "Required": false
        },
        "SourceS3Location": {
            "Description": "The source S3 location of the app block.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "SetupScriptDetails": {
            "Description": "The setup script details of the app block.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags assigned to the app block.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_application": {
        "Name": {
            "Description": "The name of the application. This name is visible to users when display name is not specified.",
            "Type": "string",
            "Required": true
        },
        "DisplayName": {
            "Description": "The display name of the application. This name is visible to users in the application catalog.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the application.",
            "Type": "string",
            "Required": false
        },
        "IconS3Location": {
            "Description": "The location in S3 of the application icon.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "LaunchPath": {
            "Description": "The launch path of the application.",
            "Type": "string",
            "Required": true
        },
        "WorkingDirectory": {
            "Description": "The working directory of the application.",
            "Type": "string",
            "Required": false
        },
        "LaunchParameters": {
            "Description": "The launch parameters of the application.",
            "Type": "string",
            "Required": false
        },
        "Platforms": {
            "Description": "The platforms the application supports. WINDOWS_SERVER_2019 and AMAZON_LINUX2 are supported for Elastic fleets.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "InstanceFamilies": {
            "Description": "The instance families the application supports. Valid values are GENERAL_PURPOSE and GRAPHICS_G4.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "AppBlockArn": {
            "Description": "The app block ARN to which the application should be associated",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags assigned to the application.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_directory_config": {
        "DirectoryName": {
            "Description": "The fully qualified name of the directory (for example, corp.example.com).",
            "Type": "string",
            "Required": true
        },
        "OrganizationalUnitDistinguishedNames": {
            "Description": "The distinguished names of the organizational units for computer accounts.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ServiceAccountCredentials": {
            "Description": "The credentials for the service account used by the fleet or image builder to connect to the directory.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_entitlement": {
        "Name": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": true
        },
        "StackName": {
            "Description": "The name of the stack with which the entitlement is associated.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the entitlement.",
            "Type": "string",
            "Required": false
        },
        "AppVisibility": {
            "Description": "Specifies whether all or selected apps are entitled.",
            "Type": "string",
            "Required": true
        },
        "Attributes": {
            "Description": "The attributes of the entitlement.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_fleet": {
        "Name": {
            "Description": "A unique name for the fleet.",
            "Type": "string",
            "Required": true
        },
        "ImageName": {
            "Description": "The name of the image used to create the fleet.",
            "Type": "string",
            "Required": false
        },
        "ImageArn": {
            "Description": "The ARN of the public, private, or shared image to use.",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type to use when launching fleet instances. The following instance types are available:\nThe following instance types are available for Elastic fleets:",
            "Type": "string",
            "Required": true,
            "string variables": [
                {},
                {}
            ]
        },
        "FleetType": {
            "Description": "The fleet type.\nProvides users with instant-on access to their apps. You are charged for all running instances in your fleet, even if no users are streaming apps.\nProvide users with access to applications after they connect, which takes one to two minutes. You are charged for instance streaming when users are connected and a small hourly fee for instances that are not streaming apps.",
            "Type": "string",
            "Required": false
        },
        "ComputeCapacity": {
            "Description": "The desired capacity for the fleet. This is not allowed for Elastic fleets. For Elastic fleets, specify MaxConcurrentSessions instead.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VpcConfig": {
            "Description": "The VPC configuration for the fleet. This is required for Elastic fleets, but not required for other fleet types. Elastic fleets require that you specify at least two subnets in different availability zones.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MaxUserDurationInSeconds": {
            "Description": "The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.\nSpecify a value between 600 and 360000.",
            "Type": "integer",
            "Required": false
        },
        "DisconnectTimeoutInSeconds": {
            "Description": "The amount of time that a streaming session remains active after users disconnect. If users try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance.\nSpecify a value between 60 and 360000.",
            "Type": "integer",
            "Required": false
        },
        "Description": {
            "Description": "The description to display.",
            "Type": "string",
            "Required": false
        },
        "DisplayName": {
            "Description": "The fleet name to display.",
            "Type": "string",
            "Required": false
        },
        "EnableDefaultInternetAccess": {
            "Description": "Enables or disables default internet access for the fleet.",
            "Type": "boolean",
            "Required": false
        },
        "DomainJoinInfo": {
            "Description": "The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. This is not allowed for Elastic fleets.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to associate with the fleet. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=.\nIf you do not specify a value, the value is set to an empty string.\nGenerally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters:\n_. : / = + - @\nFor more information, see Tagging Your Resources in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "IdleDisconnectTimeoutInSeconds": {
            "Description": "The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the DisconnectTimeoutInSeconds time interval begins. Users are notified before they are disconnected due to inactivity. If they try to reconnect to the streaming session before the time interval specified in DisconnectTimeoutInSeconds elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in IdleDisconnectTimeoutInSeconds elapses, they are disconnected.\nTo prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.",
            "Type": "integer",
            "Required": false
        },
        "IamRoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) AssumeRole API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the appstream_machine_role credential profile on the instance.\nFor more information, see Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "string",
            "Required": false
        },
        "StreamView": {
            "Description": "The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays.\nThe default value is APP .",
            "Type": "string",
            "Required": false
        },
        "Platform": {
            "Description": "The fleet platform. WINDOWS_SERVER_2019 and AMAZON_LINUX2 are supported for Elastic fleets.",
            "Type": "string",
            "Required": false
        },
        "MaxConcurrentSessions": {
            "Description": "The maximum concurrent sessions of the Elastic fleet. This is required for Elastic fleets, and not allowed for other fleet types.",
            "Type": "integer",
            "Required": false
        },
        "UsbDeviceFilterStrings": {
            "Description": "The USB device filter strings that specify which USB devices a user can redirect to the fleet streaming session, when using the Windows native client. This is allowed but not required for Elastic fleets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SessionScriptS3Location": {
            "Description": "The S3 location of the session scripts configuration zip file. This only applies to Elastic fleets.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_image_builder": {
        "Name": {
            "Description": "A unique name for the image builder.",
            "Type": "string",
            "Required": true
        },
        "ImageName": {
            "Description": "The name of the image used to create the image builder.",
            "Type": "string",
            "Required": false
        },
        "ImageArn": {
            "Description": "The ARN of the public, private, or shared image to use.",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type to use when launching the image builder. The following instance types are available:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Description": {
            "Description": "The description to display.",
            "Type": "string",
            "Required": false
        },
        "DisplayName": {
            "Description": "The image builder name to display.",
            "Type": "string",
            "Required": false
        },
        "VpcConfig": {
            "Description": "The VPC configuration for the image builder. You can specify only one subnet.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "IamRoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM role to apply to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) AssumeRole API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the appstream_machine_role credential profile on the instance.\nFor more information, see Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "string",
            "Required": false
        },
        "EnableDefaultInternetAccess": {
            "Description": "Enables or disables default internet access for the image builder.",
            "Type": "boolean",
            "Required": false
        },
        "DomainJoinInfo": {
            "Description": "The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "AppstreamAgentVersion": {
            "Description": "The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to associate with the image builder. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=.\nGenerally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters:\n_. : / = + - @\nIf you do not specify a value, the value is set to an empty string.\nFor more information about tags, see Tagging Your Resources in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "AccessEndpoints": {
            "Description": "The list of interface VPC endpoint (interface endpoint) objects. Administrators can connect to the image builder only through the specified endpoints.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_image_builder_streaming_url": {
        "Name": {
            "Description": "The name of the image builder.",
            "Type": "string",
            "Required": true
        },
        "Validity": {
            "Description": "The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.",
            "Type": "integer",
            "Required": false
        }
    },
    "create_stack": {
        "Name": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description to display.",
            "Type": "string",
            "Required": false
        },
        "DisplayName": {
            "Description": "The stack name to display.",
            "Type": "string",
            "Required": false
        },
        "StorageConnectors": {
            "Description": "The storage connectors to enable.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RedirectURL": {
            "Description": "The URL that users are redirected to after their streaming session ends.",
            "Type": "string",
            "Required": false
        },
        "FeedbackURL": {
            "Description": "The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.",
            "Type": "string",
            "Required": false
        },
        "UserSettings": {
            "Description": "The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ApplicationSettings": {
            "Description": "The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "The tags to associate with the stack. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=.\nIf you do not specify a value, the value is set to an empty string.\nGenerally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters:\n_. : / = + - @\nFor more information about tags, see Tagging Your Resources in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "AccessEndpoints": {
            "Description": "The list of interface VPC endpoint (interface endpoint) objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EmbedHostDomains": {
            "Description": "The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StreamingExperienceSettings": {
            "Description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_streaming_url": {
        "StackName": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        },
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "UserId": {
            "Description": "The identifier of the user.",
            "Type": "string",
            "Required": true
        },
        "ApplicationId": {
            "Description": "The name of the application to launch after the session starts. This is the name that you specified as Name in the Image Assistant. If your fleet is enabled for the Desktop stream view, you can also choose to launch directly to the operating system desktop. To do so, specify Desktop .",
            "Type": "string",
            "Required": false
        },
        "Validity": {
            "Description": "The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 60 seconds.",
            "Type": "integer",
            "Required": false
        },
        "SessionContext": {
            "Description": "The session context. For more information, see Session Context in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "create_updated_image": {
        "existingImageName": {
            "Description": "The name of the image to update.",
            "Type": "string",
            "Required": true
        },
        "newImageName": {
            "Description": "The name of the new image. The name must be unique within the AWS account and Region.",
            "Type": "string",
            "Required": true
        },
        "newImageDescription": {
            "Description": "The description to display for the new image.",
            "Type": "string",
            "Required": false
        },
        "newImageDisplayName": {
            "Description": "The name to display for the new image.",
            "Type": "string",
            "Required": false
        },
        "newImageTags": {
            "Description": "The tags to associate with the new image. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=.\nGenerally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters:\n_. : / = + - @\nIf you do not specify a value, the value is set to an empty string.\nFor more information about tags, see Tagging Your Resources in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "dryRun": {
            "Description": "Indicates whether to display the status of image update availability before AppStream 2.0 initiates the process of creating a new updated image. If this value is set to true , AppStream 2.0 displays whether image updates are available. If this value is set to false , AppStream 2.0 initiates the process of creating a new updated image without displaying whether image updates are available.",
            "Type": "boolean",
            "Required": false
        }
    },
    "create_usage_report_subscription": "No parameters defined",
    "create_user": {
        "UserName": {
            "Description": "The email address of the user.",
            "Type": "string",
            "Required": true
        },
        "MessageAction": {
            "Description": "The action to take for the welcome email that is sent to a user after the user is created in the user pool. If you specify SUPPRESS, no email is sent. If you specify RESEND, do not specify the first name or last name of the user. If the value is null, the email is sent.",
            "Type": "string",
            "Required": false
        },
        "FirstName": {
            "Description": "The first name, or given name, of the user.",
            "Type": "string",
            "Required": false
        },
        "LastName": {
            "Description": "The last name, or surname, of the user.",
            "Type": "string",
            "Required": false
        },
        "AuthenticationType": {
            "Description": "The authentication type for the user. You must specify USERPOOL.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_app_block": {
        "Name": {
            "Description": "The name of the app block.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_application": {
        "Name": {
            "Description": "The name of the application.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_directory_config": {
        "DirectoryName": {
            "Description": "The name of the directory configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_entitlement": {
        "Name": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": true
        },
        "StackName": {
            "Description": "The name of the stack with which the entitlement is associated.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_fleet": {
        "Name": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_image": {
        "Name": {
            "Description": "The name of the image.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_image_builder": {
        "Name": {
            "Description": "The name of the image builder.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_image_permissions": {
        "Name": {
            "Description": "The name of the private image.",
            "Type": "string",
            "Required": true
        },
        "SharedAccountId": {
            "Description": "The 12-digit identifier of the AWS account for which to delete image permissions.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_stack": {
        "Name": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_usage_report_subscription": "No parameters defined",
    "delete_user": {
        "UserName": {
            "Description": "The email address of the user.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationType": {
            "Description": "The authentication type for the user. You must specify USERPOOL.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_app_blocks": {
        "Arns": {
            "Description": "The ARNs of the app blocks.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_application_fleet_associations": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": false
        },
        "ApplicationArn": {
            "Description": "The ARN of the application.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_applications": {
        "Arns": {
            "Description": "The ARNs for the applications.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_directory_configs": {
        "DirectoryNames": {
            "Description": "The directory names.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_entitlements": {
        "Name": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": false
        },
        "StackName": {
            "Description": "The name of the stack with which the entitlement is associated.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_fleets": {
        "Names": {
            "Description": "The names of the fleets to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_image_builders": {
        "Names": {
            "Description": "The names of the image builders to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_image_permissions": {
        "Name": {
            "Description": "The name of the private image for which to describe permissions. The image must be one that you own.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "SharedAwsAccountIds": {
            "Description": "The 12-digit identifier of one or more AWS accounts with which the image is shared.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_images": {
        "Names": {
            "Description": "The names of the public or private images to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Arns": {
            "Description": "The ARNs of the public, private, and shared images to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Type": {
            "Description": "The type of image (public, private, or shared) to describe.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_sessions": {
        "StackName": {
            "Description": "The name of the stack. This value is case-sensitive.",
            "Type": "string",
            "Required": true
        },
        "FleetName": {
            "Description": "The name of the fleet. This value is case-sensitive.",
            "Type": "string",
            "Required": true
        },
        "UserId": {
            "Description": "The user identifier (ID). If you specify a user ID, you must also specify the authentication type.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        },
        "Limit": {
            "Description": "The size of each page of results. The default value is 20 and the maximum value is 50.",
            "Type": "integer",
            "Required": false
        },
        "AuthenticationType": {
            "Description": "The authentication method. Specify API for a user authenticated using a streaming URL or SAML for a SAML federated user. The default is to authenticate users using a streaming URL.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_stacks": {
        "Names": {
            "Description": "The names of the stacks to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_usage_report_subscriptions": {
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_user_stack_associations": {
        "StackName": {
            "Description": "The name of the stack that is associated with the user.",
            "Type": "string",
            "Required": false
        },
        "UserName": {
            "Description": "The email address of the user who is associated with the stack.",
            "Type": "string",
            "Required": false
        },
        "AuthenticationType": {
            "Description": "The authentication type for the user who is associated with the stack. You must specify USERPOOL.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_users": {
        "AuthenticationType": {
            "Description": "The authentication type for the users in the user pool to describe. You must specify USERPOOL.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "disable_user": {
        "UserName": {
            "Description": "The email address of the user.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationType": {
            "Description": "The authentication type for the user. You must specify USERPOOL.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_application_fleet": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "ApplicationArn": {
            "Description": "The ARN of the application.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_application_from_entitlement": {
        "StackName": {
            "Description": "The name of the stack with which the entitlement is associated.",
            "Type": "string",
            "Required": true
        },
        "EntitlementName": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": true
        },
        "ApplicationIdentifier": {
            "Description": "The identifier of the application to remove from the entitlement.",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_fleet": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "StackName": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_user": {
        "UserName": {
            "Description": "The email address of the user.",
            "Type": "string",
            "Required": true
        },
        "AuthenticationType": {
            "Description": "The authentication type for the user. You must specify USERPOOL.",
            "Type": "string",
            "Required": true
        }
    },
    "expire_session": {
        "SessionId": {
            "Description": "The identifier of the streaming session.",
            "Type": "string",
            "Required": true
        }
    },
    "list_associated_fleets": {
        "StackName": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "list_associated_stacks": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        }
    },
    "list_entitled_applications": {
        "StackName": {
            "Description": "The name of the stack with which the entitlement is associated.",
            "Type": "string",
            "Required": true
        },
        "EntitlementName": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The pagination token used to retrieve the next page of results for this operation.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum size of each page of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the resource.",
            "Type": "string",
            "Required": true
        }
    },
    "start_fleet": {
        "Name": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        }
    },
    "start_image_builder": {
        "Name": {
            "Description": "The name of the image builder.",
            "Type": "string",
            "Required": true
        },
        "AppstreamAgentVersion": {
            "Description": "The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].",
            "Type": "string",
            "Required": false
        }
    },
    "stop_fleet": {
        "Name": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        }
    },
    "stop_image_builder": {
        "Name": {
            "Description": "The name of the image builder.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the resource.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to associate. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=.\nIf you do not specify a value, the value is set to an empty string.\nGenerally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters:\n_. : / = + - @",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the resource.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "The tag keys for the tags to disassociate.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_application": {
        "Name": {
            "Description": "The name of the application. This name is visible to users when display name is not specified.",
            "Type": "string",
            "Required": true
        },
        "DisplayName": {
            "Description": "The display name of the application. This name is visible to users in the application catalog.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description of the application.",
            "Type": "string",
            "Required": false
        },
        "IconS3Location": {
            "Description": "The icon S3 location of the application.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LaunchPath": {
            "Description": "The launch path of the application.",
            "Type": "string",
            "Required": false
        },
        "WorkingDirectory": {
            "Description": "The working directory of the application.",
            "Type": "string",
            "Required": false
        },
        "LaunchParameters": {
            "Description": "The launch parameters of the application.",
            "Type": "string",
            "Required": false
        },
        "AppBlockArn": {
            "Description": "The ARN of the app block.",
            "Type": "string",
            "Required": false
        },
        "AttributesToDelete": {
            "Description": "The attributes to delete for an application.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_directory_config": {
        "DirectoryName": {
            "Description": "The name of the Directory Config object.",
            "Type": "string",
            "Required": true
        },
        "OrganizationalUnitDistinguishedNames": {
            "Description": "The distinguished names of the organizational units for computer accounts.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ServiceAccountCredentials": {
            "Description": "The credentials for the service account used by the fleet or image builder to connect to the directory.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_entitlement": {
        "Name": {
            "Description": "The name of the entitlement.",
            "Type": "string",
            "Required": true
        },
        "StackName": {
            "Description": "The name of the stack with which the entitlement is associated.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description of the entitlement.",
            "Type": "string",
            "Required": false
        },
        "AppVisibility": {
            "Description": "Specifies whether all or only selected apps are entitled.",
            "Type": "string",
            "Required": false
        },
        "Attributes": {
            "Description": "The attributes of the entitlement.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_fleet": {
        "ImageName": {
            "Description": "The name of the image used to create the fleet.",
            "Type": "string",
            "Required": false
        },
        "ImageArn": {
            "Description": "The ARN of the public, private, or shared image to use.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "A unique name for the fleet.",
            "Type": "string",
            "Required": false
        },
        "InstanceType": {
            "Description": "The instance type to use when launching fleet instances. The following instance types are available:\nThe following instance types are available for Elastic fleets:",
            "Type": "string",
            "Required": false,
            "string variables": [
                {},
                {}
            ]
        },
        "ComputeCapacity": {
            "Description": "The desired capacity for the fleet. This is not allowed for Elastic fleets.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VpcConfig": {
            "Description": "The VPC configuration for the fleet. This is required for Elastic fleets, but not required for other fleet types. Elastic fleets require that you specify at least two subnets in different availability zones.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "MaxUserDurationInSeconds": {
            "Description": "The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.\nSpecify a value between 600 and 360000.",
            "Type": "integer",
            "Required": false
        },
        "DisconnectTimeoutInSeconds": {
            "Description": "The amount of time that a streaming session remains active after users disconnect. If users try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance.\nSpecify a value between 60 and 360000.",
            "Type": "integer",
            "Required": false
        },
        "DeleteVpcConfig": {
            "Description": "Deletes the VPC association for the specified fleet.",
            "Type": "boolean",
            "Required": false
        },
        "Description": {
            "Description": "The description to display.",
            "Type": "string",
            "Required": false
        },
        "DisplayName": {
            "Description": "The fleet name to display.",
            "Type": "string",
            "Required": false
        },
        "EnableDefaultInternetAccess": {
            "Description": "Enables or disables default internet access for the fleet.",
            "Type": "boolean",
            "Required": false
        },
        "DomainJoinInfo": {
            "Description": "The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "IdleDisconnectTimeoutInSeconds": {
            "Description": "The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the DisconnectTimeoutInSeconds time interval begins. Users are notified before they are disconnected due to inactivity. If users try to reconnect to the streaming session before the time interval specified in DisconnectTimeoutInSeconds elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in IdleDisconnectTimeoutInSeconds elapses, they are disconnected.\nTo prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.",
            "Type": "integer",
            "Required": false
        },
        "AttributesToDelete": {
            "Description": "The fleet attributes to delete.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "IamRoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) AssumeRole API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the appstream_machine_role credential profile on the instance.\nFor more information, see Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances in the Amazon AppStream 2.0 Administration Guide .",
            "Type": "string",
            "Required": false
        },
        "StreamView": {
            "Description": "The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays.\nThe default value is APP .",
            "Type": "string",
            "Required": false
        },
        "Platform": {
            "Description": "The platform of the fleet. WINDOWS_SERVER_2019 and AMAZON_LINUX2 are supported for Elastic fleets.",
            "Type": "string",
            "Required": false
        },
        "MaxConcurrentSessions": {
            "Description": "The maximum number of concurrent sessions for a fleet.",
            "Type": "integer",
            "Required": false
        },
        "UsbDeviceFilterStrings": {
            "Description": "The USB device filter strings that specify which USB devices a user can redirect to the fleet streaming session, when using the Windows native client. This is allowed but not required for Elastic fleets.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SessionScriptS3Location": {
            "Description": "The S3 location of the session scripts configuration zip file. This only applies to Elastic fleets.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_image_permissions": {
        "Name": {
            "Description": "The name of the private image.",
            "Type": "string",
            "Required": true
        },
        "SharedAccountId": {
            "Description": "The 12-digit identifier of the AWS account for which you want add or update image permissions.",
            "Type": "string",
            "Required": true
        },
        "ImagePermissions": {
            "Description": "The permissions for the image.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_stack": {
        "DisplayName": {
            "Description": "The stack name to display.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The description to display.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "The name of the stack.",
            "Type": "string",
            "Required": true
        },
        "StorageConnectors": {
            "Description": "The storage connectors to enable.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DeleteStorageConnectors": {
            "Description": "Deletes the storage connectors currently enabled for the stack.",
            "Type": "boolean",
            "Required": false
        },
        "RedirectURL": {
            "Description": "The URL that users are redirected to after their streaming session ends.",
            "Type": "string",
            "Required": false
        },
        "FeedbackURL": {
            "Description": "The URL that users are redirected to after they choose the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.",
            "Type": "string",
            "Required": false
        },
        "AttributesToDelete": {
            "Description": "The stack attributes to delete.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "UserSettings": {
            "Description": "The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ApplicationSettings": {
            "Description": "The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "AccessEndpoints": {
            "Description": "The list of interface VPC endpoint (interface endpoint) objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EmbedHostDomains": {
            "Description": "The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "StreamingExperienceSettings": {
            "Description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "paginate": {
        "FleetName": {
            "Description": "The name of the fleet.",
            "Type": "string",
            "Required": true
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "Names": {
            "Description": "The names of the fleets to describe.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "Type": "string",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}