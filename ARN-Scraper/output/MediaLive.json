{
    "accept_input_device_transfer": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of the input device to accept. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        }
    },
    "batch_delete": {
        "ChannelIds": {
            "Description": "List of channel IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputIds": {
            "Description": "List of input IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputSecurityGroupIds": {
            "Description": "List of input security group IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MultiplexIds": {
            "Description": "List of multiplex IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "batch_start": {
        "ChannelIds": {
            "Description": "List of channel IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MultiplexIds": {
            "Description": "List of multiplex IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "batch_stop": {
        "ChannelIds": {
            "Description": "List of channel IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MultiplexIds": {
            "Description": "List of multiplex IDs",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "batch_update_schedule": {
        "ChannelId": {
            "Description": "[REQUIRED] Id of the channel whose schedule is being updated.",
            "Type": "string",
            "Required": false
        },
        "Creates": {
            "Description": "Schedule actions to create in the schedule.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Deletes": {
            "Description": "Schedule actions to delete from the schedule.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "cancel_input_device_transfer": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of the input device to cancel. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        }
    },
    "claim_device": {
        "Id": {
            "Description": "The id of the device you want to claim.",
            "Type": "string",
            "Required": false
        }
    },
    "create_channel": {
        "CdiInputSpecification": {
            "Description": "Specification of CDI inputs for this channel",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ChannelClass": {
            "Description": "The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.",
            "Type": "string",
            "Required": false
        },
        "Destinations": {
            "Description": "Placeholder documentation for __listOfOutputDestination",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EncoderSettings": {
            "Description": "Encoder Settings",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InputAttachments": {
            "Description": "List of input attachments for channel.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputSpecification": {
            "Description": "Specification of network and file inputs for this channel",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LogLevel": {
            "Description": "The log level to write to CloudWatch Logs.",
            "Type": "string",
            "Required": false
        },
        "Maintenance": {
            "Description": "Maintenance settings for this channel.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "Name of channel.",
            "Type": "string",
            "Required": false
        },
        "RequestId": {
            "Description": "Unique request ID to be specified. This is needed to prevent retries from creating multiple resources. This field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Reserved": {
            "Description": "Deprecated field that's only usable by whitelisted customers.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "An optional Amazon Resource Name (ARN) of the role to assume when running the Channel.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A collection of key-value pairs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Vpc": {
            "Description": "Settings for the VPC outputs",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_input": {
        "Destinations": {
            "Description": "Destination settings for PUSH type inputs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputDevices": {
            "Description": "Settings for the devices.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputSecurityGroups": {
            "Description": "A list of security groups referenced by IDs to attach to the input.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MediaConnectFlows": {
            "Description": "A list of the MediaConnect Flows that you want to use in this input. You can specify as few as one Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a separate Availability Zone as this ensures your EML input is redundant to AZ issues.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Name": {
            "Description": "Name of the input.",
            "Type": "string",
            "Required": false
        },
        "RequestId": {
            "Description": "Unique identifier of the request to ensure the request is handled exactly once in case of retries. This field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the role this input assumes during and after creation.",
            "Type": "string",
            "Required": false
        },
        "Sources": {
            "Description": "The source URLs for a PULL-type input. Every PULL type input needs exactly two source URLs for redundancy. Only specify sources for PULL type Inputs. Leave Destinations empty.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Tags": {
            "Description": "A collection of key-value pairs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Type": {
            "Description": "The different types of inputs that AWS Elemental MediaLive supports.",
            "Type": "string",
            "Required": false
        },
        "Vpc": {
            "Description": "Settings for a private VPC Input. When this property is specified, the input destination addresses will be created in a VPC rather than with public Internet addresses. This property requires setting the roleArn property on Input creation. Not compatible with the inputSecurityGroups property.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_input_security_group": {
        "Tags": {
            "Description": "A collection of key-value pairs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "WhitelistRules": {
            "Description": "List of IPv4 CIDR addresses to whitelist",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_multiplex": {
        "AvailabilityZones": {
            "Description": "[REQUIRED] A list of availability zones for the multiplex. You must specify exactly two.\n\n(string)Placeholder documentation for __string\n\n",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MultiplexSettings": {
            "Description": "[REQUIRED] Configuration for a multiplex event.\n\nMaximumVideoBufferDelayMilliseconds (integer)Maximum video buffer delay in milliseconds.\nTransportStreamBitrate (integer)[REQUIRED] Transport stream bit rate.\nTransportStreamId (integer)[REQUIRED] Transport stream ID.\nTransportStreamReservedBitrate (integer)Transport stream reserved bit rate.\n\n",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "[REQUIRED] Name of multiplex.",
            "Type": "string",
            "Required": false
        },
        "RequestId": {
            "Description": "[REQUIRED] Unique request ID. This prevents retries from creating multiple resources. This field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A collection of key-value pairs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_multiplex_program": {
        "MultiplexId": {
            "Description": "[REQUIRED] ID of the multiplex where the program is to be created.",
            "Type": "string",
            "Required": false
        },
        "MultiplexProgramSettings": {
            "Description": "[REQUIRED] The settings for this multiplex program.\n\nPreferredChannelPipeline (string)Indicates which pipeline is preferred by the multiplex for program ingest.\nProgramNumber (integer)[REQUIRED] Unique program number.\nServiceDescriptor (dict)Transport stream service descriptor configuration for the Multiplex program.\nProviderName (string)[REQUIRED] Name of the provider.\nServiceName (string)[REQUIRED] Name of the service.\n\n\nVideoSettings (dict)Program video settings configuration.\nConstantBitrate (integer)The constant bitrate configuration for the video encode. When this field is defined, StatmuxSettings must be undefined.\nStatmuxSettings (dict)Statmux rate control settings. When this field is defined, ConstantBitrate must be undefined.\nMaximumBitrate (integer)Maximum statmux bitrate.\nMinimumBitrate (integer)Minimum statmux bitrate.\nPriority (integer)The purpose of the priority is to use a combination of thenmultiplex rate control algorithm and the QVBR capability of thenencoder to prioritize the video quality of some channels in anmultiplex over others. Channels that have a higher priority willnget higher video quality at the expense of the video quality ofnother channels in the multiplex with lower priority.\n\n\n\n\n\n",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ProgramName": {
            "Description": "[REQUIRED] Name of multiplex program.",
            "Type": "string",
            "Required": false
        },
        "RequestId": {
            "Description": "[REQUIRED] Unique request ID. This prevents retries from creating multiple resources. This field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "create_partner_input": {
        "InputId": {
            "Description": "[REQUIRED] Unique ID of the input.",
            "Type": "string",
            "Required": false
        },
        "RequestId": {
            "Description": "Unique identifier of the request to ensure the request is handled exactly once in case of retries. This field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A collection of key-value pairs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_tags": {
        "ResourceArn": {
            "Description": "[REQUIRED] Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "Placeholder documentation for Tags",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "delete_channel": {
        "ChannelId": {
            "Description": "[REQUIRED] Unique ID of the channel.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_input": {
        "InputId": {
            "Description": "[REQUIRED] Unique ID of the input",
            "Type": "string",
            "Required": false
        }
    },
    "delete_input_security_group": {
        "InputSecurityGroupId": {
            "Description": "[REQUIRED] The Input Security Group to delete",
            "Type": "string",
            "Required": false
        }
    },
    "delete_multiplex": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_multiplex_program": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex that the program belongs to.",
            "Type": "string",
            "Required": false
        },
        "ProgramName": {
            "Description": "[REQUIRED] The multiplex program name.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_reservation": {
        "ReservationId": {
            "Description": "[REQUIRED] Unique reservation ID, e.g. '1234567'",
            "Type": "string",
            "Required": false
        }
    },
    "delete_schedule": {
        "ChannelId": {
            "Description": "[REQUIRED] Id of the channel whose schedule is being deleted.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_tags": {
        "ResourceArn": {
            "Description": "[REQUIRED] Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        },
        "TagKeys": {
            "Description": "[REQUIRED] An array of tag keys to delete\n\n(string)Placeholder documentation for __string\n\n",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "describe_channel": {
        "ChannelId": {
            "Description": "[REQUIRED] channel ID",
            "Type": "string",
            "Required": false
        }
    },
    "describe_input": {
        "InputId": {
            "Description": "[REQUIRED] Unique ID of the input",
            "Type": "string",
            "Required": false
        }
    },
    "describe_input_device": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of this input device. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_input_device_thumbnail": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of this input device. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        },
        "Accept": {
            "Description": "[REQUIRED] The HTTP Accept header. Indicates the requested type for the thumbnail.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_input_security_group": {
        "InputSecurityGroupId": {
            "Description": "[REQUIRED] The id of the Input Security Group to describe",
            "Type": "string",
            "Required": false
        }
    },
    "describe_multiplex": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_multiplex_program": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex that the program belongs to.",
            "Type": "string",
            "Required": false
        },
        "ProgramName": {
            "Description": "[REQUIRED] The name of the program.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_offering": {
        "OfferingId": {
            "Description": "[REQUIRED] Unique offering ID, e.g. '87654321'",
            "Type": "string",
            "Required": false
        }
    },
    "describe_reservation": {
        "ReservationId": {
            "Description": "[REQUIRED] Unique reservation ID, e.g. '1234567'",
            "Type": "string",
            "Required": false
        }
    },
    "describe_schedule": {
        "ChannelId": {
            "Description": "[REQUIRED] Id of the channel whose schedule is being updated.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "list_channels": {
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "list_input_device_transfers": {
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        },
        "TransferType": {
            "Description": "[REQUIRED] Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "list_input_devices": {
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "list_input_security_groups": {
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "list_inputs": {
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "list_multiplex_programs": {
        "MaxResults": {
            "Description": "The maximum number of items to return.",
            "Type": "integer",
            "Required": false
        },
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex that the programs belong to.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_multiplexes": {
        "MaxResults": {
            "Description": "The maximum number of items to return.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token to retrieve the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_offerings": {
        "ChannelClass": {
            "Description": "Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'",
            "Type": "string",
            "Required": false
        },
        "ChannelConfiguration": {
            "Description": "Filter to offerings that match the configuration of an existing channel, e.g. '2345678' (a channel ID)",
            "Type": "string",
            "Required": false
        },
        "Codec": {
            "Description": "Filter by codec, 'AVC', 'HEVC', 'MPEG2', 'AUDIO', or 'LINK'",
            "Type": "string",
            "Required": false
        },
        "Duration": {
            "Description": "Filter by offering duration, e.g. '12'",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "MaximumBitrate": {
            "Description": "Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'",
            "Type": "string",
            "Required": false
        },
        "MaximumFramerate": {
            "Description": "Filter by framerate, 'MAX_30_FPS' or 'MAX_60_FPS'",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        },
        "Resolution": {
            "Description": "Filter by resolution, 'SD', 'HD', 'FHD', or 'UHD'",
            "Type": "string",
            "Required": false
        },
        "ResourceType": {
            "Description": "Filter by resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'",
            "Type": "string",
            "Required": false
        },
        "SpecialFeature": {
            "Description": "Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'",
            "Type": "string",
            "Required": false
        },
        "VideoQuality": {
            "Description": "Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'",
            "Type": "string",
            "Required": false
        }
    },
    "list_reservations": {
        "ChannelClass": {
            "Description": "Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'",
            "Type": "string",
            "Required": false
        },
        "Codec": {
            "Description": "Filter by codec, 'AVC', 'HEVC', 'MPEG2', 'AUDIO', or 'LINK'",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "Placeholder documentation for MaxResults",
            "Type": "integer",
            "Required": false
        },
        "MaximumBitrate": {
            "Description": "Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'",
            "Type": "string",
            "Required": false
        },
        "MaximumFramerate": {
            "Description": "Filter by framerate, 'MAX_30_FPS' or 'MAX_60_FPS'",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        },
        "Resolution": {
            "Description": "Filter by resolution, 'SD', 'HD', 'FHD', or 'UHD'",
            "Type": "string",
            "Required": false
        },
        "ResourceType": {
            "Description": "Filter by resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'",
            "Type": "string",
            "Required": false
        },
        "SpecialFeature": {
            "Description": "Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'",
            "Type": "string",
            "Required": false
        },
        "VideoQuality": {
            "Description": "Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "[REQUIRED] Placeholder documentation for __string",
            "Type": "string",
            "Required": false
        }
    },
    "purchase_offering": {
        "Count": {
            "Description": "[REQUIRED] Number of resources",
            "Type": "integer",
            "Required": false
        },
        "Name": {
            "Description": "Name for the new reservation",
            "Type": "string",
            "Required": false
        },
        "OfferingId": {
            "Description": "[REQUIRED] Offering to purchase, e.g. '87654321'",
            "Type": "string",
            "Required": false
        },
        "RenewalSettings": {
            "Description": "Renewal settings for the reservation",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RequestId": {
            "Description": "Unique request ID to be specified. This is needed to prevent retries from creating multiple resources.This field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Start": {
            "Description": "Requested reservation start time (UTC) in ISO-8601 format. The specified time must be between the first day of the current month and one year from now. If no value is given, the default is now.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A collection of key-value pairs",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "reboot_input_device": {
        "Force": {
            "Description": "Force a reboot of an input device. If the device is streaming, it will stop streaming and begin rebooting within a few seconds of sending the command. If the device was streaming prior to the reboot, the device will resume streaming when the reboot completes.",
            "Type": "string",
            "Required": false
        },
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of the input device to reboot. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        }
    },
    "reject_input_device_transfer": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of the input device to reject. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        }
    },
    "start_channel": {
        "ChannelId": {
            "Description": "[REQUIRED] A request to start a channel",
            "Type": "string",
            "Required": false
        }
    },
    "start_input_device_maintenance_window": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of the input device to start a maintenance window for. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        }
    },
    "start_multiplex": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex.",
            "Type": "string",
            "Required": false
        }
    },
    "stop_channel": {
        "ChannelId": {
            "Description": "[REQUIRED] A request to stop a running channel",
            "Type": "string",
            "Required": false
        }
    },
    "stop_multiplex": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex.",
            "Type": "string",
            "Required": false
        }
    },
    "transfer_input_device": {
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of this input device. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        },
        "TargetCustomerId": {
            "Description": "The AWS account ID (12 digits) for the recipient of the device transfer.",
            "Type": "string",
            "Required": false
        },
        "TargetRegion": {
            "Description": "The target AWS region to transfer the device.",
            "Type": "string",
            "Required": false
        },
        "TransferMessage": {
            "Description": "An optional message for the recipient. Maximum 280 characters.",
            "Type": "string",
            "Required": false
        }
    },
    "update_channel": {
        "CdiInputSpecification": {
            "Description": "Specification of CDI inputs for this channel",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ChannelId": {
            "Description": "[REQUIRED] channel ID",
            "Type": "string",
            "Required": false
        },
        "Destinations": {
            "Description": "A list of output destinations for this channel.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "EncoderSettings": {
            "Description": "The encoder settings for this channel.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InputAttachments": {
            "Description": "Placeholder documentation for __listOfInputAttachment",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputSpecification": {
            "Description": "Specification of network and file inputs for this channel",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LogLevel": {
            "Description": "The log level to write to CloudWatch Logs.",
            "Type": "string",
            "Required": false
        },
        "Maintenance": {
            "Description": "Maintenance settings for this channel.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "The name of the channel.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "An optional Amazon Resource Name (ARN) of the role to assume when running the Channel. If you do not specify this on an update call but the role was previously set that role will be removed.",
            "Type": "string",
            "Required": false
        }
    },
    "update_channel_class": {
        "ChannelClass": {
            "Description": "[REQUIRED] The channel class that you wish to update this channel to use.",
            "Type": "string",
            "Required": false
        },
        "ChannelId": {
            "Description": "[REQUIRED] Channel Id of the channel whose class should be updated.",
            "Type": "string",
            "Required": false
        },
        "Destinations": {
            "Description": "A list of output destinations for this channel.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_input": {
        "Destinations": {
            "Description": "Destination settings for PUSH type inputs.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputDevices": {
            "Description": "Settings for the devices.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "InputId": {
            "Description": "[REQUIRED] Unique ID of the input.",
            "Type": "string",
            "Required": false
        },
        "InputSecurityGroups": {
            "Description": "A list of security groups referenced by IDs to attach to the input.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MediaConnectFlows": {
            "Description": "A list of the MediaConnect Flow ARNs that you want to use as the source of the input. You can specify as few as one Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a separate Availability Zone as this ensures your EML input is redundant to AZ issues.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Name": {
            "Description": "Name of the input.",
            "Type": "string",
            "Required": false
        },
        "RoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the role this input assumes during and after creation.",
            "Type": "string",
            "Required": false
        },
        "Sources": {
            "Description": "The source URLs for a PULL-type input. Every PULL type input needs exactly two source URLs for redundancy. Only specify sources for PULL type Inputs. Leave Destinations empty.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_input_device": {
        "HdDeviceSettings": {
            "Description": "The settings that you want to apply to the HD input device.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "InputDeviceId": {
            "Description": "[REQUIRED] The unique ID of the input device. For example, hd-123456789abcdef.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "The name that you assigned to this input device (not the unique ID).",
            "Type": "string",
            "Required": false
        },
        "UhdDeviceSettings": {
            "Description": "The settings that you want to apply to the UHD input device.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "update_input_security_group": {
        "InputSecurityGroupId": {
            "Description": "[REQUIRED] The id of the Input Security Group to update.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "A collection of key-value pairs.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "WhitelistRules": {
            "Description": "List of IPv4 CIDR addresses to whitelist",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_multiplex": {
        "MultiplexId": {
            "Description": "[REQUIRED] ID of the multiplex to update.",
            "Type": "string",
            "Required": false
        },
        "MultiplexSettings": {
            "Description": "The new settings for a multiplex.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "Name of the multiplex.",
            "Type": "string",
            "Required": false
        }
    },
    "update_multiplex_program": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex of the program to update.",
            "Type": "string",
            "Required": false
        },
        "MultiplexProgramSettings": {
            "Description": "The new settings for a multiplex program.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ProgramName": {
            "Description": "[REQUIRED] The name of the program to update.",
            "Type": "string",
            "Required": false
        }
    },
    "update_reservation": {
        "Name": {
            "Description": "Name of the reservation",
            "Type": "string",
            "Required": false
        },
        "RenewalSettings": {
            "Description": "Renewal settings for the reservation",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ReservationId": {
            "Description": "[REQUIRED] Unique reservation ID, e.g. '1234567'",
            "Type": "string",
            "Required": false
        }
    },
    "paginate": {
        "ChannelClass": {
            "Description": "Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'",
            "Type": "string",
            "Required": false
        },
        "Codec": {
            "Description": "Filter by codec, 'AVC', 'HEVC', 'MPEG2', 'AUDIO', or 'LINK'",
            "Type": "string",
            "Required": false
        },
        "MaximumBitrate": {
            "Description": "Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'",
            "Type": "string",
            "Required": false
        },
        "MaximumFramerate": {
            "Description": "Filter by framerate, 'MAX_30_FPS' or 'MAX_60_FPS'",
            "Type": "string",
            "Required": false
        },
        "Resolution": {
            "Description": "Filter by resolution, 'SD', 'HD', 'FHD', or 'UHD'",
            "Type": "string",
            "Required": false
        },
        "ResourceType": {
            "Description": "Filter by resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'",
            "Type": "string",
            "Required": false
        },
        "SpecialFeature": {
            "Description": "Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'",
            "Type": "string",
            "Required": false
        },
        "VideoQuality": {
            "Description": "Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "MultiplexId": {
            "Description": "[REQUIRED] The ID of the multiplex.",
            "Type": "string",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}