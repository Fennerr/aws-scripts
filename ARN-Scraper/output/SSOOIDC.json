{
    "create_token": {
        "clientId": {
            "Description": "The unique identifier string for each client. This value should come from the persisted result of the  RegisterClient API.",
            "Type": "string",
            "Required": true
        },
        "clientSecret": {
            "Description": "A secret string generated for the client. This value should come from the persisted result of the  RegisterClient API.",
            "Type": "string",
            "Required": true
        },
        "grantType": {
            "Description": "Supports grant types for authorization code, refresh token, and device code request.",
            "Type": "string",
            "Required": true
        },
        "deviceCode": {
            "Description": "Used only when calling this API for the device code grant type. This short-term code is used to identify this authentication attempt. This should come from an in-memory reference to the result of the  StartDeviceAuthorization API.",
            "Type": "string",
            "Required": false
        },
        "code": {
            "Description": "The authorization code received from the authorization service. This parameter is required to perform an authorization grant request to get access to a token.",
            "Type": "string",
            "Required": false
        },
        "refreshToken": {
            "Description": "The token used to obtain an access token in the event that the access token is invalid or expired. This token is not issued by the service.",
            "Type": "string",
            "Required": false
        },
        "scope": {
            "Description": "The list of scopes that is defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "redirectUri": {
            "Description": "The location of the application that will receive the authorization code. Users authorize the service to send the request to this location.",
            "Type": "string",
            "Required": false
        }
    },
    "register_client": {
        "clientName": {
            "Description": "The friendly name of the client.",
            "Type": "string",
            "Required": true
        },
        "clientType": {
            "Description": "The type of client. The service supports only public as a client type. Anything other than public will be rejected by the service.",
            "Type": "string",
            "Required": true
        },
        "scopes": {
            "Description": "The list of scopes that are defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "start_device_authorization": {
        "clientId": {
            "Description": "The unique identifier string for the client that is registered with AWS SSO. This value should come from the persisted result of the  RegisterClient API operation.",
            "Type": "string",
            "Required": true
        },
        "clientSecret": {
            "Description": "A secret string that is generated for the client. This value should come from the persisted result of the  RegisterClient API operation.",
            "Type": "string",
            "Required": true
        },
        "startUrl": {
            "Description": "The URL for the AWS SSO user portal. For more information, see Using the User Portal in the AWS Single Sign-On User Guide .",
            "Type": "string",
            "Required": true
        }
    }
}