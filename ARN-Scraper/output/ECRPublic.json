{
    "batch_check_layer_availability": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the image layers to check. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository that is associated with the image layers to check.",
            "Type": "string",
            "Required": true
        },
        "layerDigests": {
            "Description": "The digests of the image layers to check.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_delete_image": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The repository in a public registry that contains the image to delete.",
            "Type": "string",
            "Required": true
        },
        "imageIds": {
            "Description": "A list of image ID references that correspond to images to delete. The format of the imageIds reference is imageTag=tag or imageDigest=digest .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "complete_layer_upload": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository in a public registry to associate with the image layer.",
            "Type": "string",
            "Required": true
        },
        "uploadId": {
            "Description": "The upload ID from a previous  InitiateLayerUpload operation to associate with the image layer.",
            "Type": "string",
            "Required": true
        },
        "layerDigests": {
            "Description": "The sha256 digest of the image layer.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_repository": {
        "repositoryName": {
            "Description": "The name to use for the repository. This appears publicly in the Amazon ECR Public Gallery. The repository name may be specified on its own (such as nginx-web-app ) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app ).",
            "Type": "string",
            "Required": true
        },
        "catalogData": {
            "Description": "The details about the repository that are publicly visible in the Amazon ECR Public Gallery.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "tags": {
            "Description": "The metadata that you apply to the repository to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "delete_repository": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the repository to delete. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository to delete.",
            "Type": "string",
            "Required": true
        },
        "force": {
            "Description": "If a repository contains images, forces the deletion.",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_repository_policy": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the repository policy to delete. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository that is associated with the repository policy to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_image_tags": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the repository in which to describe images. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository that contains the image tag details to describe.",
            "Type": "string",
            "Required": true
        },
        "nextToken": {
            "Description": "The nextToken value returned from a previous paginated DescribeImageTags request where maxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the nextToken value. This value is null when there are no more results to return. This option cannot be used when you specify images with imageIds .",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of repository results returned by DescribeImageTags in paginated output. When this parameter is used, DescribeImageTags only returns maxResults results in a single page along with a nextToken response element. The remaining results of the initial request can be seen by sending another DescribeImageTags request with the returned nextToken value. This value can be between 1 and 1000. If this parameter is not used, then DescribeImageTags returns up to 100 results and a nextToken value, if applicable. This option cannot be used when you specify images with imageIds .",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_images": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the repository in which to describe images. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The repository that contains the images to describe.",
            "Type": "string",
            "Required": true
        },
        "imageIds": {
            "Description": "The list of image IDs for the requested repository.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "nextToken": {
            "Description": "The nextToken value returned from a previous paginated DescribeImages request where maxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the nextToken value. This value is null when there are no more results to return. This option cannot be used when you specify images with imageIds .",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of repository results returned by DescribeImages in paginated output. When this parameter is used, DescribeImages only returns maxResults results in a single page along with a nextToken response element. The remaining results of the initial request can be seen by sending another DescribeImages request with the returned nextToken value. This value can be between 1 and 1000. If this parameter is not used, then DescribeImages returns up to 100 results and a nextToken value, if applicable. This option cannot be used when you specify images with imageIds .",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_registries": {
        "nextToken": {
            "Description": "The nextToken value returned from a previous paginated DescribeRegistries request where maxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the nextToken value. This value is null when there are no more results to return.",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of repository results returned by DescribeRegistries in paginated output. When this parameter is used, DescribeRegistries only returns maxResults results in a single page along with a nextToken response element. The remaining results of the initial request can be seen by sending another DescribeRegistries request with the returned nextToken value. This value can be between 1 and 1000. If this parameter is not used, then DescribeRegistries returns up to 100 results and a nextToken value, if applicable.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_repositories": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryNames": {
            "Description": "A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "nextToken": {
            "Description": "The nextToken value returned from a previous paginated DescribeRepositories request where maxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the nextToken value. This value is null when there are no more results to return. This option cannot be used when you specify repositories with repositoryNames .",
            "Type": "string",
            "Required": false
        },
        "maxResults": {
            "Description": "The maximum number of repository results returned by DescribeRepositories in paginated output. When this parameter is used, DescribeRepositories only returns maxResults results in a single page along with a nextToken response element. The remaining results of the initial request can be seen by sending another DescribeRepositories request with the returned nextToken value. This value can be between 1 and 1000. If this parameter is not used, then DescribeRepositories returns up to 100 results and a nextToken value, if applicable. This option cannot be used when you specify repositories with repositoryNames .",
            "Type": "integer",
            "Required": false
        }
    },
    "get_authorization_token": "No parameters defined",
    "get_registry_catalog_data": "No parameters defined",
    "get_repository_catalog_data": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository to retrieve the catalog metadata for.",
            "Type": "string",
            "Required": true
        }
    },
    "get_repository_policy": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the repository. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository with the policy to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "initiate_layer_upload": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository to which you intend to upload layers.",
            "Type": "string",
            "Required": true
        }
    },
    "list_tags_for_resource": {
        "resourceArn": {
            "Description": "The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resource is an Amazon ECR Public repository.",
            "Type": "string",
            "Required": true
        }
    },
    "put_image": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry that contains the repository in which to put the image. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository in which to put the image.",
            "Type": "string",
            "Required": true
        },
        "imageManifest": {
            "Description": "The image manifest corresponding to the image to be uploaded.",
            "Type": "string",
            "Required": true
        },
        "imageManifestMediaType": {
            "Description": "The media type of the image manifest. If you push an image manifest that does not contain the mediaType field, you must specify the imageManifestMediaType in the request.",
            "Type": "string",
            "Required": false
        },
        "imageTag": {
            "Description": "The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or Open Container Initiative (OCI) formats.",
            "Type": "string",
            "Required": false
        },
        "imageDigest": {
            "Description": "The image digest of the image manifest corresponding to the image.",
            "Type": "string",
            "Required": false
        }
    },
    "put_registry_catalog_data": {
        "displayName": {
            "Description": "The display name for a public registry. The display name is shown as the repository author in the Amazon ECR Public Gallery.",
            "Type": "string",
            "Required": false
        }
    },
    "put_repository_catalog_data": {
        "registryId": {
            "Description": "The AWS account ID associated with the public registry the repository is in. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository to create or update the catalog data for.",
            "Type": "string",
            "Required": true
        },
        "catalogData": {
            "Description": "An object containing the catalog data for a repository. This data is publicly visible in the Amazon ECR Public Gallery.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "set_repository_policy": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository to receive the policy.",
            "Type": "string",
            "Required": true
        },
        "policyText": {
            "Description": "The JSON repository policy text to apply to the repository. For more information, see Amazon ECR Repository Policies in the Amazon Elastic Container Registry User Guide .",
            "Type": "string",
            "Required": true
        },
        "force": {
            "Description": "If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the  SetRepositoryPolicy operation. This is intended to prevent accidental repository lock outs.",
            "Type": "boolean",
            "Required": false
        }
    },
    "tag_resource": {
        "resourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the supported resource is an Amazon ECR Public repository.",
            "Type": "string",
            "Required": true
        },
        "tags": {
            "Description": "The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "untag_resource": {
        "resourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently, the supported resource is an Amazon ECR Public repository.",
            "Type": "string",
            "Required": true
        },
        "tagKeys": {
            "Description": "The keys of the tags to be removed.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "upload_layer_part": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryName": {
            "Description": "The name of the repository to which you are uploading layer parts.",
            "Type": "string",
            "Required": true
        },
        "uploadId": {
            "Description": "The upload ID from a previous  InitiateLayerUpload operation to associate with the layer part upload.",
            "Type": "string",
            "Required": true
        },
        "partFirstByte": {
            "Description": "The position of the first byte of the layer part witin the overall image layer.",
            "Type": "integer",
            "Required": true
        },
        "partLastByte": {
            "Description": "The position of the last byte of the layer part within the overall image layer.",
            "Type": "integer",
            "Required": true
        },
        "layerPartBlob": {
            "Description": "The base64-encoded layer part payload.",
            "Type": "bytes",
            "Required": true
        }
    },
    "paginate": {
        "registryId": {
            "Description": "The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default public registry is assumed.",
            "Type": "string",
            "Required": false
        },
        "repositoryNames": {
            "Description": "A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}