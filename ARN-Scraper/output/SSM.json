{
    "add_tags_to_resource": {
        "ResourceType": {
            "Description": "Specifies the type of resource you are tagging.",
            "Type": "string",
            "Required": true
        },
        "ResourceId": {
            "Description": "The resource ID you want to tag.\nUse the ID of the resource. Here are some examples:\nFor the Document and Parameter values, use the name of the resource.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "One or more tags. The value parameter is required.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "associate_ops_item_related_item": {
        "OpsItemId": {
            "Description": "The ID of the OpsItem to which you want to associate a resource as a related item.",
            "Type": "string",
            "Required": true
        },
        "AssociationType": {
            "Description": "The type of association that you want to create between an OpsItem and a resource. OpsCenter supports IsParentOf and RelatesTo association types.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "The type of resource that you want to associate with an OpsItem. OpsCenter supports the following types:",
            "Type": "string",
            "Required": true
        },
        "ResourceUri": {
            "Description": "The Amazon Resource Name (ARN) of the Amazon Web Services resource that you want to associate with the OpsItem.",
            "Type": "string",
            "Required": true
        }
    },
    "cancel_command": {
        "CommandId": {
            "Description": "The ID of the command you want to cancel.",
            "Type": "string",
            "Required": true
        },
        "InstanceIds": {
            "Description": "(Optional) A list of managed node IDs on which you want to cancel the command. If not provided, the command is canceled on every node on which it was requested.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "cancel_maintenance_window_execution": {
        "WindowExecutionId": {
            "Description": "The ID of the maintenance window execution to stop.",
            "Type": "string",
            "Required": true
        }
    },
    "create_activation": {
        "Description": {
            "Description": "A user-defined description of the resource that you want to register with Systems Manager.",
            "Type": "string",
            "Required": false
        },
        "DefaultInstanceName": {
            "Description": "The name of the registered, managed node as it will appear in the Amazon Web Services Systems Manager console or when you use the Amazon Web Services command line tools to list Systems Manager resources.",
            "Type": "string",
            "Required": false
        },
        "IamRole": {
            "Description": "The name of the Identity and Access Management (IAM) role that you want to assign to the managed node. This IAM role must provide AssumeRole permissions for the Amazon Web Services Systems Manager service principal ssm.amazonaws.com. For more information, see Create an IAM service role for a hybrid environment in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": true
        },
        "RegistrationLimit": {
            "Description": "Specify the maximum number of managed nodes you want to register. The default value is 1 .",
            "Type": "integer",
            "Required": false
        },
        "ExpirationDate": {
            "Description": "The date by which this activation request should expire, in timestamp format, such as \"2021-07-07T00:00:00\". You can specify a date up to 30 days in advance. If you don't provide an expiration date, the activation code expires in 24 hours.",
            "Type": "datetime",
            "Required": false
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an activation to identify which servers or virtual machines (VMs) in your on-premises environment you intend to activate. In this case, you could specify the following key-value pairs:\nYou can't add tags to or delete tags from an existing activation. You can tag your on-premises servers, edge devices, and VMs after they connect to Systems Manager for the first time and are assigned a managed node ID. This means they are listed in the Amazon Web Services Systems Manager console with an ID that is prefixed with \"mi-\". For information about how to add tags to your managed nodes, see  AddTagsToResource. For information about how to remove tags from your managed nodes, see  RemoveTagsFromResource .",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "RegistrationMetadata": {
            "Description": "Reserved for internal use.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_association": {
        "Name": {
            "Description": "The name of the SSM Command document or Automation runbook that contains the configuration information for the managed node.\nYou can specify Amazon Web Services-predefined documents, documents you created, or a document that is shared with you from another account.\nFor Systems Manager documents (SSM documents) that are shared with you from other Amazon Web Services accounts, you must specify the complete SSM document ARN, in the following format:\nFor example:\nFor Amazon Web Services-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, AWS-ApplyPatchBaseline or My-Document .",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The document version you want to associate with the target(s). Can be a specific version or the default version.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The managed node ID.",
            "Type": "string",
            "Required": false
        },
        "Parameters": {
            "Description": "The parameters for the runtime configuration of the document.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Targets": {
            "Description": "The targets for the association. You can target managed nodes by using tags, Amazon Web Services resource groups, all managed nodes in an Amazon Web Services account, or individual managed node IDs. You can target all managed nodes in an Amazon Web Services account by specifying the InstanceIds key with a value of *. For more information about choosing targets for an association, see Using targets and rate controls with State Manager associations in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ScheduleExpression": {
            "Description": "A cron expression when the association will be applied to the target(s).",
            "Type": "string",
            "Required": false
        },
        "OutputLocation": {
            "Description": "An Amazon Simple Storage Service (Amazon S3) bucket where you want to store the output details of the request.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "AssociationName": {
            "Description": "Specify a descriptive name for the association.",
            "Type": "string",
            "Required": false
        },
        "AutomationTargetParameterName": {
            "Description": "Choose the parameter that will define how your automation will branch out. This target is required for associations that use an Automation runbook and target resources by using rate controls. Automation is a capability of Amazon Web Services Systems Manager.",
            "Type": "string",
            "Required": false
        },
        "MaxErrors": {
            "Description": "The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 managed nodes and set MaxError to 10%, then the system stops sending the request when the sixth error is received.\nExecutions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.",
            "Type": "string",
            "Required": false
        },
        "MaxConcurrency": {
            "Description": "The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.\nIf a new managed node starts and attempts to run an association while Systems Manager is running MaxConcurrency associations, the association is allowed to run. During the next association interval, the new managed node will process its association within the limit specified for MaxConcurrency .",
            "Type": "string",
            "Required": false
        },
        "ComplianceSeverity": {
            "Description": "The severity level to assign to the association.",
            "Type": "string",
            "Required": false
        },
        "SyncCompliance": {
            "Description": "The mode for generating association compliance. You can specify AUTO or MANUAL. In AUTO mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is COMPLIANT. If the association execution doesn't run successfully, the association is NON-COMPLIANT .\nIn MANUAL mode, you must specify the AssociationId as a parameter for the  PutComplianceItems API operation. In this case, compliance data isn't managed by State Manager. It is managed by your direct call to the  PutComplianceItems API operation.\nBy default, all associations use AUTO mode.",
            "Type": "string",
            "Required": false
        },
        "ApplyOnlyAtCronInterval": {
            "Description": "By default, when you create a new association, the system runs it immediately after it is created and then according to the schedule you specified. Specify this option if you don't want an association to run immediately after you create it. This parameter isn't supported for rate expressions.",
            "Type": "boolean",
            "Required": false
        },
        "CalendarNames": {
            "Description": "The names or Amazon Resource Names (ARNs) of the Change Calendar type documents you want to gate your associations under. The associations only run when that change calendar is open. For more information, see Amazon Web Services Systems Manager Change Calendar .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TargetLocations": {
            "Description": "A location is a combination of Amazon Web Services Regions and Amazon Web Services accounts where you want to run the association. Use this action to create an association in multiple Regions and multiple accounts.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ScheduleOffset": {
            "Description": "Number of days to wait after the scheduled day to run an association. For example, if you specified a cron schedule of cron(0 0 ? * THU#2 *), you could specify an offset of 3 to run the association each Sunday after the second Thursday of the month. For more information about cron schedules for associations, see Reference: Cron and rate expressions for Systems Manager in the Amazon Web Services Systems Manager User Guide .",
            "Type": "integer",
            "Required": false
        },
        "TargetMaps": {
            "Description": "A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can't be specified together.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Tags": {
            "Description": "Adds or overwrites one or more tags for a State Manager association. Tags are metadata that you can assign to your Amazon Web Services resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_association_batch": {
        "Entries": {
            "Description": "One or more associations.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "create_document": {
        "Content": {
            "Description": "The content for the new SSM document in JSON or YAML format. We recommend storing the contents for your new document in an external JSON or YAML file and referencing the file in a command.\nFor examples, see the following topics in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Requires": {
            "Description": "A list of SSM documents required by a document. This parameter is used exclusively by AppConfig. When a user creates an AppConfig configuration in an SSM document, the user must also specify a required document for validation purposes. In this case, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document for validation purposes. For more information, see What is AppConfig? in the AppConfig User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Attachments": {
            "Description": "A list of key-value pairs that describe attachments to a version of a document.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Name": {
            "Description": "A name for the SSM document.",
            "Type": "string",
            "Required": true
        },
        "DisplayName": {
            "Description": "An optional field where you can specify a friendly name for the SSM document. This value can differ for each version of the document. You can update this value at a later time using the  UpdateDocument operation.",
            "Type": "string",
            "Required": false
        },
        "VersionName": {
            "Description": "An optional field specifying the version of the artifact you are creating with the document. For example, Release12.1 . This value is unique across all versions of a document, and can't be changed.",
            "Type": "string",
            "Required": false
        },
        "DocumentType": {
            "Description": "The type of document to create.",
            "Type": "string",
            "Required": false
        },
        "DocumentFormat": {
            "Description": "Specify the document format for the request. The document format can be JSON, YAML, or TEXT. JSON is the default format.",
            "Type": "string",
            "Required": false
        },
        "TargetType": {
            "Description": "Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance . If you specify a value of '/' the document can run on all types of resources. If you don't specify a value, the document can't run on any resources. For a list of valid resource types, see Amazon Web Services resource and property types reference in the CloudFormation User Guide .",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an SSM document to identify the types of targets or the environment where it will run. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "create_maintenance_window": {
        "Name": {
            "Description": "The name of the maintenance window.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "An optional description for the maintenance window. We recommend specifying a description to help you organize your maintenance windows.",
            "Type": "string",
            "Required": false
        },
        "StartDate": {
            "Description": "The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become active. StartDate allows you to delay activation of the maintenance window until the specified future date.",
            "Type": "string",
            "Required": false
        },
        "EndDate": {
            "Description": "The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become inactive. EndDate allows you to set a date and time in the future when the maintenance window will no longer run.",
            "Type": "string",
            "Required": false
        },
        "Schedule": {
            "Description": "The schedule of the maintenance window in the form of a cron or rate expression.",
            "Type": "string",
            "Required": true
        },
        "ScheduleTimezone": {
            "Description": "The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\". For more information, see the Time Zone Database on the IANA website.",
            "Type": "string",
            "Required": false
        },
        "ScheduleOffset": {
            "Description": "The number of days to wait after the date and time specified by a cron expression before running the maintenance window.\nFor example, the following cron expression schedules a maintenance window to run on the third Tuesday of every month at 11:30 PM.\nIf the schedule offset is 2, the maintenance window won't run until two days later.",
            "Type": "integer",
            "Required": false
        },
        "Duration": {
            "Description": "The duration of the maintenance window in hours.",
            "Type": "integer",
            "Required": true
        },
        "Cutoff": {
            "Description": "The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution.",
            "Type": "integer",
            "Required": true
        },
        "AllowUnassociatedTargets": {
            "Description": "Enables a maintenance window task to run on managed nodes, even if you haven't registered those nodes as targets. If enabled, then you must specify the unregistered managed nodes (by node ID) when you register a task with the maintenance window.\nIf you don't enable this option, then you must specify previously-registered targets when you register a task with the maintenance window.",
            "Type": "boolean",
            "Required": true
        },
        "ClientToken": {
            "Description": "User-provided idempotency token.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a maintenance window to identify the type of tasks it will run, the types of targets, and the environment it will run in. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "create_ops_item": {
        "Description": {
            "Description": "Information about the OpsItem.",
            "Type": "string",
            "Required": true
        },
        "OpsItemType": {
            "Description": "The type of OpsItem to create. Currently, the only valid values are /aws/changerequest and /aws/issue .",
            "Type": "string",
            "Required": false
        },
        "OperationalData": {
            "Description": "Operational data is custom data that provides useful reference details about the OpsItem. For example, you can specify log files, error strings, license keys, troubleshooting tips, or other relevant data. You enter operational data as key-value pairs. The key has a maximum length of 128 characters. The value has a maximum size of 20 KB.\nYou can choose to make the data searchable by other users in the account or you can restrict search access. Searchable data means that all users with access to the OpsItem Overview page (as provided by the  DescribeOpsItems API operation) can view and search on the specified data. Operational data that isn't searchable is only viewable by users who have access to the OpsItem (as provided by the  GetOpsItem API operation).\nUse the /aws/resources key in OperationalData to specify a related resource in the request. Use the /aws/automations key in OperationalData to associate an Automation runbook with the OpsItem. To view Amazon Web Services CLI example commands that use these keys, see Creating OpsItems manually in the Amazon Web Services Systems Manager User Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Notifications": {
            "Description": "The Amazon Resource Name (ARN) of an SNS topic where notifications are sent when this OpsItem is edited or changed.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Priority": {
            "Description": "The importance of this OpsItem in relation to other OpsItems in the system.",
            "Type": "integer",
            "Required": false
        },
        "RelatedOpsItems": {
            "Description": "One or more OpsItems that share something in common with the current OpsItems. For example, related OpsItems can include OpsItems with similar error messages, impacted resources, or statuses for the impacted resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Source": {
            "Description": "The origin of the OpsItem, such as Amazon EC2 or Systems Manager.",
            "Type": "string",
            "Required": true
        },
        "Title": {
            "Description": "A short heading that describes the nature of the OpsItem and the impacted resource.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. You can restrict access to OpsItems by using an inline IAM policy that specifies tags. For more information, see Getting started with OpsCenter in the Amazon Web Services Systems Manager User Guide .\nTags use a key-value pair. For example:",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Category": {
            "Description": "Specify a category to assign to an OpsItem.",
            "Type": "string",
            "Required": false
        },
        "Severity": {
            "Description": "Specify a severity to assign to an OpsItem.",
            "Type": "string",
            "Required": false
        },
        "ActualStartTime": {
            "Description": "The time a runbook workflow started. Currently reported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        },
        "ActualEndTime": {
            "Description": "The time a runbook workflow ended. Currently reported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        },
        "PlannedStartTime": {
            "Description": "The time specified in a change request for a runbook workflow to start. Currently supported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        },
        "PlannedEndTime": {
            "Description": "The time specified in a change request for a runbook workflow to end. Currently supported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        }
    },
    "create_ops_metadata": {
        "ResourceId": {
            "Description": "A resource ID for a new Application Manager application.",
            "Type": "string",
            "Required": true
        },
        "Metadata": {
            "Description": "Metadata for a new Application Manager application.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. You can specify a maximum of five tags for an OpsMetadata object. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an OpsMetadata object to identify an environment or target Amazon Web Services Region. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "create_patch_baseline": {
        "OperatingSystem": {
            "Description": "Defines the operating system the patch baseline applies to. The default value is WINDOWS .",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "The name of the patch baseline.",
            "Type": "string",
            "Required": true
        },
        "GlobalFilters": {
            "Description": "A set of global filters used to include patches in the baseline.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ApprovalRules": {
            "Description": "A set of rules used to include patches in the baseline.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ApprovedPatches": {
            "Description": "A list of explicitly approved patches for the baseline.\nFor information about accepted formats for lists of approved patches and rejected patches, see About package name formats for approved and rejected patch lists in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ApprovedPatchesComplianceLevel": {
            "Description": "Defines the compliance level for approved patches. When an approved patch is reported as missing, this value describes the severity of the compliance violation. The default value is UNSPECIFIED .",
            "Type": "string",
            "Required": false
        },
        "ApprovedPatchesEnableNonSecurity": {
            "Description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the managed nodes. The default value is false . Applies to Linux managed nodes only.",
            "Type": "boolean",
            "Required": false
        },
        "RejectedPatches": {
            "Description": "A list of explicitly rejected patches for the baseline.\nFor information about accepted formats for lists of approved patches and rejected patches, see About package name formats for approved and rejected patch lists in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RejectedPatchesAction": {
            "Description": "The action for Patch Manager to take on patches included in the RejectedPackages list.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Description": {
            "Description": "A description of the patch baseline.",
            "Type": "string",
            "Required": false
        },
        "Sources": {
            "Description": "Information about the patches to use to update the managed nodes, including target operating systems and source repositories. Applies to Linux managed nodes only.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ClientToken": {
            "Description": "User-provided idempotency token.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a patch baseline to identify the severity level of patches it specifies and the operating system family it applies to. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "create_resource_data_sync": {
        "SyncName": {
            "Description": "A name for the configuration.",
            "Type": "string",
            "Required": true
        },
        "S3Destination": {
            "Description": "Amazon S3 configuration details for the sync. This parameter is required if the SyncType value is SyncToDestination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SyncType": {
            "Description": "Specify SyncToDestination to create a resource data sync that synchronizes data to an S3 bucket for Inventory. If you specify SyncToDestination , you must provide a value for S3Destination . Specify SyncFromSource to synchronize data from a single account and multiple Regions, or multiple Amazon Web Services accounts and Amazon Web Services Regions, as listed in Organizations for Explorer. If you specify SyncFromSource , you must provide a value for SyncSource . The default value is SyncToDestination .",
            "Type": "string",
            "Required": false
        },
        "SyncSource": {
            "Description": "Specify information about the data sources to synchronize. This parameter is required if the SyncType value is SyncFromSource.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "delete_activation": {
        "ActivationId": {
            "Description": "The ID of the activation that you want to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_association": {
        "Name": {
            "Description": "The name of the SSM document.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The managed node ID.",
            "Type": "string",
            "Required": false
        },
        "AssociationId": {
            "Description": "The association ID that you want to delete.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_document": {
        "Name": {
            "Description": "The name of the document.",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The version of the document that you want to delete. If not provided, all versions of the document are deleted.",
            "Type": "string",
            "Required": false
        },
        "VersionName": {
            "Description": "The version name of the document that you want to delete. If not provided, all versions of the document are deleted.",
            "Type": "string",
            "Required": false
        },
        "Force": {
            "Description": "Some SSM document types require that you specify a Force flag before you can delete the document. For example, you must specify a Force flag to delete a document of type ApplicationConfigurationSchema . You can restrict access to the Force flag in an Identity and Access Management (IAM) policy.",
            "Type": "boolean",
            "Required": false
        }
    },
    "delete_inventory": {
        "TypeName": {
            "Description": "The name of the custom inventory type for which you want to delete either all previously collected data or the inventory type itself.",
            "Type": "string",
            "Required": true
        },
        "SchemaDeleteOption": {
            "Description": "Use the SchemaDeleteOption to delete a custom inventory type (schema). If you don't choose this option, the system only deletes existing inventory data associated with the custom inventory type. Choose one of the following options:\nDisableSchema: If you choose this option, the system ignores all inventory data for the specified version, and any earlier versions. To enable this schema again, you must call the PutInventory operation for a version greater than the disabled version.\nDeleteSchema: This option deletes the specified custom type from the Inventory service. You can recreate the schema later, if you want.",
            "Type": "string",
            "Required": false
        },
        "DryRun": {
            "Description": "Use this option to view a summary of the deletion request without deleting any data or the data type. This option is useful when you only want to understand what will be deleted. Once you validate that the data to be deleted is what you intend to delete, you can run the same command without specifying the DryRun option.",
            "Type": "boolean",
            "Required": false
        },
        "ClientToken": {
            "Description": "User-provided idempotency token.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "delete_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_ops_metadata": {
        "OpsMetadataArn": {
            "Description": "The Amazon Resource Name (ARN) of an OpsMetadata Object to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_parameter": {
        "Name": {
            "Description": "The name of the parameter to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_parameters": {
        "Names": {
            "Description": "The names of the parameters to delete. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_patch_baseline": {
        "BaselineId": {
            "Description": "The ID of the patch baseline to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_resource_data_sync": {
        "SyncName": {
            "Description": "The name of the configuration to delete.",
            "Type": "string",
            "Required": true
        },
        "SyncType": {
            "Description": "Specify the type of resource data sync to delete.",
            "Type": "string",
            "Required": false
        }
    },
    "deregister_managed_instance": {
        "InstanceId": {
            "Description": "The ID assigned to the managed node when you registered it using the activation process.",
            "Type": "string",
            "Required": true
        }
    },
    "deregister_patch_baseline_for_patch_group": {
        "BaselineId": {
            "Description": "The ID of the patch baseline to deregister the patch group from.",
            "Type": "string",
            "Required": true
        },
        "PatchGroup": {
            "Description": "The name of the patch group that should be deregistered from the patch baseline.",
            "Type": "string",
            "Required": true
        }
    },
    "deregister_target_from_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window the target should be removed from.",
            "Type": "string",
            "Required": true
        },
        "WindowTargetId": {
            "Description": "The ID of the target definition to remove.",
            "Type": "string",
            "Required": true
        },
        "Safe": {
            "Description": "The system checks if the target is being referenced by a task. If the target is being referenced, the system returns an error and doesn't deregister the target from the maintenance window.",
            "Type": "boolean",
            "Required": false
        }
    },
    "deregister_task_from_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window the task should be removed from.",
            "Type": "string",
            "Required": true
        },
        "WindowTaskId": {
            "Description": "The ID of the task to remove from the maintenance window.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_activations": {
        "Filters": {
            "Description": "A filter to view information about your activations.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_association": {
        "Name": {
            "Description": "The name of the SSM document.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "The managed node ID.",
            "Type": "string",
            "Required": false
        },
        "AssociationId": {
            "Description": "The association ID for which you want information.",
            "Type": "string",
            "Required": false
        },
        "AssociationVersion": {
            "Description": "Specify the association version to retrieve. To view the latest version, either specify $LATEST for this parameter, or omit this parameter. To view a list of all associations for a managed node, use  ListAssociations . To get a list of versions for a specific association, use  ListAssociationVersions .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_association_execution_targets": {
        "AssociationId": {
            "Description": "The association ID that includes the execution for which you want to view details.",
            "Type": "string",
            "Required": true
        },
        "ExecutionId": {
            "Description": "The execution ID for which you want to view details.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Filters for the request. You can specify the following filters and values.\nStatus (EQUAL)\nResourceId (EQUAL)\nResourceType (EQUAL)",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_association_executions": {
        "AssociationId": {
            "Description": "The association ID for which you want to view execution history details.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Filters for the request. You can specify the following filters and values.\nExecutionId (EQUAL)\nStatus (EQUAL)\nCreatedTime (EQUAL, GREATER_THAN, LESS_THAN)",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_automation_executions": {
        "Filters": {
            "Description": "Filters used to limit the scope of executions that are requested.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_automation_step_executions": {
        "AutomationExecutionId": {
            "Description": "The Automation execution ID for which you want step execution descriptions.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters to limit the number of step executions returned by the request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "ReverseOrder": {
            "Description": "Indicates whether to list step executions in reverse order by start time. The default value is 'false'.",
            "Type": "boolean",
            "Required": false
        }
    },
    "describe_available_patches": {
        "Filters": {
            "Description": "Each element in the array is a structure containing a key-value pair.\nSupported keys for Windows Server managed node patches include the following:\nSupported keys for Linux managed node patches include the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of patches to return (per page).",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_document": {
        "Name": {
            "Description": "The name of the SSM document.",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The document version for which you want information. Can be a specific version or the default version.",
            "Type": "string",
            "Required": false
        },
        "VersionName": {
            "Description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and can't be changed.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_document_permission": {
        "Name": {
            "Description": "The name of the document for which you are the owner.",
            "Type": "string",
            "Required": true
        },
        "PermissionType": {
            "Description": "The permission type for the document. The permission type can be Share .",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_effective_instance_associations": {
        "InstanceId": {
            "Description": "The managed node ID for which you want to view all associations.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_effective_patches_for_patch_baseline": {
        "BaselineId": {
            "Description": "The ID of the patch baseline to retrieve the effective patches for.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of patches to return (per page).",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_associations_status": {
        "InstanceId": {
            "Description": "The managed node IDs for which you want association status information.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_information": {
        "InstanceInformationFilterList": {
            "Description": "This is a legacy method. We recommend that you don't use this method. Instead, use the Filters data type. Filters enables you to return node information by filtering based on tags applied to managed nodes.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more filters. Use a filter to return a more specific list of managed nodes. You can filter based on tags applied to your managed nodes. Use this Filters data type instead of InstanceInformationFilterList, which is deprecated.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_instance_patch_states": {
        "InstanceIds": {
            "Description": "The ID of the managed node for which patch state information should be retrieved.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of managed nodes to return (per page).",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_instance_patch_states_for_patch_group": {
        "PatchGroup": {
            "Description": "The name of the patch group for which the patch state information should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Each entry in the array is a structure containing:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of patches to return (per page).",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_instance_patches": {
        "InstanceId": {
            "Description": "The ID of the managed node whose patch state information should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Each element in the array is a structure containing a key-value pair.\nSupported keys for DescribeInstancePatches include the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of patches to return (per page).",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_inventory_deletions": {
        "DeletionId": {
            "Description": "Specify the delete inventory ID for which you want information. This ID was returned by the DeleteInventory operation.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_maintenance_window_execution_task_invocations": {
        "WindowExecutionId": {
            "Description": "The ID of the maintenance window execution the task is part of.",
            "Type": "string",
            "Required": true
        },
        "TaskId": {
            "Description": "The ID of the specific task in the maintenance window task that should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Optional filters used to scope down the returned task invocations. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_window_execution_tasks": {
        "WindowExecutionId": {
            "Description": "The ID of the maintenance window execution whose task executions should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Optional filters used to scope down the returned tasks. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_window_executions": {
        "WindowId": {
            "Description": "The ID of the maintenance window whose executions should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Each entry in the array is a structure containing:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_window_schedule": {
        "WindowId": {
            "Description": "The ID of the maintenance window to retrieve information about.",
            "Type": "string",
            "Required": false
        },
        "Targets": {
            "Description": "The managed node ID or key-value pair to retrieve information about.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourceType": {
            "Description": "The type of resource you want to retrieve information about. For example, INSTANCE .",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "Filters used to limit the range of results. For example, you can limit maintenance window executions to only those scheduled before or after a certain date and time.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_window_targets": {
        "WindowId": {
            "Description": "The ID of the maintenance window whose targets should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Optional filters that can be used to narrow down the scope of the returned window targets. The supported filter keys are Type, WindowTargetId, and OwnerInformation .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_window_tasks": {
        "WindowId": {
            "Description": "The ID of the maintenance window whose tasks should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "Optional filters used to narrow down the scope of the returned tasks. The supported filter keys are WindowTaskId, TaskArn, Priority, and TaskType .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_windows": {
        "Filters": {
            "Description": "Optional filters used to narrow down the scope of the returned maintenance windows. Supported filter keys are Name and Enabled. For example, Name=MyMaintenanceWindow and Enabled=True .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_maintenance_windows_for_target": {
        "Targets": {
            "Description": "The managed node ID or key-value pair to retrieve information about.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ResourceType": {
            "Description": "The type of resource you want to retrieve information about. For example, INSTANCE .",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_ops_items": {
        "OpsItemFilters": {
            "Description": "One or more filters to limit the response.\n*The Equals operator for Title matches the first 100 characters. If you specify more than 100 characters, they system returns an error that the filter value exceeds the length limit.\n**If you filter the response by using the OperationalData operator, specify a key-value pair by using the following JSON format: {\"key\":\"key_name\",\"value\":\"a_value\"}",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_parameters": {
        "Filters": {
            "Description": "This data type is deprecated. Instead, use ParameterFilters .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ParameterFilters": {
            "Description": "Filters to limit the request results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_patch_baselines": {
        "Filters": {
            "Description": "Each element in the array is a structure containing a key-value pair.\nSupported keys for DescribePatchBaselines include the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "MaxResults": {
            "Description": "The maximum number of patch baselines to return (per page).",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_patch_group_state": {
        "PatchGroup": {
            "Description": "The name of the patch group whose patch snapshot should be retrieved.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_patch_groups": {
        "MaxResults": {
            "Description": "The maximum number of patch groups to return (per page).",
            "Type": "integer",
            "Required": false
        },
        "Filters": {
            "Description": "Each element in the array is a structure containing a key-value pair.\nSupported keys for DescribePatchGroups include the following:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_patch_properties": {
        "OperatingSystem": {
            "Description": "The operating system type for which to list patches.",
            "Type": "string",
            "Required": true
        },
        "Property": {
            "Description": "The patch property for which you want to view patch details.",
            "Type": "string",
            "Required": true
        },
        "PatchSet": {
            "Description": "Indicates whether to list patches for the Windows operating system or for applications released by Microsoft. Not applicable for the Linux or macOS operating systems.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "describe_sessions": {
        "State": {
            "Description": "The session status to retrieve a list of sessions for. For example, \"Active\".",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more filters to limit the type of sessions returned by the request.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "disassociate_ops_item_related_item": {
        "OpsItemId": {
            "Description": "The ID of the OpsItem for which you want to delete an association between the OpsItem and a related item.",
            "Type": "string",
            "Required": true
        },
        "AssociationId": {
            "Description": "The ID of the association for which you want to delete an association between the OpsItem and a related item.",
            "Type": "string",
            "Required": true
        }
    },
    "get_automation_execution": {
        "AutomationExecutionId": {
            "Description": "The unique identifier for an existing automation execution to examine. The execution ID is returned by StartAutomationExecution when the execution of an Automation runbook is initiated.",
            "Type": "string",
            "Required": true
        }
    },
    "get_calendar_state": {
        "CalendarNames": {
            "Description": "The names or Amazon Resource Names (ARNs) of the Systems Manager documents (SSM documents) that represent the calendar entries for which you want to get the state.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "AtTime": {
            "Description": "(Optional) The specific time for which you want to get calendar state information, in ISO 8601 format. If you don't specify a value or AtTime , the current time is used.",
            "Type": "string",
            "Required": false
        }
    },
    "get_command_invocation": {
        "CommandId": {
            "Description": "(Required) The parent command ID of the invocation plugin.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "(Required) The ID of the managed node targeted by the command. A managed node can be an Amazon Elastic Compute Cloud (Amazon EC2) instance, edge device, and on-premises server or VM in your hybrid environment that is configured for Amazon Web Services Systems Manager.",
            "Type": "string",
            "Required": true
        },
        "PluginName": {
            "Description": "The name of the step for which you want detailed results. If the document contains only one step, you can omit the name and details for that step. If the document contains more than one step, you must specify the name of the step for which you want to view details. Be sure to specify the name of the step, not the name of a plugin like aws:RunShellScript .\nTo find the PluginName, check the document content and find the name of the step you want details for. Alternatively, use  ListCommandInvocations with the CommandId and Details parameters. The PluginName is the Name attribute of the CommandPlugin object in the CommandPlugins list.",
            "Type": "string",
            "Required": false
        }
    },
    "get_connection_status": {
        "Target": {
            "Description": "The managed node ID.",
            "Type": "string",
            "Required": true
        }
    },
    "get_default_patch_baseline": {
        "OperatingSystem": {
            "Description": "Returns the default patch baseline for the specified operating system.",
            "Type": "string",
            "Required": false
        }
    },
    "get_deployable_patch_snapshot_for_instance": {
        "InstanceId": {
            "Description": "The ID of the managed node for which the appropriate patch snapshot should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "SnapshotId": {
            "Description": "The snapshot ID provided by the user when running AWS-RunPatchBaseline .",
            "Type": "string",
            "Required": true
        },
        "BaselineOverride": {
            "Description": "Defines the basic information about a patch baseline override.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "get_document": {
        "Name": {
            "Description": "The name of the SSM document.",
            "Type": "string",
            "Required": true
        },
        "VersionName": {
            "Description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document and can't be changed.",
            "Type": "string",
            "Required": false
        },
        "DocumentVersion": {
            "Description": "The document version for which you want information.",
            "Type": "string",
            "Required": false
        },
        "DocumentFormat": {
            "Description": "Returns the document in the specified format. The document format can be either JSON or YAML. JSON is the default format.",
            "Type": "string",
            "Required": false
        }
    },
    "get_inventory": {
        "Filters": {
            "Description": "One or more filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Aggregators": {
            "Description": "Returns counts of inventory types based on one or more expressions. For example, if you aggregate by using an expression that uses the AWS:InstanceInformation.PlatformType type, you can see a count of how many Windows and Linux managed nodes exist in your inventoried fleet.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResultAttributes": {
            "Description": "The list of inventory item types to return.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_inventory_schema": {
        "TypeName": {
            "Description": "The type of inventory item to return.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "Aggregator": {
            "Description": "Returns inventory schemas that support aggregation. For example, this call returns the AWS:InstanceInformation type, because it supports aggregation based on the PlatformName , PlatformType , and PlatformVersion attributes.",
            "Type": "boolean",
            "Required": false
        },
        "SubType": {
            "Description": "Returns the sub-type schema for a specified inventory type.",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window for which you want to retrieve information.",
            "Type": "string",
            "Required": true
        }
    },
    "get_maintenance_window_execution": {
        "WindowExecutionId": {
            "Description": "The ID of the maintenance window execution that includes the task.",
            "Type": "string",
            "Required": true
        }
    },
    "get_maintenance_window_execution_task": {
        "WindowExecutionId": {
            "Description": "The ID of the maintenance window execution that includes the task.",
            "Type": "string",
            "Required": true
        },
        "TaskId": {
            "Description": "The ID of the specific task execution in the maintenance window task that should be retrieved.",
            "Type": "string",
            "Required": true
        }
    },
    "get_maintenance_window_execution_task_invocation": {
        "WindowExecutionId": {
            "Description": "The ID of the maintenance window execution for which the task is a part.",
            "Type": "string",
            "Required": true
        },
        "TaskId": {
            "Description": "The ID of the specific task in the maintenance window task that should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "InvocationId": {
            "Description": "The invocation ID to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "get_maintenance_window_task": {
        "WindowId": {
            "Description": "The maintenance window ID that includes the task to retrieve.",
            "Type": "string",
            "Required": true
        },
        "WindowTaskId": {
            "Description": "The maintenance window task ID to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "get_ops_item": {
        "OpsItemId": {
            "Description": "The ID of the OpsItem that you want to get.",
            "Type": "string",
            "Required": true
        }
    },
    "get_ops_metadata": {
        "OpsMetadataArn": {
            "Description": "The Amazon Resource Name (ARN) of an OpsMetadata Object to view.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_ops_summary": {
        "SyncName": {
            "Description": "Specify the name of a resource data sync to get.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "Optional filters used to scope down the returned OpsData.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Aggregators": {
            "Description": "Optional aggregators that return counts of OpsData based on one or more expressions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResultAttributes": {
            "Description": "The OpsData data type to return.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_parameter": {
        "Name": {
            "Description": "The name of the parameter you want to query.\nTo query by parameter label, use \"Name\": \"name:label\". To query by parameter version, use \"Name\": \"name:version\" .",
            "Type": "string",
            "Required": true
        },
        "WithDecryption": {
            "Description": "Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_parameter_history": {
        "Name": {
            "Description": "The name of the parameter for which you want to review history.",
            "Type": "string",
            "Required": true
        },
        "WithDecryption": {
            "Description": "Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "get_parameters": {
        "Names": {
            "Description": "Names of the parameters for which you want to query information.\nTo query by parameter label, use \"Name\": \"name:label\". To query by parameter version, use \"Name\": \"name:version\" .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "WithDecryption": {
            "Description": "Return decrypted secure string value. Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_parameters_by_path": {
        "Path": {
            "Description": "The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. For the API call to succeed, the last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: /Finance/Prod/IAD/WinServ2016/license33",
            "Type": "string",
            "Required": true
        },
        "Recursive": {
            "Description": "Retrieve all parameters within a hierarchy.",
            "Type": "boolean",
            "Required": false
        },
        "ParameterFilters": {
            "Description": "Filters to limit the request results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "WithDecryption": {
            "Description": "Retrieve all parameters in a hierarchy with their value decrypted.",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_patch_baseline": {
        "BaselineId": {
            "Description": "The ID of the patch baseline to retrieve.",
            "Type": "string",
            "Required": true
        }
    },
    "get_patch_baseline_for_patch_group": {
        "PatchGroup": {
            "Description": "The name of the patch group whose patch baseline should be retrieved.",
            "Type": "string",
            "Required": true
        },
        "OperatingSystem": {
            "Description": "Returns the operating system rule specified for patch groups using the patch baseline.",
            "Type": "string",
            "Required": false
        }
    },
    "get_service_setting": {
        "SettingId": {
            "Description": "The ID of the service setting to get. The setting ID can be one of the following.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "label_parameter_version": {
        "Name": {
            "Description": "The parameter name on which you want to attach one or more labels.",
            "Type": "string",
            "Required": true
        },
        "ParameterVersion": {
            "Description": "The specific version of the parameter on which you want to attach one or more labels. If no version is specified, the system attaches the label to the latest version.",
            "Type": "integer",
            "Required": false
        },
        "Labels": {
            "Description": "One or more labels to attach to the specified parameter version.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "list_association_versions": {
        "AssociationId": {
            "Description": "The association ID for which you want to view all versions.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_associations": {
        "AssociationFilterList": {
            "Description": "One or more filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "list_command_invocations": {
        "CommandId": {
            "Description": "(Optional) The invocations for a specific command ID.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "(Optional) The command execution details for a specific managed node ID.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "(Optional) One or more filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Details": {
            "Description": "(Optional) If set this returns the response of the command executions and any command output. The default value is false .",
            "Type": "boolean",
            "Required": false
        }
    },
    "list_commands": {
        "CommandId": {
            "Description": "(Optional) If provided, lists only the specified command.",
            "Type": "string",
            "Required": false
        },
        "InstanceId": {
            "Description": "(Optional) Lists commands issued against this managed node ID.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "(Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "(Optional) The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "(Optional) One or more filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_compliance_items": {
        "Filters": {
            "Description": "One or more compliance filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourceIds": {
            "Description": "The ID for the resources from which to get compliance information. Currently, you can only specify one resource ID.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ResourceTypes": {
            "Description": "The type of resource from which to get compliance information. Currently, the only supported resource type is ManagedInstance .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_compliance_summaries": {
        "Filters": {
            "Description": "One or more compliance or inventory filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. Currently, you can specify null or 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_document_metadata_history": {
        "Name": {
            "Description": "The name of the change template.",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The version of the change template.",
            "Type": "string",
            "Required": false
        },
        "Metadata": {
            "Description": "The type of data for which details are being requested. Currently, the only supported value is DocumentReviews .",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_document_versions": {
        "Name": {
            "Description": "The name of the document. You can specify an Amazon Resource Name (ARN).",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "list_documents": {
        "DocumentFilterList": {
            "Description": "This data type is deprecated. Instead, use Filters .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Filters": {
            "Description": "One or more DocumentKeyValuesFilter objects. Use a filter to return a more specific list of results. For keys, you can specify one or more key-value pair tags that have been applied to a document. Other valid keys include Owner, Name, PlatformTypes, DocumentType, and TargetType. For example, to return documents you own use Key=Owner,Values=Self. To specify a custom key-value pair, use the format Key=tag:tagName,Values=valueName .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "list_inventory_entries": {
        "InstanceId": {
            "Description": "The managed node ID for which you want inventory information.",
            "Type": "string",
            "Required": true
        },
        "TypeName": {
            "Description": "The type of inventory item for which you want information.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_ops_item_events": {
        "Filters": {
            "Description": "One or more OpsItem filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_ops_item_related_items": {
        "OpsItemId": {
            "Description": "The ID of the OpsItem for which you want to list all related-item resources.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "One or more OpsItem filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token for the next set of items to return. (You received this token from a previous call.)",
            "Type": "string",
            "Required": false
        }
    },
    "list_ops_metadata": {
        "Filters": {
            "Description": "One or more filters to limit the number of OpsMetadata objects returned by the call.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_resource_compliance_summaries": {
        "Filters": {
            "Description": "One or more filters. Use a filter to return a more specific list of results.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_resource_data_sync": {
        "SyncType": {
            "Description": "View a list of resource data syncs according to the sync type. Specify SyncToDestination to view resource data syncs that synchronize data to an Amazon S3 bucket. Specify SyncFromSource to view resource data syncs from Organizations or from multiple Amazon Web Services Regions.",
            "Type": "string",
            "Required": false
        },
        "NextToken": {
            "Description": "A token to start the list. Use this token to get the next set of results.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceType": {
            "Description": "Returns a list of tags for a specific resource type.",
            "Type": "string",
            "Required": true
        },
        "ResourceId": {
            "Description": "The resource ID for which you want to see a list of tags.",
            "Type": "string",
            "Required": true
        }
    },
    "modify_document_permission": {
        "Name": {
            "Description": "The name of the document that you want to share.",
            "Type": "string",
            "Required": true
        },
        "PermissionType": {
            "Description": "The permission type for the document. The permission type can be Share .",
            "Type": "string",
            "Required": true
        },
        "AccountIdsToAdd": {
            "Description": "The Amazon Web Services user accounts that should have access to the document. The account IDs can either be a group of account IDs or All .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AccountIdsToRemove": {
            "Description": "The Amazon Web Services user accounts that should no longer have access to the document. The Amazon Web Services user account can either be a group of account IDs or All. This action has a higher priority than AccountIdsToAdd. If you specify an account ID to add and the same ID to remove, the system removes access to the document.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SharedDocumentVersion": {
            "Description": "(Optional) The version of the document to share. If it isn't specified, the system choose the Default version to share.",
            "Type": "string",
            "Required": false
        }
    },
    "put_compliance_items": {
        "ResourceId": {
            "Description": "Specify an ID for this resource. For a managed node, this is the node ID.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "Specify the type of resource. ManagedInstance is currently the only supported resource type.",
            "Type": "string",
            "Required": true
        },
        "ComplianceType": {
            "Description": "Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:string .",
            "Type": "string",
            "Required": true
        },
        "ExecutionSummary": {
            "Description": "A summary of the call execution that includes an execution ID, the type of execution (for example, Command ), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Items": {
            "Description": "Information about the compliance as defined by the resource type. For example, for a patch compliance type, Items includes information about the PatchSeverity, Classification, and so on.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "ItemContentHash": {
            "Description": "MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.",
            "Type": "string",
            "Required": false
        },
        "UploadType": {
            "Description": "The mode for uploading compliance items. You can specify COMPLETE or PARTIAL. In COMPLETE mode, the system overwrites all existing compliance information for the resource. You must provide a full list of compliance items each time you send the request.\nIn PARTIAL mode, the system overwrites compliance information for a specific association. The association must be configured with SyncCompliance set to MANUAL. By default, all requests use COMPLETE mode.",
            "Type": "string",
            "Required": false
        }
    },
    "put_inventory": {
        "InstanceId": {
            "Description": "An managed node ID where you want to add or update inventory items.",
            "Type": "string",
            "Required": true
        },
        "Items": {
            "Description": "The inventory items that you want to add or update on managed nodes.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "put_parameter": {
        "Name": {
            "Description": "The fully qualified name of the parameter that you want to add to the system. The fully qualified name includes the complete hierarchy of the parameter path and name. For parameters in a hierarchy, you must include a leading forward slash character (/) when you create or reference a parameter. For example: /Dev/DBServer/MySQL/db-string13\nNaming Constraints:\nFor additional information about valid values for parameter names, see Creating Systems Manager parameters in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Description": {
            "Description": "Information about the parameter that you want to add to the system. Optional but recommended.",
            "Type": "string",
            "Required": false
        },
        "Value": {
            "Description": "The parameter value that you want to add to the system. Standard parameters have a value limit of 4 KB. Advanced parameters have a value limit of 8 KB.",
            "Type": "string",
            "Required": true
        },
        "Type": {
            "Description": "The type of parameter that you want to add to the system.\nItems in a StringList must be separated by a comma (,). You can't use other punctuation or special character to escape items in the list. If you have a parameter value that requires a comma, then use the String data type.",
            "Type": "string",
            "Required": false
        },
        "KeyId": {
            "Description": "The Key Management Service (KMS) ID that you want to use to encrypt a parameter. Either the default KMS key automatically assigned to your Amazon Web Services account or a custom key. Required for parameters that use the SecureString data type.\nIf you don't specify a key ID, the system uses the default key associated with your Amazon Web Services account.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Overwrite": {
            "Description": "Overwrite an existing parameter. The default value is false .",
            "Type": "boolean",
            "Required": false
        },
        "AllowedPattern": {
            "Description": "A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^d+$",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a Systems Manager parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "Tier": {
            "Description": "The parameter tier to assign to a parameter.\nParameter Store offers a standard tier and an advanced tier for parameters. Standard parameters have a content size limit of 4 KB and can't be configured to use parameter policies. You can create a maximum of 10,000 standard parameters for each Region in an Amazon Web Services account. Standard parameters are offered at no additional cost.\nAdvanced parameters have a content size limit of 8 KB and can be configured to use parameter policies. You can create a maximum of 100,000 advanced parameters for each Region in an Amazon Web Services account. Advanced parameters incur a charge. For more information, see Standard and advanced parameter tiers in the Amazon Web Services Systems Manager User Guide .\nYou can change a standard parameter to an advanced parameter any time. But you can't revert an advanced parameter to a standard parameter. Reverting an advanced parameter to a standard parameter would result in data loss because the system would truncate the size of the parameter from 8 KB to 4 KB. Reverting would also remove any policies attached to the parameter. Lastly, advanced parameters use a different form of encryption than standard parameters.\nIf you no longer need an advanced parameter, or if you no longer want to incur charges for an advanced parameter, you must delete it and recreate it as a new standard parameter.\nIn PutParameter requests, you can specify the tier to create the parameter in. Whenever you specify a tier in the request, Parameter Store creates or updates the parameter according to that request. However, if you don't specify a tier in a request, Parameter Store assigns the tier based on the current Parameter Store default tier configuration.\nThe default tier when you begin using Parameter Store is the standard-parameter tier. If you use the advanced-parameter tier, you can specify one of the following as the default:\nOptions that require an advanced parameter include the following:\nFor more information about configuring the default tier option, see Specifying a default parameter tier in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": [
                {},
                {}
            ]
        },
        "Policies": {
            "Description": "One or more policies to apply to a parameter. This operation takes a JSON array. Parameter Store, a capability of Amazon Web Services Systems Manager supports the following policy types:\nExpiration: This policy deletes the parameter after it expires. When you create the policy, you specify the expiration date. You can update the expiration date and time by updating the policy. Updating the parameter doesn't affect the expiration date and time. When the expiration time is reached, Parameter Store deletes the parameter.\nExpirationNotification: This policy initiates an event in Amazon CloudWatch Events that notifies you about the expiration. By using this policy, you can receive notification before or after the expiration time is reached, in units of days or hours.\nNoChangeNotification: This policy initiates a CloudWatch Events event if a parameter hasn't been modified for a specified period of time. This policy type is useful when, for example, a secret needs to be changed within a period of time, but it hasn't been changed.\nAll existing policies are preserved until you send new policies or an empty policy. For more information about parameter policies, see Assigning parameter policies .",
            "Type": "string",
            "Required": false
        },
        "DataType": {
            "Description": "The data type for a String parameter. Supported data types include plain text and Amazon Machine Image (AMI) IDs.\nWhen you create a String parameter and specify aws:ec2:image, Amazon Web Services Systems Manager validates the parameter value is in the required format, such as ami-12345abcdeEXAMPLE, and that the specified AMI is available in your Amazon Web Services account. For more information, see Native parameter support for Amazon Machine Image (AMI) IDs in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "register_default_patch_baseline": {
        "BaselineId": {
            "Description": "The ID of the patch baseline that should be the default patch baseline.",
            "Type": "string",
            "Required": true
        }
    },
    "register_patch_baseline_for_patch_group": {
        "BaselineId": {
            "Description": "The ID of the patch baseline to register with the patch group.",
            "Type": "string",
            "Required": true
        },
        "PatchGroup": {
            "Description": "The name of the patch group to be registered with the patch baseline.",
            "Type": "string",
            "Required": true
        }
    },
    "register_target_with_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window the target should be registered with.",
            "Type": "string",
            "Required": true
        },
        "ResourceType": {
            "Description": "The type of target being registered with the maintenance window.",
            "Type": "string",
            "Required": true
        },
        "Targets": {
            "Description": "The targets to register with the maintenance window. In other words, the managed nodes to run commands on when the maintenance window runs.\nYou can specify targets using managed node IDs, resource group names, or tags that have been applied to managed nodes.\nFor more information about these examples formats, including the best use case for each one, see Examples: Register targets with a maintenance window in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "OwnerInformation": {
            "Description": "User-provided value that will be included in any Amazon CloudWatch Events events raised while running tasks for these targets in this maintenance window.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "An optional name for the target.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "An optional description for the target.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "User-provided idempotency token.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "register_task_with_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window the task should be added to.",
            "Type": "string",
            "Required": true
        },
        "Targets": {
            "Description": "The targets (either managed nodes or maintenance window targets).\nSpecify managed nodes using the following format:\nSpecify maintenance window targets using the following format:",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TaskArn": {
            "Description": "The ARN of the task to run.",
            "Type": "string",
            "Required": true
        },
        "ServiceRoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM service role for Amazon Web Services Systems Manager to assume when running a maintenance window task. If you do not specify a service role ARN, Systems Manager uses your account's service-linked role. If no service-linked role for Systems Manager exists in your account, it is created when you run RegisterTaskWithMaintenanceWindow .\nFor more information, see the following topics in the in the Amazon Web Services Systems Manager User Guide :",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TaskType": {
            "Description": "The type of task being registered.",
            "Type": "string",
            "Required": true
        },
        "TaskParameters": {
            "Description": "The parameters that should be passed to the task when it is run.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TaskInvocationParameters": {
            "Description": "The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Priority": {
            "Description": "The priority of the task in the maintenance window, the lower the number the higher the priority. Tasks in a maintenance window are scheduled in priority order with tasks that have the same priority scheduled in parallel.",
            "Type": "integer",
            "Required": false
        },
        "MaxConcurrency": {
            "Description": "The maximum number of targets this task can be run for, in parallel.",
            "Type": "string",
            "Required": false
        },
        "MaxErrors": {
            "Description": "The maximum number of errors allowed before this task stops being scheduled.",
            "Type": "string",
            "Required": false
        },
        "LoggingInfo": {
            "Description": "A structure containing information about an Amazon Simple Storage Service (Amazon S3) bucket to write managed node-level logs to.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "An optional name for the task.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "An optional description for the task.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "User-provided idempotency token.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "CutoffBehavior": {
            "Description": "Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached.\nThe status for tasks that are not completed is TIMED_OUT .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "remove_tags_from_resource": {
        "ResourceType": {
            "Description": "The type of resource from which you want to remove a tag.",
            "Type": "string",
            "Required": true
        },
        "ResourceId": {
            "Description": "The ID of the resource from which you want to remove tags. For example:\nManagedInstance: mi-012345abcde\nMaintenanceWindow: mw-012345abcde\nPatchBaseline: pb-012345abcde\nOpsMetadata object: ResourceID for tagging is created from the Amazon Resource Name (ARN) for the object. Specifically, ResourceID is created from the strings that come after the word opsmetadata in the ARN. For example, an OpsMetadata object with an ARN of arn:aws:ssm:us-east-2:1234567890:opsmetadata/aws/ssm/MyGroup/appmanager has a ResourceID of either aws/ssm/MyGroup/appmanager or /aws/ssm/MyGroup/appmanager .\nFor the Document and Parameter values, use the name of the resource.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "Tag keys that you want to remove from the specified resource.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "reset_service_setting": {
        "SettingId": {
            "Description": "The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "resume_session": {
        "SessionId": {
            "Description": "The ID of the disconnected session to resume.",
            "Type": "string",
            "Required": true
        }
    },
    "send_automation_signal": {
        "AutomationExecutionId": {
            "Description": "The unique identifier for an existing Automation execution that you want to send the signal to.",
            "Type": "string",
            "Required": true
        },
        "SignalType": {
            "Description": "The type of signal to send to an Automation execution.",
            "Type": "string",
            "Required": true
        },
        "Payload": {
            "Description": "The data sent with the signal. The data schema depends on the type of signal used in the request.\nFor Approve and Reject signal types, the payload is an optional comment that you can send with the signal type. For example:\nFor StartStep and Resume signal types, you must send the name of the Automation step to start or resume as the payload. For example:\nFor the StopStep signal type, you must send the step execution ID as the payload. For example:",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "send_command": {
        "InstanceIds": {
            "Description": "The IDs of the managed nodes where the command should run. Specifying managed node IDs is most useful when you are targeting a limited number of managed nodes, though you can specify up to 50 IDs.\nTo target a larger number of managed nodes, or if you prefer not to list individual node IDs, we recommend using the Targets option instead. Using Targets, which accepts tag key-value pairs to identify the managed nodes to send commands to, you can a send command to tens, hundreds, or thousands of nodes at once.\nFor more information about how to use targets, see Using targets and rate controls to send commands to a fleet in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Targets": {
            "Description": "An array of search criteria that targets managed nodes using a Key,Value combination that you specify. Specifying targets is most useful when you want to send a command to a large number of managed nodes at once. Using Targets, which accepts tag key-value pairs to identify managed nodes, you can send a command to tens, hundreds, or thousands of nodes at once.\nTo send a command to a smaller number of managed nodes, you can use the InstanceIds option instead.\nFor more information about how to use targets, see Sending commands to a fleet in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DocumentName": {
            "Description": "The name of the Amazon Web Services Systems Manager document (SSM document) to run. This can be a public document or a custom document. To run a shared document belonging to another account, specify the document Amazon Resource Name (ARN). For more information about how to use shared documents, see Using shared SSM documents in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a specific version number. If you run commands by using the Command Line Interface (Amazon Web Services CLI), then you must escape the first two options by using a backslash. If you specify a version number, then you don't need to use the backslash. For example:\n--document-version \"$DEFAULT\"\n--document-version \"$LATEST\"\n--document-version \"3\"",
            "Type": "string",
            "Required": false
        },
        "DocumentHash": {
            "Description": "The Sha256 or Sha1 hash created by the system when the document was created.",
            "Type": "string",
            "Required": false
        },
        "DocumentHashType": {
            "Description": "Sha256 or Sha1.",
            "Type": "string",
            "Required": false
        },
        "TimeoutSeconds": {
            "Description": "If this time is reached and the command hasn't already started running, it won't run.",
            "Type": "integer",
            "Required": false
        },
        "Comment": {
            "Description": "User-specified information about the command, such as a brief description of what the command should do.",
            "Type": "string",
            "Required": false
        },
        "Parameters": {
            "Description": "The required and optional parameters specified in the document being run.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "OutputS3Region": {
            "Description": "(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon Web Services Region of the S3 bucket.",
            "Type": "string",
            "Required": false
        },
        "OutputS3BucketName": {
            "Description": "The name of the S3 bucket where command execution responses should be stored.",
            "Type": "string",
            "Required": false
        },
        "OutputS3KeyPrefix": {
            "Description": "The directory structure within the S3 bucket where the responses should be stored.",
            "Type": "string",
            "Required": false
        },
        "MaxConcurrency": {
            "Description": "(Optional) The maximum number of managed nodes that are allowed to run the command at the same time. You can specify a number such as 10 or a percentage such as 10%. The default value is 50 . For more information about how to use MaxConcurrency , see Using concurrency controls in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false
        },
        "MaxErrors": {
            "Description": "The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of MaxErrors , the systems stops sending the command to additional targets. You can specify a number like 10 or a percentage like 10%. The default value is 0 . For more information about how to use MaxErrors , see Using error controls in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false
        },
        "ServiceRoleArn": {
            "Description": "The ARN of the Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for Run Command commands.\nThis role must provide the sns:Publish permission for your notification topic. For information about creating and using this service role, see Monitoring Systems Manager status changes using Amazon SNS notifications in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false
        },
        "NotificationConfig": {
            "Description": "Configurations for sending notifications.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CloudWatchOutputConfig": {
            "Description": "Enables Amazon Web Services Systems Manager to send Run Command output to Amazon CloudWatch Logs. Run Command is a capability of Amazon Web Services Systems Manager.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "start_associations_once": {
        "AssociationIds": {
            "Description": "The association IDs that you want to run immediately and only one time.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "start_automation_execution": {
        "DocumentName": {
            "Description": "The name of the SSM document to run. This can be a public document or a custom document. To run a shared document belonging to another account, specify the document ARN. For more information about how to use shared documents, see Using shared SSM documents in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The version of the Automation runbook to use for this execution.",
            "Type": "string",
            "Required": false
        },
        "Parameters": {
            "Description": "A key-value map of execution parameters, which match the declared parameters in the Automation runbook.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ClientToken": {
            "Description": "User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.",
            "Type": "string",
            "Required": false
        },
        "Mode": {
            "Description": "The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.",
            "Type": "string",
            "Required": false
        },
        "TargetParameterName": {
            "Description": "The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify targets.",
            "Type": "string",
            "Required": false
        },
        "Targets": {
            "Description": "A key-value mapping to target resources. Required if you specify TargetParameterName.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TargetMaps": {
            "Description": "A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can't be specified together.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxConcurrency": {
            "Description": "The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10 .",
            "Type": "string",
            "Required": false
        },
        "MaxErrors": {
            "Description": "The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received.\nExecutions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.",
            "Type": "string",
            "Required": false
        },
        "TargetLocations": {
            "Description": "A location is a combination of Amazon Web Services Regions and/or Amazon Web Services accounts where you want to run the automation. Use this operation to start an automation in multiple Amazon Web Services Regions and multiple Amazon Web Services accounts. For more information, see Running Automation workflows in multiple Amazon Web Services Regions and Amazon Web Services accounts in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. You can specify a maximum of five tags for an automation. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an automation to identify an environment or operating system. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        }
    },
    "start_change_request_execution": {
        "ScheduledTime": {
            "Description": "The date and time specified in the change request to run the Automation runbooks.",
            "Type": "datetime",
            "Required": false
        },
        "DocumentName": {
            "Description": "The name of the change template document to run during the runbook workflow.",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The version of the change template document to run during the runbook workflow.",
            "Type": "string",
            "Required": false
        },
        "Parameters": {
            "Description": "A key-value map of parameters that match the declared parameters in the change template document.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ChangeRequestName": {
            "Description": "The name of the change request associated with the runbook workflow to be run.",
            "Type": "string",
            "Required": false
        },
        "ClientToken": {
            "Description": "The user-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.",
            "Type": "string",
            "Required": false
        },
        "AutoApprove": {
            "Description": "Indicates whether the change request can be approved automatically without the need for manual approvals.\nIf AutoApprovable is enabled in a change template, then setting AutoApprove to true in StartChangeRequestExecution creates a change request that bypasses approver review.",
            "Type": "boolean",
            "Required": false
        },
        "Runbooks": {
            "Description": "Information about the Automation runbooks that are run during the runbook workflow.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Tags": {
            "Description": "Optional metadata that you assign to a resource. You can specify a maximum of five tags for a change request. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a change request to identify an environment or target Amazon Web Services Region. In this case, you could specify the following key-value pairs:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "ScheduledEndTime": {
            "Description": "The time that the requester expects the runbook workflow related to the change request to complete. The time is an estimate only that the requester provides for reviewers.",
            "Type": "datetime",
            "Required": false
        },
        "ChangeDetails": {
            "Description": "User-provided details about the change. If no details are provided, content specified in the Template information section of the associated change template is added.",
            "Type": "string",
            "Required": false
        }
    },
    "start_session": {
        "Target": {
            "Description": "The managed node to connect to for the session.",
            "Type": "string",
            "Required": true
        },
        "DocumentName": {
            "Description": "The name of the SSM document you want to use to define the type of session, input parameters, or preferences for the session. For example, SSM-SessionManagerRunShell . You can call the  GetDocument API to verify the document exists before attempting to start a session. If no document name is provided, a shell to the managed node is launched by default. For more information, see Start a session in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false
        },
        "Reason": {
            "Description": "The reason for connecting to the instance. This value is included in the details for the Amazon CloudWatch Events event created when you start the session.",
            "Type": "string",
            "Required": false
        },
        "Parameters": {
            "Description": "The values you want to specify for the parameters defined in the Session document.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "stop_automation_execution": {
        "AutomationExecutionId": {
            "Description": "The execution ID of the Automation to stop.",
            "Type": "string",
            "Required": true
        },
        "Type": {
            "Description": "The stop request type. Valid types include the following: Cancel and Complete. The default type is Cancel.",
            "Type": "string",
            "Required": false
        }
    },
    "terminate_session": {
        "SessionId": {
            "Description": "The ID of the session to terminate.",
            "Type": "string",
            "Required": true
        }
    },
    "unlabel_parameter_version": {
        "Name": {
            "Description": "The name of the parameter from which you want to delete one or more labels.",
            "Type": "string",
            "Required": true
        },
        "ParameterVersion": {
            "Description": "The specific version of the parameter which you want to delete one or more labels from. If it isn't present, the call will fail.",
            "Type": "integer",
            "Required": true
        },
        "Labels": {
            "Description": "One or more labels to delete from the specified parameter version.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_association": {
        "AssociationId": {
            "Description": "The ID of the association you want to update.",
            "Type": "string",
            "Required": true
        },
        "Parameters": {
            "Description": "The parameters you want to update for the association. If you create a parameter using Parameter Store, a capability of Amazon Web Services Systems Manager, you can reference the parameter using {{ssm:parameter-name}} .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DocumentVersion": {
            "Description": "The document version you want update for the association.",
            "Type": "string",
            "Required": false
        },
        "ScheduleExpression": {
            "Description": "The cron expression used to schedule the association that you want to update.",
            "Type": "string",
            "Required": false
        },
        "OutputLocation": {
            "Description": "An S3 bucket where you want to store the results of this request.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "The name of the SSM Command document or Automation runbook that contains the configuration information for the managed node.\nYou can specify Amazon Web Services-predefined documents, documents you created, or a document that is shared with you from another account.\nFor Systems Manager document (SSM document) that are shared with you from other Amazon Web Services accounts, you must specify the complete SSM document ARN, in the following format:\nFor example:\nFor Amazon Web Services-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, AWS-ApplyPatchBaseline or My-Document .",
            "Type": "string",
            "Required": false
        },
        "Targets": {
            "Description": "The targets of the association.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "AssociationName": {
            "Description": "The name of the association that you want to update.",
            "Type": "string",
            "Required": false
        },
        "AssociationVersion": {
            "Description": "This parameter is provided for concurrency control purposes. You must specify the latest association version in the service. If you want to ensure that this request succeeds, either specify $LATEST , or omit this parameter.",
            "Type": "string",
            "Required": false
        },
        "AutomationTargetParameterName": {
            "Description": "Choose the parameter that will define how your automation will branch out. This target is required for associations that use an Automation runbook and target resources by using rate controls. Automation is a capability of Amazon Web Services Systems Manager.",
            "Type": "string",
            "Required": false
        },
        "MaxErrors": {
            "Description": "The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 managed nodes and set MaxError to 10%, then the system stops sending the request when the sixth error is received.\nExecutions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.",
            "Type": "string",
            "Required": false
        },
        "MaxConcurrency": {
            "Description": "The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.\nIf a new managed node starts and attempts to run an association while Systems Manager is running MaxConcurrency associations, the association is allowed to run. During the next association interval, the new managed node will process its association within the limit specified for MaxConcurrency .",
            "Type": "string",
            "Required": false
        },
        "ComplianceSeverity": {
            "Description": "The severity level to assign to the association.",
            "Type": "string",
            "Required": false
        },
        "SyncCompliance": {
            "Description": "The mode for generating association compliance. You can specify AUTO or MANUAL. In AUTO mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is COMPLIANT. If the association execution doesn't run successfully, the association is NON-COMPLIANT .\nIn MANUAL mode, you must specify the AssociationId as a parameter for the  PutComplianceItems API operation. In this case, compliance data isn't managed by State Manager, a capability of Amazon Web Services Systems Manager. It is managed by your direct call to the  PutComplianceItems API operation.\nBy default, all associations use AUTO mode.",
            "Type": "string",
            "Required": false
        },
        "ApplyOnlyAtCronInterval": {
            "Description": "By default, when you update an association, the system runs it immediately after it is updated and then according to the schedule you specified. Specify this option if you don't want an association to run immediately after you update it. This parameter isn't supported for rate expressions.\nIf you chose this option when you created an association and later you edit that association or you make changes to the SSM document on which that association is based (by using the Documents page in the console), State Manager applies the association at the next specified cron interval. For example, if you chose the Latest version of an SSM document when you created an association and you edit the association by choosing a different document version on the Documents page, State Manager applies the association at the next specified cron interval if you previously selected this option. If this option wasn't selected, State Manager immediately runs the association.\nYou can reset this option. To do so, specify the no-apply-only-at-cron-interval parameter when you update the association from the command line. This parameter forces the association to run immediately after updating it and according to the interval specified.",
            "Type": "boolean",
            "Required": false
        },
        "CalendarNames": {
            "Description": "The names or Amazon Resource Names (ARNs) of the Change Calendar type documents you want to gate your associations under. The associations only run when that change calendar is open. For more information, see Amazon Web Services Systems Manager Change Calendar .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TargetLocations": {
            "Description": "A location is a combination of Amazon Web Services Regions and Amazon Web Services accounts where you want to run the association. Use this action to update an association in multiple Regions and multiple accounts.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ScheduleOffset": {
            "Description": "Number of days to wait after the scheduled day to run an association. For example, if you specified a cron schedule of cron(0 0 ? * THU#2 *), you could specify an offset of 3 to run the association each Sunday after the second Thursday of the month. For more information about cron schedules for associations, see Reference: Cron and rate expressions for Systems Manager in the Amazon Web Services Systems Manager User Guide .",
            "Type": "integer",
            "Required": false
        },
        "TargetMaps": {
            "Description": "A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can't be specified together.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_association_status": {
        "Name": {
            "Description": "The name of the SSM document.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "The managed node ID.",
            "Type": "string",
            "Required": true
        },
        "AssociationStatus": {
            "Description": "The association status.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_document": {
        "Content": {
            "Description": "A valid JSON or YAML string.",
            "Type": "string",
            "Required": true
        },
        "Attachments": {
            "Description": "A list of key-value pairs that describe attachments to a version of a document.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Name": {
            "Description": "The name of the SSM document that you want to update.",
            "Type": "string",
            "Required": true
        },
        "DisplayName": {
            "Description": "The friendly name of the SSM document that you want to update. This value can differ for each version of the document. If you don't specify a value for this parameter in your request, the existing value is applied to the new document version.",
            "Type": "string",
            "Required": false
        },
        "VersionName": {
            "Description": "An optional field specifying the version of the artifact you are updating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and can't be changed.",
            "Type": "string",
            "Required": false
        },
        "DocumentVersion": {
            "Description": "The version of the document that you want to update. Currently, Systems Manager supports updating only the latest version of the document. You can specify the version number of the latest version or use the $LATEST variable.",
            "Type": "string",
            "Required": false
        },
        "DocumentFormat": {
            "Description": "Specify the document format for the new document version. Systems Manager supports JSON and YAML documents. JSON is the default format.",
            "Type": "string",
            "Required": false
        },
        "TargetType": {
            "Description": "Specify a new target type for the document.",
            "Type": "string",
            "Required": false
        }
    },
    "update_document_default_version": {
        "Name": {
            "Description": "The name of a custom document that you want to set as the default version.",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The version of a custom document that you want to set as the default version.",
            "Type": "string",
            "Required": true
        }
    },
    "update_document_metadata": {
        "Name": {
            "Description": "The name of the change template for which a version's metadata is to be updated.",
            "Type": "string",
            "Required": true
        },
        "DocumentVersion": {
            "Description": "The version of a change template in which to update approval metadata.",
            "Type": "string",
            "Required": false
        },
        "DocumentReviews": {
            "Description": "The change template review details to update.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_maintenance_window": {
        "WindowId": {
            "Description": "The ID of the maintenance window to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of the maintenance window.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "An optional description for the update request.",
            "Type": "string",
            "Required": false
        },
        "StartDate": {
            "Description": "The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become active. StartDate allows you to delay activation of the maintenance window until the specified future date.",
            "Type": "string",
            "Required": false
        },
        "EndDate": {
            "Description": "The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become inactive. EndDate allows you to set a date and time in the future when the maintenance window will no longer run.",
            "Type": "string",
            "Required": false
        },
        "Schedule": {
            "Description": "The schedule of the maintenance window in the form of a cron or rate expression.",
            "Type": "string",
            "Required": false
        },
        "ScheduleTimezone": {
            "Description": "The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\". For more information, see the Time Zone Database on the IANA website.",
            "Type": "string",
            "Required": false
        },
        "ScheduleOffset": {
            "Description": "The number of days to wait after the date and time specified by a cron expression before running the maintenance window.\nFor example, the following cron expression schedules a maintenance window to run the third Tuesday of every month at 11:30 PM.\nIf the schedule offset is 2, the maintenance window won't run until two days later.",
            "Type": "integer",
            "Required": false
        },
        "Duration": {
            "Description": "The duration of the maintenance window in hours.",
            "Type": "integer",
            "Required": false
        },
        "Cutoff": {
            "Description": "The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution.",
            "Type": "integer",
            "Required": false
        },
        "AllowUnassociatedTargets": {
            "Description": "Whether targets must be registered with the maintenance window before tasks can be defined for those targets.",
            "Type": "boolean",
            "Required": false
        },
        "Enabled": {
            "Description": "Whether the maintenance window is enabled.",
            "Type": "boolean",
            "Required": false
        },
        "Replace": {
            "Description": "If True , then all fields that are required by the  CreateMaintenanceWindow operation are also required for this API request. Optional fields that aren't specified are set to null.",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_maintenance_window_target": {
        "WindowId": {
            "Description": "The maintenance window ID with which to modify the target.",
            "Type": "string",
            "Required": true
        },
        "WindowTargetId": {
            "Description": "The target ID to modify.",
            "Type": "string",
            "Required": true
        },
        "Targets": {
            "Description": "The targets to add or replace.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "OwnerInformation": {
            "Description": "User-provided value that will be included in any Amazon CloudWatch Events events raised while running tasks for these targets in this maintenance window.",
            "Type": "string",
            "Required": false
        },
        "Name": {
            "Description": "A name for the update.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "An optional description for the update.",
            "Type": "string",
            "Required": false
        },
        "Replace": {
            "Description": "If True , then all fields that are required by the  RegisterTargetWithMaintenanceWindow operation are also required for this API request. Optional fields that aren't specified are set to null.",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_maintenance_window_task": {
        "WindowId": {
            "Description": "The maintenance window ID that contains the task to modify.",
            "Type": "string",
            "Required": true
        },
        "WindowTaskId": {
            "Description": "The task ID to modify.",
            "Type": "string",
            "Required": true
        },
        "Targets": {
            "Description": "The targets (either managed nodes or tags) to modify. Managed nodes are specified using the format Key=instanceids,Values=instanceID_1,instanceID_2. Tags are specified using the format Key=tag_name,Values=tag_value .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TaskArn": {
            "Description": "The task ARN to modify.",
            "Type": "string",
            "Required": false
        },
        "ServiceRoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the IAM service role for Amazon Web Services Systems Manager to assume when running a maintenance window task. If you do not specify a service role ARN, Systems Manager uses your account's service-linked role. If no service-linked role for Systems Manager exists in your account, it is created when you run RegisterTaskWithMaintenanceWindow .\nFor more information, see the following topics in the in the Amazon Web Services Systems Manager User Guide :",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "TaskParameters": {
            "Description": "The parameters to modify.\nThe map has the following format:\nKey: string, between 1 and 255 characters\nValue: an array of strings, each string is between 1 and 255 characters",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TaskInvocationParameters": {
            "Description": "The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Priority": {
            "Description": "The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
            "Type": "integer",
            "Required": false
        },
        "MaxConcurrency": {
            "Description": "The new MaxConcurrency value you want to specify. MaxConcurrency is the number of targets that are allowed to run this task, in parallel.",
            "Type": "string",
            "Required": false
        },
        "MaxErrors": {
            "Description": "The new MaxErrors value to specify. MaxErrors is the maximum number of errors that are allowed before the task stops being scheduled.",
            "Type": "string",
            "Required": false
        },
        "LoggingInfo": {
            "Description": "The new logging location in Amazon S3 to specify.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "The new task name to specify.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The new task description to specify.",
            "Type": "string",
            "Required": false
        },
        "Replace": {
            "Description": "If True, then all fields that are required by the  RegisterTaskWithMaintenanceWindow operation are also required for this API request. Optional fields that aren't specified are set to null.",
            "Type": "boolean",
            "Required": false
        },
        "CutoffBehavior": {
            "Description": "Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached.\nThe status for tasks that are not completed is TIMED_OUT .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        }
    },
    "update_managed_instance_role": {
        "InstanceId": {
            "Description": "The ID of the managed node where you want to update the role.",
            "Type": "string",
            "Required": true
        },
        "IamRole": {
            "Description": "The IAM role you want to assign or change.",
            "Type": "string",
            "Required": true
        }
    },
    "update_ops_item": {
        "Description": {
            "Description": "Update the information about the OpsItem. Provide enough information so that users reading this OpsItem for the first time understand the issue.",
            "Type": "string",
            "Required": false
        },
        "OperationalData": {
            "Description": "Add new keys or edit existing key-value pairs of the OperationalData map in the OpsItem object.\nOperational data is custom data that provides useful reference details about the OpsItem. For example, you can specify log files, error strings, license keys, troubleshooting tips, or other relevant data. You enter operational data as key-value pairs. The key has a maximum length of 128 characters. The value has a maximum size of 20 KB.\nYou can choose to make the data searchable by other users in the account or you can restrict search access. Searchable data means that all users with access to the OpsItem Overview page (as provided by the  DescribeOpsItems API operation) can view and search on the specified data. Operational data that isn't searchable is only viewable by users who have access to the OpsItem (as provided by the  GetOpsItem API operation).\nUse the /aws/resources key in OperationalData to specify a related resource in the request. Use the /aws/automations key in OperationalData to associate an Automation runbook with the OpsItem. To view Amazon Web Services CLI example commands that use these keys, see Creating OpsItems manually in the Amazon Web Services Systems Manager User Guide .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "OperationalDataToDelete": {
            "Description": "Keys that you want to remove from the OperationalData map.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Notifications": {
            "Description": "The Amazon Resource Name (ARN) of an SNS topic where notifications are sent when this OpsItem is edited or changed.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Priority": {
            "Description": "The importance of this OpsItem in relation to other OpsItems in the system.",
            "Type": "integer",
            "Required": false
        },
        "RelatedOpsItems": {
            "Description": "One or more OpsItems that share something in common with the current OpsItems. For example, related OpsItems can include OpsItems with similar error messages, impacted resources, or statuses for the impacted resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Status": {
            "Description": "The OpsItem status. Status can be Open , In Progress , or Resolved . For more information, see Editing OpsItem details in the Amazon Web Services Systems Manager User Guide .",
            "Type": "string",
            "Required": false
        },
        "OpsItemId": {
            "Description": "The ID of the OpsItem.",
            "Type": "string",
            "Required": true
        },
        "Title": {
            "Description": "A short heading that describes the nature of the OpsItem and the impacted resource.",
            "Type": "string",
            "Required": false
        },
        "Category": {
            "Description": "Specify a new category for an OpsItem.",
            "Type": "string",
            "Required": false
        },
        "Severity": {
            "Description": "Specify a new severity for an OpsItem.",
            "Type": "string",
            "Required": false
        },
        "ActualStartTime": {
            "Description": "The time a runbook workflow started. Currently reported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        },
        "ActualEndTime": {
            "Description": "The time a runbook workflow ended. Currently reported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        },
        "PlannedStartTime": {
            "Description": "The time specified in a change request for a runbook workflow to start. Currently supported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        },
        "PlannedEndTime": {
            "Description": "The time specified in a change request for a runbook workflow to end. Currently supported only for the OpsItem type /aws/changerequest .",
            "Type": "datetime",
            "Required": false
        }
    },
    "update_ops_metadata": {
        "OpsMetadataArn": {
            "Description": "The Amazon Resource Name (ARN) of the OpsMetadata Object to update.",
            "Type": "string",
            "Required": true
        },
        "MetadataToUpdate": {
            "Description": "Metadata to add to an OpsMetadata object.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "KeysToDelete": {
            "Description": "The metadata keys to delete from the OpsMetadata object.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_patch_baseline": {
        "BaselineId": {
            "Description": "The ID of the patch baseline to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The name of the patch baseline.",
            "Type": "string",
            "Required": false
        },
        "GlobalFilters": {
            "Description": "A set of global filters used to include patches in the baseline.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ApprovalRules": {
            "Description": "A set of rules used to include patches in the baseline.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ApprovedPatches": {
            "Description": "A list of explicitly approved patches for the baseline.\nFor information about accepted formats for lists of approved patches and rejected patches, see About package name formats for approved and rejected patch lists in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ApprovedPatchesComplianceLevel": {
            "Description": "Assigns a new compliance severity level to an existing patch baseline.",
            "Type": "string",
            "Required": false
        },
        "ApprovedPatchesEnableNonSecurity": {
            "Description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the managed nodes. The default value is false . Applies to Linux managed nodes only.",
            "Type": "boolean",
            "Required": false
        },
        "RejectedPatches": {
            "Description": "A list of explicitly rejected patches for the baseline.\nFor information about accepted formats for lists of approved patches and rejected patches, see About package name formats for approved and rejected patch lists in the Amazon Web Services Systems Manager User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RejectedPatchesAction": {
            "Description": "The action for Patch Manager to take on patches included in the RejectedPackages list.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Description": {
            "Description": "A description of the patch baseline.",
            "Type": "string",
            "Required": false
        },
        "Sources": {
            "Description": "Information about the patches to use to update the managed nodes, including target operating systems and source repositories. Applies to Linux managed nodes only.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Replace": {
            "Description": "If True, then all fields that are required by the  CreatePatchBaseline operation are also required for this API request. Optional fields that aren't specified are set to null.",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_resource_data_sync": {
        "SyncName": {
            "Description": "The name of the resource data sync you want to update.",
            "Type": "string",
            "Required": true
        },
        "SyncType": {
            "Description": "The type of resource data sync. The supported SyncType is SyncFromSource.",
            "Type": "string",
            "Required": true
        },
        "SyncSource": {
            "Description": "Specify information about the data sources to synchronize.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "update_service_setting": {
        "SettingId": {
            "Description": "The Amazon Resource Name (ARN) of the service setting to reset. For example, arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled. The setting ID can be one of the following.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "SettingValue": {
            "Description": "The new value to specify for the service setting. The following list specifies the available values for each setting.",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    },
    "paginate": {
        "SyncType": {
            "Description": "View a list of resource data syncs according to the sync type. Specify SyncToDestination to view resource data syncs that synchronize data to an Amazon S3 bucket. Specify SyncFromSource to view resource data syncs from Organizations or from multiple Amazon Web Services Regions.",
            "Type": "string",
            "Required": false
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "CommandId": {
            "Description": "(Required) The parent command ID of the invocation plugin.",
            "Type": "string",
            "Required": true
        },
        "InstanceId": {
            "Description": "(Required) The ID of the managed node targeted by the command. A managed node can be an Amazon Elastic Compute Cloud (Amazon EC2) instance, edge device, and on-premises server or VM in your hybrid environment that is configured for Amazon Web Services Systems Manager.",
            "Type": "string",
            "Required": true
        },
        "PluginName": {
            "Description": "The name of the step for which you want detailed results. If the document contains only one step, you can omit the name and details for that step. If the document contains more than one step, you must specify the name of the step for which you want to view details. Be sure to specify the name of the step, not the name of a plugin like aws:RunShellScript .\nTo find the PluginName, check the document content and find the name of the step you want details for. Alternatively, use  ListCommandInvocations with the CommandId and Details parameters. The PluginName is the Name attribute of the CommandPlugin object in the CommandPlugins list.",
            "Type": "string",
            "Required": false
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}