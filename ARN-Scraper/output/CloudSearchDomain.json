{
    "search": {
        "cursor": {
            "Description": "Retrieves a cursor value you can use to page through large result sets. Use the size parameter to control the number of hits to include in each response. You can specify either the cursor or start parameter in a request; they are mutually exclusive. To get the first cursor, set the cursor value to initial. In subsequent requests, specify the cursor value returned in the hits section of the response.\nFor more information, see Paginating Results in the Amazon CloudSearch Developer Guide .",
            "Type": "string",
            "Required": false
        },
        "expr": {
            "Description": "Defines one or more numeric expressions that can be used to sort results or specify search or filter criteria. You can also specify expressions as return fields.\nYou specify the expressions in JSON using the form {\"EXPRESSIONNAME\":\"EXPRESSION\"}. You can define and use multiple expressions in a search request. For example:\n{\"expression1\":\"_score*rating\", \"expression2\":\"(1/rank)*year\"}\nFor information about the variables, operators, and functions you can use in expressions, see Writing Expressions in the Amazon CloudSearch Developer Guide .",
            "Type": "string",
            "Required": false
        },
        "facet": {
            "Description": "Specifies one or more fields for which to get facet information, and options that control how the facet information is returned. Each specified field must be facet-enabled in the domain configuration. The fields and options are specified in JSON using the form {\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}} .\nYou can specify the following faceting options:\nIf no facet options are specified, facet counts are computed for all field values, the facets are sorted by facet count, and the top 10 facets are returned in the results.\nTo count particular buckets of values, use the buckets option. For example, the following request uses the buckets option to calculate and return facet counts by decade.\n{\"year\":{\"buckets\":[\"[1970,1979]\",\"[1980,1989]\",\"[1990,1999]\",\"[2000,2009]\",\"[2010,}\"]}}\nTo sort facets by facet count, use the count option. For example, the following request sets the sort option to count to sort the facet values by facet count, with the facet values that have the most matching documents listed first. Setting the size option to 3 returns only the top three facet values.\n{\"year\":{\"sort\":\"count\",\"size\":3}}\nTo sort the facets by value, use the bucket option. For example, the following request sets the sort option to bucket to sort the facet values numerically by year, with earliest year listed first.\n{\"year\":{\"sort\":\"bucket\"}}\nFor more information, see Getting and Using Facet Information in the Amazon CloudSearch Developer Guide .",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "filterQuery": {
            "Description": "Specifies a structured query that filters the results of a search without affecting how the results are scored and sorted. You use filterQuery in conjunction with the query parameter to filter the documents that match the constraints specified in the query parameter. Specifying a filter controls only which matching documents are included in the results, it has no effect on how they are scored and sorted. The filterQuery parameter supports the full structured query syntax.\nFor more information about using filters, see Filtering Matching Documents in the Amazon CloudSearch Developer Guide .",
            "Type": "string",
            "Required": false
        },
        "highlight": {
            "Description": "Retrieves highlights for matches in the specified text or text-array fields. Each specified field must be highlight enabled in the domain configuration. The fields and options are specified in JSON using the form {\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}} .\nYou can specify the following highlight options:\nIf no highlight options are specified for a field, the returned field text is treated as HTML and the first match is highlighted with emphasis tags: &amp;lt;em&gt;search-term&amp;lt;/em&amp;gt; .\nFor example, the following request retrieves highlights for the actors and title fields.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "partial": {
            "Description": "Enables partial results to be returned if one or more index partitions are unavailable. When your search index is partitioned across multiple search instances, by default Amazon CloudSearch only returns results if every partition can be queried. This means that the failure of a single search instance can result in 5xx (internal server) errors. When you enable partial results, Amazon CloudSearch returns whatever results are available and includes the percentage of documents searched in the search results (percent-searched). This enables you to more gracefully degrade your users' search experience. For example, rather than displaying no results, you could display the partial results and a message indicating that the results might be incomplete due to a temporary system outage.",
            "Type": "boolean",
            "Required": false
        },
        "query": {
            "Description": "Specifies the search criteria for the request. How you specify the search criteria depends on the query parser used for the request and the parser options specified in the queryOptions parameter. By default, the simple query parser is used to process requests. To use the structured, lucene, or dismax query parser, you must also specify the queryParser parameter.\nFor more information about specifying search criteria, see Searching Your Data in the Amazon CloudSearch Developer Guide .",
            "Type": "string",
            "Required": true
        },
        "queryOptions": {
            "Description": "Configures options for the query parser specified in the queryParser parameter. You specify the options in JSON using the following form {\"OPTION1\":\"VALUE1\",\"OPTION2\":VALUE2\"...\"OPTIONN\":\"VALUEN\"}.\nThe options you can configure vary according to which parser you use:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "queryParser": {
            "Description": "Specifies which query parser to use to process the request. If queryParser is not specified, Amazon CloudSearch uses the simple query parser.\nAmazon CloudSearch supports four query parsers:",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "returnFields": {
            "Description": "Specifies the field and expression values to include in the response. Multiple fields or expressions are specified as a comma-separated list. By default, a search response includes all return enabled fields (_all_fields ). To return only the document IDs for the matching documents, specify _no_fields . To retrieve the relevance score calculated for each document, specify _score .",
            "Type": "string",
            "Required": false
        },
        "size": {
            "Description": "Specifies the maximum number of search hits to include in the response.",
            "Type": "integer",
            "Required": false
        },
        "sort": {
            "Description": "Specifies the fields or custom expressions to use to sort the search results. Multiple fields or expressions are specified as a comma-separated list. You must specify the sort direction (asc or desc ) for each field; for example, year desc,title asc. To use a field to sort results, the field must be sort-enabled in the domain configuration. Array type fields cannot be used for sorting. If no sort parameter is specified, results are sorted by their default relevance scores in descending order: _score desc. You can also sort by document ID (_id asc ) and version (_version desc ).\nFor more information, see Sorting Results in the Amazon CloudSearch Developer Guide .",
            "Type": "string",
            "Required": false
        },
        "start": {
            "Description": "Specifies the offset of the first search hit you want to return. Note that the result set is zero-based; the first result is at index 0. You can specify either the start or cursor parameter in a request, they are mutually exclusive.\nFor more information, see Paginating Results in the Amazon CloudSearch Developer Guide .",
            "Type": "integer",
            "Required": false
        },
        "stats": {
            "Description": "Specifies one or more fields for which to get statistics information. Each specified field must be facet-enabled in the domain configuration. The fields are specified in JSON using the form:\nThere are currently no options supported for statistics.",
            "Type": "string",
            "Required": false
        }
    },
    "suggest": {
        "query": {
            "Description": "Specifies the string for which you want to get suggestions.",
            "Type": "string",
            "Required": true
        },
        "suggester": {
            "Description": "Specifies the name of the suggester to use to find suggested matches.",
            "Type": "string",
            "Required": true
        },
        "size": {
            "Description": "Specifies the maximum number of suggestions to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "upload_documents": {
        "documents": {
            "Description": "A batch of documents formatted in JSON or HTML.",
            "Type": "bytes or seekable file-like object",
            "Required": true
        },
        "contentType": {
            "Description": "The format of the batch you are uploading. Amazon CloudSearch supports two document batch formats:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        }
    }
}