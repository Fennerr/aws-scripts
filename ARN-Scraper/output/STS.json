{
    "assume_role": {
        "RoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the role to assume.",
            "Type": "string",
            "Required": true
        },
        "RoleSessionName": {
            "Description": "An identifier for the assumed role session.\nUse the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. In cross-account scenarios, the role session name is visible to, and can be logged by the account that owns the role. The role session name is also used in the ARN of the assumed role principal. This means that subsequent cross-account API requests that use the temporary security credentials will expose the role session name to the external account in their CloudTrail logs.\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-",
            "Type": "string",
            "Required": true
        },
        "PolicyArns": {
            "Description": "The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role.\nThis parameter is optional. You can provide up to 10 managed policy ARNs. However, the plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. For more information about ARNs, see Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces in the Amazon Web Services General Reference.\nPassing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see Session Policies in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Policy": {
            "Description": "An IAM policy in JSON format that you want to use as an inline session policy.\nThis parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see Session Policies in the IAM User Guide .\nThe plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (u0020 through u00FF). It can also include the tab (u0009), linefeed (u000A), and carriage return (u000D) characters.",
            "Type": "string",
            "Required": false
        },
        "DurationSeconds": {
            "Description": "The duration, in seconds, of the role session. The value specified can range from 900 seconds (15 minutes) up to the maximum session duration set for the role. The maximum session duration setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting or the administrator setting (whichever is lower), the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails.\nRole chaining limits your Amazon Web Services CLI or Amazon Web Services API role session to a maximum of one hour. When you use the AssumeRole API operation to assume a role, you can specify the duration of your role session with the DurationSeconds parameter. You can specify a parameter value of up to 43200 seconds (12 hours), depending on the maximum session duration setting for your role. However, if you assume a role using role chaining and provide a DurationSeconds parameter value greater than one hour, the operation fails. To learn how to view the maximum value for your role, see View the Maximum Session Duration Setting for a Role in the IAM User Guide .\nBy default, the value is set to 3600 seconds.",
            "Type": "integer",
            "Required": false
        },
        "Tags": {
            "Description": "A list of session tags that you want to pass. Each session tag consists of a key name and an associated value. For more information about session tags, see Tagging Amazon Web Services STS Sessions in the IAM User Guide .\nThis parameter is optional. You can pass up to 50 session tags. The plaintext session tag keys can\u2019t exceed 128 characters, and the values can\u2019t exceed 256 characters. For these and additional limits, see IAM and STS Character Limits in the IAM User Guide .\nYou can pass a session tag with the same key as a tag that is already attached to the role. When you do, session tags override a role tag with the same key.\nTag key\u2013value pairs are not case sensitive, but case is preserved. This means that you cannot have separate Department and department tag keys. Assume that the role has the Department =``Marketing`` tag and you pass the department =``engineering`` session tag. Department and department are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag.\nAdditionally, if you used temporary credentials to perform this operation, the new session inherits any transitive session tags from the calling session. If you pass a session tag with the same key as an inherited tag, the operation fails. To view the inherited tags for a session, see the CloudTrail logs. For more information, see Viewing Session Tags in CloudTrail in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "TransitiveTagKeys": {
            "Description": "A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain. For more information, see Chaining Roles with Session Tags in the IAM User Guide .\nThis parameter is optional. When you set session tags as transitive, the session policy and session tags packed binary limit is not affected.\nIf you choose not to specify a transitive tag key, then no tags are passed from this session to any subsequent sessions.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ExternalId": {
            "Description": "A unique identifier that might be required when you assume a role in another account. If the administrator of the account to which the role belongs provided you with an external ID, then provide that value in the ExternalId parameter. This value can be any string, such as a passphrase or account number. A cross-account role is usually set up to trust everyone in an account. Therefore, the administrator of the trusting account might send an external ID to the administrator of the trusted account. That way, only someone with the ID can assume the role, rather than everyone in the account. For more information about the external ID, see How to Use an External ID When Granting Access to Your Amazon Web Services Resources to a Third Party in the IAM User Guide .\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-",
            "Type": "string",
            "Required": false
        },
        "SerialNumber": {
            "Description": "The identification number of the MFA device that is associated with the user who is making the AssumeRole call. Specify this value if the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for a hardware device (such as GAHT12345678 ) or an Amazon Resource Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user ).\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-",
            "Type": "string",
            "Required": false
        },
        "TokenCode": {
            "Description": "The value provided by the MFA device, if the trust policy of the role being assumed requires MFA. (In other words, if the policy includes a condition that tests for MFA). If the role being assumed requires MFA and if the TokenCode value is missing or expired, the AssumeRole call returns an \"access denied\" error.\nThe format for this parameter, as described by its regex pattern, is a sequence of six numeric digits.",
            "Type": "string",
            "Required": false
        },
        "SourceIdentity": {
            "Description": "The source identity specified by the principal that is calling the AssumeRole operation.\nYou can require users to specify a source identity when they assume a role. You do this by using the sts:SourceIdentity condition key in a role trust policy. You can use source identity information in CloudTrail logs to determine who took actions with a role. You can use the aws:SourceIdentity condition key to further control access to Amazon Web Services resources based on the value of source identity. For more information about using source identity, see Monitor and control actions taken with assumed roles in the IAM User Guide .\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-. You cannot use a value that begins with the text aws:. This prefix is reserved for Amazon Web Services internal use.",
            "Type": "string",
            "Required": false
        }
    },
    "assume_role_with_saml": {
        "RoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the role that the caller is assuming.",
            "Type": "string",
            "Required": true
        },
        "PrincipalArn": {
            "Description": "The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.",
            "Type": "string",
            "Required": true
        },
        "SAMLAssertion": {
            "Description": "The base64 encoded SAML authentication response provided by the IdP.\nFor more information, see Configuring a Relying Party and Adding Claims in the IAM User Guide .",
            "Type": "string",
            "Required": true
        },
        "PolicyArns": {
            "Description": "The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role.\nThis parameter is optional. You can provide up to 10 managed policy ARNs. However, the plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. For more information about ARNs, see Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces in the Amazon Web Services General Reference.\nPassing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see Session Policies in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Policy": {
            "Description": "An IAM policy in JSON format that you want to use as an inline session policy.\nThis parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see Session Policies in the IAM User Guide .\nThe plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (u0020 through u00FF). It can also include the tab (u0009), linefeed (u000A), and carriage return (u000D) characters.",
            "Type": "string",
            "Required": false
        },
        "DurationSeconds": {
            "Description": "The duration, in seconds, of the role session. Your role session lasts for the duration that you specify for the DurationSeconds parameter, or until the time specified in the SAML authentication response's SessionNotOnOrAfter value, whichever is shorter. You can provide a DurationSeconds value from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting, the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails. To learn how to view the maximum value for your role, see View the Maximum Session Duration Setting for a Role in the IAM User Guide .\nBy default, the value is set to 3600 seconds.",
            "Type": "integer",
            "Required": false
        }
    },
    "assume_role_with_web_identity": {
        "RoleArn": {
            "Description": "The Amazon Resource Name (ARN) of the role that the caller is assuming.",
            "Type": "string",
            "Required": true
        },
        "RoleSessionName": {
            "Description": "An identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your application. That way, the temporary security credentials that your application will use are associated with that user. This session name is included as part of the ARN and assumed role ID in the AssumedRoleUser response element.\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-",
            "Type": "string",
            "Required": true
        },
        "WebIdentityToken": {
            "Description": "The OAuth 2.0 access token or OpenID Connect ID token that is provided by the identity provider. Your application must get this token by authenticating the user who is using your application with a web identity provider before the application makes an AssumeRoleWithWebIdentity call.",
            "Type": "string",
            "Required": true
        },
        "ProviderId": {
            "Description": "The fully qualified host component of the domain name of the OAuth 2.0 identity provider. Do not specify this value for an OpenID Connect identity provider.\nCurrently www.amazon.com and graph.facebook.com are the only supported identity providers for OAuth 2.0 access tokens. Do not include URL schemes and port numbers.\nDo not specify this value for OpenID Connect ID tokens.",
            "Type": "string",
            "Required": false
        },
        "PolicyArns": {
            "Description": "The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role.\nThis parameter is optional. You can provide up to 10 managed policy ARNs. However, the plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. For more information about ARNs, see Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces in the Amazon Web Services General Reference.\nPassing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see Session Policies in the IAM User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Policy": {
            "Description": "An IAM policy in JSON format that you want to use as an inline session policy.\nThis parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see Session Policies in the IAM User Guide .\nThe plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (u0020 through u00FF). It can also include the tab (u0009), linefeed (u000A), and carriage return (u000D) characters.",
            "Type": "string",
            "Required": false
        },
        "DurationSeconds": {
            "Description": "The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting, the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails. To learn how to view the maximum value for your role, see View the Maximum Session Duration Setting for a Role in the IAM User Guide .\nBy default, the value is set to 3600 seconds.",
            "Type": "integer",
            "Required": false
        }
    },
    "decode_authorization_message": {
        "EncodedMessage": {
            "Description": "The encoded message that was returned with the response.",
            "Type": "string",
            "Required": true
        }
    },
    "get_access_key_info": {
        "AccessKeyId": {
            "Description": "The identifier of an access key.\nThis parameter allows (through its regex pattern) a string of characters that can consist of any upper- or lowercase letter or digit.",
            "Type": "string",
            "Required": true
        }
    },
    "get_caller_identity": "No parameters defined",
    "get_federation_token": {
        "Name": {
            "Description": "The name of the federated user. The name is used as an identifier for the temporary security credentials (such as Bob ). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy.\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-",
            "Type": "string",
            "Required": true
        },
        "Policy": {
            "Description": "An IAM policy in JSON format that you want to use as an inline session policy.\nYou must pass an inline or managed session policy to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies.\nThis parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions.\nWhen you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see Session Policies in the IAM User Guide .\nThe resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the Principal element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies.\nThe plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (u0020 through u00FF). It can also include the tab (u0009), linefeed (u000A), and carriage return (u000D) characters.",
            "Type": "string",
            "Required": false
        },
        "PolicyArns": {
            "Description": "The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as a managed session policy. The policies must exist in the same account as the IAM user that is requesting federated access.\nYou must pass an inline or managed session policy to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies. The plaintext that you use for both inline and managed session policies can't exceed 2,048 characters. You can provide up to 10 managed policy ARNs. For more information about ARNs, see Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces in the Amazon Web Services General Reference.\nThis parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions.\nWhen you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see Session Policies in the IAM User Guide .\nThe resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the Principal element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "DurationSeconds": {
            "Description": "The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions obtained using Amazon Web Services account root user credentials are restricted to a maximum of 3,600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using root user credentials defaults to one hour.",
            "Type": "integer",
            "Required": false
        },
        "Tags": {
            "Description": "A list of session tags. Each session tag consists of a key name and an associated value. For more information about session tags, see Passing Session Tags in STS in the IAM User Guide .\nThis parameter is optional. You can pass up to 50 session tags. The plaintext session tag keys can\u2019t exceed 128 characters and the values can\u2019t exceed 256 characters. For these and additional limits, see IAM and STS Character Limits in the IAM User Guide .\nYou can pass a session tag with the same key as a tag that is already attached to the user you are federating. When you do, session tags override a user tag with the same key.\nTag key\u2013value pairs are not case sensitive, but case is preserved. This means that you cannot have separate Department and department tag keys. Assume that the role has the Department =``Marketing`` tag and you pass the department =``engineering`` session tag. Department and department are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "get_session_token": {
        "DurationSeconds": {
            "Description": "The duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions for Amazon Web Services account owners are restricted to a maximum of 3,600 seconds (one hour). If the duration is longer than one hour, the session for Amazon Web Services account owners defaults to one hour.",
            "Type": "integer",
            "Required": false
        },
        "SerialNumber": {
            "Description": "The identification number of the MFA device that is associated with the IAM user who is making the GetSessionToken call. Specify this value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as GAHT12345678 ) or an Amazon Resource Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user ). You can find the device for an IAM user by going to the Amazon Web Services Management Console and viewing the user's security credentials.\nThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-",
            "Type": "string",
            "Required": false
        },
        "TokenCode": {
            "Description": "The value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If MFA authentication is required, the user must provide a code when requesting a set of temporary security credentials. A user who fails to provide the code receives an \"access denied\" response when requesting resources that require MFA authentication.\nThe format for this parameter, as described by its regex pattern, is a sequence of six numeric digits.",
            "Type": "string",
            "Required": false
        }
    }
}