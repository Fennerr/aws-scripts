{
    "associate_repository": {
        "Repository": {
            "Description": "The repository to associate.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ClientRequestToken": {
            "Description": "Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate repository associations if there are failures and retries.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "An array of key-value pairs used to tag an associated repository. A tag is a custom attribute label with two parts:",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        },
        "KMSKeyDetails": {
            "Description": "A KMSKeyDetails object that contains:",
            "Type": "dict",
            "Required": false,
            "dict variables": [
                {},
                {}
            ]
        }
    },
    "create_code_review": {
        "Name": {
            "Description": "The name of the code review. The name of each code review in your Amazon Web Services account must be unique.",
            "Type": "string",
            "Required": true
        },
        "RepositoryAssociationArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .\nA code review can only be created on an associated repository. This is the ARN of the associated repository.",
            "Type": "string",
            "Required": true
        },
        "Type": {
            "Description": "The type of code review to create. This is specified using a CodeReviewType object. You can create a code review only of type RepositoryAnalysis .",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "ClientRequestToken": {
            "Description": "Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate code reviews if there are failures and retries.\nThis field is autopopulated if not provided.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_code_review": {
        "CodeReviewArn": {
            "Description": "The Amazon Resource Name (ARN) of the CodeReview object.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_recommendation_feedback": {
        "CodeReviewArn": {
            "Description": "The Amazon Resource Name (ARN) of the CodeReview object.",
            "Type": "string",
            "Required": true
        },
        "RecommendationId": {
            "Description": "The recommendation ID that can be used to track the provided recommendations and then to collect the feedback.",
            "Type": "string",
            "Required": true
        },
        "UserId": {
            "Description": "Optional parameter to describe the feedback for a given user. If this is not supplied, it defaults to the user making the request.\nThe UserId is an IAM principal that can be specified as an Amazon Web Services account ID or an Amazon Resource Name (ARN). For more information, see Specifying a Principal in the Amazon Web Services Identity and Access Management User Guide .",
            "Type": "string",
            "Required": false
        }
    },
    "describe_repository_association": {
        "AssociationArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .",
            "Type": "string",
            "Required": true
        }
    },
    "disassociate_repository": {
        "AssociationArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .",
            "Type": "string",
            "Required": true
        }
    },
    "list_code_reviews": {
        "ProviderTypes": {
            "Description": "List of provider types for filtering that needs to be applied before displaying the result. For example, providerTypes=[GitHub] lists code reviews from GitHub.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "States": {
            "Description": "List of states for filtering that needs to be applied before displaying the result. For example, states=[Pending] lists code reviews in the Pending state.\nThe valid code review states are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "RepositoryNames": {
            "Description": "List of repository names for filtering that needs to be applied before displaying the result.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Type": {
            "Description": "The type of code reviews to list in the response.",
            "Type": "string",
            "Required": true
        },
        "MaxResults": {
            "Description": "The maximum number of results that are returned per call. The default is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged.",
            "Type": "string",
            "Required": false
        }
    },
    "list_recommendation_feedback": {
        "NextToken": {
            "Description": "If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results that are returned per call. The default is 100.",
            "Type": "integer",
            "Required": false
        },
        "CodeReviewArn": {
            "Description": "The Amazon Resource Name (ARN) of the CodeReview object.",
            "Type": "string",
            "Required": true
        },
        "UserIds": {
            "Description": "An Amazon Web Services user's account ID or Amazon Resource Name (ARN). Use this ID to query the recommendation feedback for a code review from that user.\nThe UserId is an IAM principal that can be specified as an Amazon Web Services account ID or an Amazon Resource Name (ARN). For more information, see Specifying a Principal in the Amazon Web Services Identity and Access Management User Guide .",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "RecommendationIds": {
            "Description": "Used to query the recommendation feedback for a given recommendation.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "list_recommendations": {
        "NextToken": {
            "Description": "Pagination token.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results that are returned per call. The default is 100.",
            "Type": "integer",
            "Required": false
        },
        "CodeReviewArn": {
            "Description": "The Amazon Resource Name (ARN) of the CodeReview object.",
            "Type": "string",
            "Required": true
        }
    },
    "list_repository_associations": {
        "ProviderTypes": {
            "Description": "List of provider types to use as a filter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "States": {
            "Description": "List of repository association states to use as a filter.\nThe valid repository association states are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "Names": {
            "Description": "List of repository names to use as a filter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Owners": {
            "Description": "List of owners to use as a filter. For Amazon Web Services CodeCommit, it is the name of the CodeCommit account that was used to associate the repository. For other repository source providers, such as Bitbucket and GitHub Enterprise Server, this is name of the account that was used to associate the repository.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "MaxResults": {
            "Description": "The maximum number of repository association results returned by ListRepositoryAssociations in paginated output. When this parameter is used, ListRepositoryAssociations only returns maxResults results in a single page with a nextToken response element. The remaining results of the initial request can be seen by sending another ListRepositoryAssociations request with the returned nextToken value. This value can be between 1 and 100. If this parameter is not used, ListRepositoryAssociations returns up to 100 results and a nextToken value if applicable.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The nextToken value returned from a previous paginated ListRepositoryAssociations request where maxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the nextToken value.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "resourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .",
            "Type": "string",
            "Required": true
        }
    },
    "put_recommendation_feedback": {
        "CodeReviewArn": {
            "Description": "The Amazon Resource Name (ARN) of the CodeReview object.",
            "Type": "string",
            "Required": true
        },
        "RecommendationId": {
            "Description": "The recommendation ID that can be used to track the provided recommendations and then to collect the feedback.",
            "Type": "string",
            "Required": true
        },
        "Reactions": {
            "Description": "List for storing reactions. Reactions are utf-8 text code for emojis. If you send an empty list it clears all your feedback.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "tag_resource": {
        "resourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "An array of key-value pairs used to tag an associated repository. A tag is a custom attribute label with two parts:",
            "Type": "dict",
            "Required": true,
            "dict variables": [
                {},
                {}
            ]
        }
    },
    "untag_resource": {
        "resourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A list of the keys for each tag you want to remove from an associated repository.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "paginate": {
        "ProviderTypes": {
            "Description": "List of provider types to use as a filter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "States": {
            "Description": "List of repository association states to use as a filter.\nThe valid repository association states are:",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "Names": {
            "Description": "List of repository names to use as a filter.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "Owners": {
            "Description": "List of owners to use as a filter. For Amazon Web Services CodeCommit, it is the name of the CodeCommit account that was used to associate the repository. For other repository source providers, such as Bitbucket and GitHub Enterprise Server, this is name of the account that was used to associate the repository.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "wait": {
        "AssociationArn": {
            "Description": "The Amazon Resource Name (ARN) of the RepositoryAssociation object. You can retrieve this ARN by calling ListRepositoryAssociations .",
            "Type": "string",
            "Required": true
        },
        "WaiterConfig": {
            "Description": "A dictionary that provides parameters to control waiting behavior.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}