{
    "configure_logs_for_playback_configuration": {
        "PercentEnabled": {
            "Description": "The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to 60, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the debug log mode .\nValid values: 0 - 100",
            "Type": "integer",
            "Required": true
        },
        "PlaybackConfigurationName": {
            "Description": "The name of the playback configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "create_channel": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "FillerSlate": {
            "Description": "The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the LINEAR PlaybackMode. MediaTailor doesn't support filler slate for channels using the LOOP PlaybackMode.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Outputs": {
            "Description": "The channel's output properties.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "PlaybackMode": {
            "Description": "The type of playback mode to use for this channel.\nLINEAR - The programs in the schedule play once back-to-back in the schedule.\nLOOP - The programs in the schedule play back-to-back in an endless loop. When the last program in the schedule stops playing, playback loops back to the first program in the schedule.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to assign to the channel.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Tier": {
            "Description": "The tier of the channel.",
            "Type": "string",
            "Required": false
        }
    },
    "create_live_source": {
        "HttpPackageConfigurations": {
            "Description": "A list of HTTP package configuration parameters for this live source.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "LiveSourceName": {
            "Description": "The identifier for the live source you are working on.",
            "Type": "string",
            "Required": true
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to assign to the live source.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_prefetch_schedule": {
        "Consumption": {
            "Description": "The configuration settings for MediaTailor's consumption of the prefetched ads from the ad decision server. Each consumption configuration contains an end time and an optional start time that define the consumption window. Prefetch schedules automatically expire no earlier than seven days after the end time.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Name": {
            "Description": "The identifier for the playback configuration.",
            "Type": "string",
            "Required": true
        },
        "PlaybackConfigurationName": {
            "Description": "The name of the playback configuration.",
            "Type": "string",
            "Required": true
        },
        "Retrieval": {
            "Description": "The configuration settings for retrieval of prefetched ads from the ad decision server. Only one set of prefetched ads will be retrieved and subsequently consumed for each ad break.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "StreamId": {
            "Description": "An optional stream identifier that MediaTailor uses to prefetch ads for multiple streams that use the same playback configuration. If StreamId is specified, MediaTailor returns all of the prefetch schedules with an exact match on StreamId. If not specified, MediaTailor returns all of the prefetch schedules for the playback configuration, regardless of StreamId.",
            "Type": "string",
            "Required": false
        }
    },
    "create_program": {
        "AdBreaks": {
            "Description": "The ad break configuration settings.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "LiveSourceName": {
            "Description": "The name of the LiveSource for this Program.",
            "Type": "string",
            "Required": false
        },
        "ProgramName": {
            "Description": "The identifier for the program you are working on.",
            "Type": "string",
            "Required": true
        },
        "ScheduleConfiguration": {
            "Description": "The schedule configuration settings.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "SourceLocationName": {
            "Description": "The name of the source location.",
            "Type": "string",
            "Required": true
        },
        "VodSourceName": {
            "Description": "The name that's used to refer to a VOD source.",
            "Type": "string",
            "Required": false
        }
    },
    "create_source_location": {
        "AccessConfiguration": {
            "Description": "Access configuration parameters. Configures the type of authentication used to access content from your source location.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DefaultSegmentDeliveryConfiguration": {
            "Description": "The optional configuration for the server that serves segments.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HttpConfiguration": {
            "Description": "The source's HTTP package configurations.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "SegmentDeliveryConfigurations": {
            "Description": "A list of the segment delivery configurations associated with this resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to assign to the source location.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    },
    "create_vod_source": {
        "HttpPackageConfigurations": {
            "Description": "A list of HTTP package configuration parameters for this VOD source.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to assign to the VOD source.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VodSourceName": {
            "Description": "The identifier for the VOD source you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_channel": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_channel_policy": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_live_source": {
        "LiveSourceName": {
            "Description": "The identifier for the live source you are working on.",
            "Type": "string",
            "Required": true
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_playback_configuration": {
        "Name": {
            "Description": "The identifier for the playback configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_prefetch_schedule": {
        "Name": {
            "Description": "The identifier for the playback configuration.",
            "Type": "string",
            "Required": true
        },
        "PlaybackConfigurationName": {
            "Description": "The name of the playback configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_program": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "ProgramName": {
            "Description": "The identifier for the program you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_source_location": {
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_vod_source": {
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "VodSourceName": {
            "Description": "The identifier for the VOD source you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_channel": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_live_source": {
        "LiveSourceName": {
            "Description": "The identifier for the live source you are working on.",
            "Type": "string",
            "Required": true
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_program": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "ProgramName": {
            "Description": "The identifier for the program you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_source_location": {
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "describe_vod_source": {
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "VodSourceName": {
            "Description": "The identifier for the VOD source you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "get_channel_policy": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "get_channel_schedule": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "DurationMinutes": {
            "Description": "The schedule duration in minutes. The maximum duration is 4320 minutes (three days).",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "Upper bound on number of records to return. The maximum number of results is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token from the GET list request. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "get_playback_configuration": {
        "Name": {
            "Description": "The identifier for the playback configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "get_prefetch_schedule": {
        "Name": {
            "Description": "The identifier for the playback configuration.",
            "Type": "string",
            "Required": true
        },
        "PlaybackConfigurationName": {
            "Description": "The name of the playback configuration.",
            "Type": "string",
            "Required": true
        }
    },
    "list_alerts": {
        "MaxResults": {
            "Description": "Upper bound on number of records to return. The maximum number of results is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token from the GET list request. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        },
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) of the resource.",
            "Type": "string",
            "Required": true
        }
    },
    "list_channels": {
        "MaxResults": {
            "Description": "Upper bound on number of records to return. The maximum number of results is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token from the GET list request. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_live_sources": {
        "MaxResults": {
            "Description": "Upper bound on number of records to return. The maximum number of results is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token from the GET list request. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "list_playback_configurations": {
        "MaxResults": {
            "Description": "Maximum number of records to return.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token returned by the GET list request when results exceed the maximum allowed. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_prefetch_schedules": {
        "MaxResults": {
            "Description": "The maximum number of prefetch schedules that you want MediaTailor to return in response to the current request. If the playback configuration has more than MaxResults prefetch schedules, use the value of NextToken in the response to get the next page of results.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "(Optional) If the playback configuration has more than MaxResults prefetch schedules, use NextToken to get the second and subsequent pages of results.\nFor the first ListPrefetchSchedulesRequest request, omit this value.\nFor the second and subsequent requests, get the value of NextToken from the previous response and specify that value for NextToken in the request.\nIf the previous response didn't include a NextToken element, there are no more prefetch schedules to get.",
            "Type": "string",
            "Required": false
        },
        "PlaybackConfigurationName": {
            "Description": "The name of the playback configuration.",
            "Type": "string",
            "Required": true
        },
        "StreamId": {
            "Description": "An optional filtering parameter whereby MediaTailor filters the prefetch schedules to include only specific streams.",
            "Type": "string",
            "Required": false
        }
    },
    "list_source_locations": {
        "MaxResults": {
            "Description": "Upper bound on number of records to return. The maximum number of results is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token from the GET list request. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the playback configuration. You can get this from the response to any playback configuration request.",
            "Type": "string",
            "Required": true
        }
    },
    "list_vod_sources": {
        "MaxResults": {
            "Description": "Upper bound on number of records to return. The maximum number of results is 100.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "Pagination token from the GET list request. Use the token to fetch the next page of results.",
            "Type": "string",
            "Required": false
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "put_channel_policy": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "Policy": {
            "Description": "Adds an IAM role that determines the permissions of your channel.",
            "Type": "string",
            "Required": true
        }
    },
    "put_playback_configuration": {
        "AdDecisionServerUrl": {
            "Description": "The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.",
            "Type": "string",
            "Required": false
        },
        "AvailSuppression": {
            "Description": "The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Bumper": {
            "Description": "The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "CdnConfiguration": {
            "Description": "The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ConfigurationAliases": {
            "Description": "The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DashConfiguration": {
            "Description": "The configuration for DASH content.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "LivePreRollConfiguration": {
            "Description": "The configuration for pre-roll ad insertion.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "ManifestProcessingRules": {
            "Description": "The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Name": {
            "Description": "The identifier for the playback configuration.",
            "Type": "string",
            "Required": false
        },
        "PersonalizationThresholdSeconds": {
            "Description": "Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor .",
            "Type": "integer",
            "Required": false
        },
        "SlateAdUrl": {
            "Description": "The URL for a high-quality video asset to transcode and use to fill in time that's not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.",
            "Type": "string",
            "Required": false
        },
        "Tags": {
            "Description": "The tags to assign to the playback configuration.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "TranscodeProfileName": {
            "Description": "The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.",
            "Type": "string",
            "Required": false
        },
        "VideoContentSourceUrl": {
            "Description": "The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.",
            "Type": "string",
            "Required": false
        }
    },
    "start_channel": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "stop_channel": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the playback configuration. You can get this from the response to any playback configuration request.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "A comma-separated list of tag key:value pairs.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The Amazon Resource Name (ARN) for the playback configuration. You can get this from the response to any playback configuration request.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "A comma-separated list of the tag keys to remove from the playback configuration.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_channel": {
        "ChannelName": {
            "Description": "The identifier for the channel you are working on.",
            "Type": "string",
            "Required": true
        },
        "FillerSlate": {
            "Description": "The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the LINEAR PlaybackMode. MediaTailor doesn't support filler slate for channels using the LOOP PlaybackMode.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Outputs": {
            "Description": "The channel's output properties.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_live_source": {
        "HttpPackageConfigurations": {
            "Description": "A list of HTTP package configurations for the live source on this account.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "LiveSourceName": {
            "Description": "The identifier for the live source you are working on.",
            "Type": "string",
            "Required": true
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "update_source_location": {
        "AccessConfiguration": {
            "Description": "Access configuration parameters. Configures the type of authentication used to access content from your source location.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "DefaultSegmentDeliveryConfiguration": {
            "Description": "The optional configuration for the host server that serves segments.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "HttpConfiguration": {
            "Description": "The HTTP configuration for the source location.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "SegmentDeliveryConfigurations": {
            "Description": "A list of the segment delivery configurations associated with this resource.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "update_vod_source": {
        "HttpPackageConfigurations": {
            "Description": "A list of HTTP package configurations for the VOD source on this account.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "VodSourceName": {
            "Description": "The identifier for the VOD source you are working on.",
            "Type": "string",
            "Required": true
        }
    },
    "paginate": {
        "SourceLocationName": {
            "Description": "The identifier for the source location you are working on.",
            "Type": "string",
            "Required": true
        },
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}