{
    "accept_administrator_invitation": {
        "AdministratorId": {
            "Description": "The account ID of the Security Hub administrator account that sent the invitation.",
            "Type": "string",
            "Required": true
        },
        "InvitationId": {
            "Description": "The identifier of the invitation sent from the Security Hub administrator account.",
            "Type": "string",
            "Required": true
        }
    },
    "accept_invitation": {
        "MasterId": {
            "Description": "The account ID of the Security Hub administrator account that sent the invitation.",
            "Type": "string",
            "Required": true
        },
        "InvitationId": {
            "Description": "The identifier of the invitation sent from the Security Hub administrator account.",
            "Type": "string",
            "Required": true
        }
    },
    "batch_disable_standards": {
        "StandardsSubscriptionArns": {
            "Description": "The ARNs of the standards subscriptions to disable.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_enable_standards": {
        "StandardsSubscriptionRequests": {
            "Description": "The list of standards checks to enable.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_import_findings": {
        "Findings": {
            "Description": "A list of findings to import. To successfully import a finding, it must follow the Amazon Web Services Security Finding Format. Maximum of 100 findings per request.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "batch_update_findings": {
        "FindingIdentifiers": {
            "Description": "The list of findings to update. BatchUpdateFindings can be used to update up to 100 findings at a time.\nFor each finding, the list provides the finding identifier and the ARN of the finding provider.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        },
        "Note": {
            "Description": "The updated note.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Severity": {
            "Description": "Used to update the finding severity.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "VerificationState": {
            "Description": "Indicates the veracity of a finding.\nThe available values for VerificationState are as follows.",
            "Type": "string",
            "Required": false,
            "string variables": {}
        },
        "Confidence": {
            "Description": "The updated value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.\nConfidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.",
            "Type": "integer",
            "Required": false
        },
        "Criticality": {
            "Description": "The updated value for the level of importance assigned to the resources associated with the findings.\nA score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.",
            "Type": "integer",
            "Required": false
        },
        "Types": {
            "Description": "One or more finding types in the format of namespace/category/classifier that classify a finding.\nValid namespace values are as follows.",
            "Type": "list",
            "Required": false,
            "list variables": [
                {},
                {}
            ]
        },
        "UserDefinedFields": {
            "Description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "Workflow": {
            "Description": "Used to update the workflow status of a finding.\nThe workflow status indicates the progress of the investigation into the finding.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RelatedFindings": {
            "Description": "A list of findings that are related to the updated findings.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_action_target": {
        "Name": {
            "Description": "The name of the custom action target. Can contain up to 20 characters.",
            "Type": "string",
            "Required": true
        },
        "Description": {
            "Description": "The description for the custom action target.",
            "Type": "string",
            "Required": true
        },
        "Id": {
            "Description": "The ID for the custom action target. Can contain up to 20 alphanumeric characters.",
            "Type": "string",
            "Required": true
        }
    },
    "create_finding_aggregator": {
        "RegionLinkingMode": {
            "Description": "Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.\nThe selected option also determines how to use the Regions provided in the Regions list.\nThe options are as follows:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Regions": {
            "Description": "If RegionLinkingMode is ALL_REGIONS_EXCEPT_SPECIFIED, then this is a comma-separated list of Regions that do not aggregate findings to the aggregation Region.\nIf RegionLinkingMode is SPECIFIED_REGIONS, then this is a comma-separated list of Regions that do aggregate findings to the aggregation Region.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "create_insight": {
        "Name": {
            "Description": "The name of the custom insight to create.",
            "Type": "string",
            "Required": true
        },
        "Filters": {
            "Description": "One or more attributes used to filter the findings included in the insight. The insight only includes findings that match the criteria defined in the filters.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "GroupByAttribute": {
            "Description": "The attribute used to group the findings for the insight. The grouping attribute identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers.",
            "Type": "string",
            "Required": true
        }
    },
    "create_members": {
        "AccountDetails": {
            "Description": "The list of accounts to associate with the Security Hub administrator account. For each account, the list includes the account ID and optionally the email address.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "decline_invitations": {
        "AccountIds": {
            "Description": "The list of account IDs for the accounts from which to decline the invitations to Security Hub.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_action_target": {
        "ActionTargetArn": {
            "Description": "The ARN of the custom action target to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_finding_aggregator": {
        "FindingAggregatorArn": {
            "Description": "The ARN of the finding aggregator to delete. To obtain the ARN, use ListFindingAggregators .",
            "Type": "string",
            "Required": true
        }
    },
    "delete_insight": {
        "InsightArn": {
            "Description": "The ARN of the insight to delete.",
            "Type": "string",
            "Required": true
        }
    },
    "delete_invitations": {
        "AccountIds": {
            "Description": "The list of the account IDs that sent the invitations to delete.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "delete_members": {
        "AccountIds": {
            "Description": "The list of account IDs for the member accounts to delete.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "describe_action_targets": {
        "ActionTargetArns": {
            "Description": "A list of custom action target ARNs for the custom action targets to retrieve.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the DescribeActionTargets operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_hub": {
        "HubArn": {
            "Description": "The ARN of the Hub resource to retrieve.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_organization_configuration": "No parameters defined",
    "describe_products": {
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the DescribeProducts operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return.",
            "Type": "integer",
            "Required": false
        },
        "ProductArn": {
            "Description": "The ARN of the integration to return.",
            "Type": "string",
            "Required": false
        }
    },
    "describe_standards": {
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the DescribeStandards operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of standards to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "describe_standards_controls": {
        "StandardsSubscriptionArn": {
            "Description": "The ARN of a resource that represents your subscription to a supported standard. To get the subscription ARNs of the standards you have enabled, use the GetEnabledStandards operation.",
            "Type": "string",
            "Required": true
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the DescribeStandardsControls operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of security standard controls to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "disable_import_findings_for_product": {
        "ProductSubscriptionArn": {
            "Description": "The ARN of the integrated product to disable the integration for.",
            "Type": "string",
            "Required": true
        }
    },
    "disable_organization_admin_account": {
        "AdminAccountId": {
            "Description": "The Amazon Web Services account identifier of the Security Hub administrator account.",
            "Type": "string",
            "Required": true
        }
    },
    "disable_security_hub": "No parameters defined",
    "disassociate_from_administrator_account": "No parameters defined",
    "disassociate_from_master_account": "No parameters defined",
    "disassociate_members": {
        "AccountIds": {
            "Description": "The account IDs of the member accounts to disassociate from the administrator account.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "enable_import_findings_for_product": {
        "ProductArn": {
            "Description": "The ARN of the product to enable the integration for.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_organization_admin_account": {
        "AdminAccountId": {
            "Description": "The Amazon Web Services account identifier of the account to designate as the Security Hub administrator account.",
            "Type": "string",
            "Required": true
        }
    },
    "enable_security_hub": {
        "Tags": {
            "Description": "The tags to add to the hub resource when you enable Security Hub.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "EnableDefaultStandards": {
            "Description": "Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for EnableDefaultStandards , it is set to true . To not enable the automatically enabled standards, set EnableDefaultStandards to false .",
            "Type": "boolean",
            "Required": false
        }
    },
    "get_administrator_account": "No parameters defined",
    "get_enabled_standards": {
        "StandardsSubscriptionArns": {
            "Description": "The list of the standards subscription ARNs for the standards to retrieve.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the GetEnabledStandards operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return in the response.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_finding_aggregator": {
        "FindingAggregatorArn": {
            "Description": "The ARN of the finding aggregator to return details for. To obtain the ARN, use ListFindingAggregators .",
            "Type": "string",
            "Required": true
        }
    },
    "get_findings": {
        "Filters": {
            "Description": "The finding attributes used to define a condition to filter the returned findings.\nYou can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.\nNote that in the available filter fields, WorkflowState is deprecated. To search for a finding based on its workflow status, use WorkflowStatus .",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "SortCriteria": {
            "Description": "The finding attributes used to sort the list of returned findings.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the GetFindings operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of findings to return.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_insight_results": {
        "InsightArn": {
            "Description": "The ARN of the insight for which to return results.",
            "Type": "string",
            "Required": true
        }
    },
    "get_insights": {
        "InsightArns": {
            "Description": "The ARNs of the insights to describe. If you do not provide any insight ARNs, then GetInsights returns all of your custom insights. It does not return any managed insights.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the GetInsights operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return in the response.",
            "Type": "integer",
            "Required": false
        }
    },
    "get_invitations_count": "No parameters defined",
    "get_master_account": "No parameters defined",
    "get_members": {
        "AccountIds": {
            "Description": "The list of account IDs for the Security Hub member accounts to return the details for.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "invite_members": {
        "AccountIds": {
            "Description": "The list of account IDs of the Amazon Web Services accounts to invite to Security Hub as members.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "list_enabled_products_for_import": {
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the ListEnabledProductsForImport operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return in the response.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_finding_aggregators": {
        "NextToken": {
            "Description": "The token returned with the previous set of results. Identifies the next set of results to return.",
            "Type": "string",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of results to return. This operation currently only returns a single result.",
            "Type": "integer",
            "Required": false
        }
    },
    "list_invitations": {
        "MaxResults": {
            "Description": "The maximum number of items to return in the response.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the ListInvitations operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        }
    },
    "list_members": {
        "OnlyAssociated": {
            "Description": "Specifies which member accounts to include in the response based on their relationship status with the administrator account. The default value is TRUE .\nIf OnlyAssociated is set to TRUE, the response includes member accounts whose relationship status with the administrator account is set to ENABLED .\nIf OnlyAssociated is set to FALSE, the response includes all existing member accounts.",
            "Type": "boolean",
            "Required": false
        },
        "MaxResults": {
            "Description": "The maximum number of items to return in the response.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the ListMembers operation, set the value of this parameter to NULL .\nFor subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        }
    },
    "list_organization_admin_accounts": {
        "MaxResults": {
            "Description": "The maximum number of items to return in the response.",
            "Type": "integer",
            "Required": false
        },
        "NextToken": {
            "Description": "The token that is required for pagination. On your first call to the ListOrganizationAdminAccounts operation, set the value of this parameter to NULL . For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.",
            "Type": "string",
            "Required": false
        }
    },
    "list_tags_for_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource to retrieve tags for.",
            "Type": "string",
            "Required": true
        }
    },
    "tag_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource to apply the tags to.",
            "Type": "string",
            "Required": true
        },
        "Tags": {
            "Description": "The tags to add to the resource. You can add up to 50 tags at a time. The tag keys can be no longer than 128 characters. The tag values can be no longer than 256 characters.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        }
    },
    "untag_resource": {
        "ResourceArn": {
            "Description": "The ARN of the resource to remove the tags from.",
            "Type": "string",
            "Required": true
        },
        "TagKeys": {
            "Description": "The tag keys associated with the tags to remove from the resource. You can remove up to 50 tags at a time.",
            "Type": "list",
            "Required": true,
            "list variables": {}
        }
    },
    "update_action_target": {
        "ActionTargetArn": {
            "Description": "The ARN of the custom action target to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The updated name of the custom action target.",
            "Type": "string",
            "Required": false
        },
        "Description": {
            "Description": "The updated description for the custom action target.",
            "Type": "string",
            "Required": false
        }
    },
    "update_finding_aggregator": {
        "FindingAggregatorArn": {
            "Description": "The ARN of the finding aggregator. To obtain the ARN, use ListFindingAggregators .",
            "Type": "string",
            "Required": true
        },
        "RegionLinkingMode": {
            "Description": "Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.\nThe selected option also determines how to use the Regions provided in the Regions list.\nThe options are as follows:",
            "Type": "string",
            "Required": true,
            "string variables": {}
        },
        "Regions": {
            "Description": "If RegionLinkingMode is ALL_REGIONS_EXCEPT_SPECIFIED, then this is a comma-separated list of Regions that do not aggregate findings to the aggregation Region.\nIf RegionLinkingMode is SPECIFIED_REGIONS, then this is a comma-separated list of Regions that do aggregate findings to the aggregation Region.",
            "Type": "list",
            "Required": false,
            "list variables": {}
        }
    },
    "update_findings": {
        "Filters": {
            "Description": "A collection of attributes that specify which findings you want to update.",
            "Type": "dict",
            "Required": true,
            "dict variables": {}
        },
        "Note": {
            "Description": "The updated note for the finding.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "RecordState": {
            "Description": "The updated record state for the finding.",
            "Type": "string",
            "Required": false
        }
    },
    "update_insight": {
        "InsightArn": {
            "Description": "The ARN of the insight that you want to update.",
            "Type": "string",
            "Required": true
        },
        "Name": {
            "Description": "The updated name for the insight.",
            "Type": "string",
            "Required": false
        },
        "Filters": {
            "Description": "The updated filters that define this insight.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        },
        "GroupByAttribute": {
            "Description": "The updated GroupBy attribute that defines this insight.",
            "Type": "string",
            "Required": false
        }
    },
    "update_organization_configuration": {
        "AutoEnable": {
            "Description": "Whether to automatically enable Security Hub for new accounts in the organization.\nBy default, this is false, and new accounts are not added automatically.\nTo automatically enable Security Hub for new accounts, set this to true .",
            "Type": "boolean",
            "Required": true
        },
        "AutoEnableStandards": {
            "Description": "Whether to automatically enable Security Hub default standards for new member accounts in the organization.\nBy default, this parameter is equal to DEFAULT, and new member accounts are automatically enabled with default Security Hub standards.\nTo opt out of enabling default standards for new member accounts, set this parameter equal to NONE .",
            "Type": "string",
            "Required": false
        }
    },
    "update_security_hub_configuration": {
        "AutoEnableControls": {
            "Description": "Whether to automatically enable new controls when they are added to standards that are enabled.\nBy default, this is set to true, and new controls are enabled automatically. To not automatically enable new controls, set this to false .",
            "Type": "boolean",
            "Required": false
        }
    },
    "update_standards_control": {
        "StandardsControlArn": {
            "Description": "The ARN of the security standard control to enable or disable.",
            "Type": "string",
            "Required": true
        },
        "ControlStatus": {
            "Description": "The updated status of the security standard control.",
            "Type": "string",
            "Required": false
        },
        "DisabledReason": {
            "Description": "A description of the reason why you are disabling a security standard control. If you are disabling a control, then this is required.",
            "Type": "string",
            "Required": false
        }
    },
    "paginate": {
        "PaginationConfig": {
            "Description": "A dictionary that provides parameters to control pagination.",
            "Type": "dict",
            "Required": false,
            "dict variables": {}
        }
    }
}